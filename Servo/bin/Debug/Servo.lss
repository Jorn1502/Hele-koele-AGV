
bin\Debug\Servo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00000a66  00000afa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a66  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000afa  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  00000afd  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b10  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000078  00000000  00000000  00000b50  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00000f39  00000000  00000000  00000bc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000d60  00000000  00000000  00001b01  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   0000043a  00000000  00000000  00002861  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  000001a8  00000000  00000000  00002c9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    000005a6  00000000  00000000  00002e44  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 0000018e  00000000  00000000  000033ea  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
   4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
   c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  10:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  14:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  18:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  1c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  20:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  24:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  28:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  2c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  30:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  38:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  3c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  40:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  44:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__vector_17>
  48:	0c 94 26 02 	jmp	0x44c	; 0x44c <__vector_18>
  4c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  50:	0c 94 c4 01 	jmp	0x388	; 0x388 <__vector_20>
  54:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  58:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  5c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  60:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  64:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  68:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  6c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  70:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  74:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  78:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  7c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  80:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  84:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  88:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  8c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  90:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  94:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  98:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  9c:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  a8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  ac:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  b8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  bc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  c8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  cc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d4:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  d8:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  dc:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>
  e0:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__bad_interrupt>

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	0e 94 8a 00 	call	0x114	; 0x114 <main>
  f8:	0c 94 31 05 	jmp	0xa62	; 0xa62 <_exit>

000000fc <__bad_interrupt>:
  fc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000100 <init>:
#include <util/delay.h>

#include "servo2.h"

void init(void)
{
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62

00000108 <.Loc.1>:
	init_servo();
 108:	0e 94 4e 02 	call	0x49c	; 0x49c <init_servo>

0000010c <.Loc.2>:
}
 10c:	00 00       	nop
 10e:	df 91       	pop	r29
 110:	cf 91       	pop	r28
 112:	08 95       	ret

00000114 <main>:

int main(void)
{
 114:	cf 93       	push	r28
 116:	df 93       	push	r29
 118:	cd b7       	in	r28, 0x3d	; 61
 11a:	de b7       	in	r29, 0x3e	; 62
 11c:	c4 54       	subi	r28, 0x44	; 68
 11e:	d1 09       	sbc	r29, r1
 120:	0f b6       	in	r0, 0x3f	; 63
 122:	f8 94       	cli
 124:	de bf       	out	0x3e, r29	; 62
 126:	0f be       	out	0x3f, r0	; 63
 128:	cd bf       	out	0x3d, r28	; 61

0000012a <.Loc.4>:
	init ();
 12a:	0e 94 80 00 	call	0x100	; 0x100 <init>

0000012e <.L19>:
	while (1)
	{

			servo1_set_percentage(100);
 12e:	84 e6       	ldi	r24, 0x64	; 100
 130:	0e 94 84 02 	call	0x508	; 0x508 <servo1_set_percentage>
 134:	80 e0       	ldi	r24, 0x00	; 0
 136:	90 e0       	ldi	r25, 0x00	; 0
 138:	aa e7       	ldi	r26, 0x7A	; 122
 13a:	b4 e4       	ldi	r27, 0x44	; 68
 13c:	8f 87       	std	Y+15, r24	; 0x0f
 13e:	98 8b       	std	Y+16, r25	; 0x10
 140:	a9 8b       	std	Y+17, r26	; 0x11
 142:	ba 8b       	std	Y+18, r27	; 0x12

00000144 <.LBB18>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 144:	20 e0       	ldi	r18, 0x00	; 0
 146:	30 e0       	ldi	r19, 0x00	; 0
 148:	4a e7       	ldi	r20, 0x7A	; 122
 14a:	55 e4       	ldi	r21, 0x45	; 69
 14c:	6f 85       	ldd	r22, Y+15	; 0x0f
 14e:	78 89       	ldd	r23, Y+16	; 0x10
 150:	89 89       	ldd	r24, Y+17	; 0x11
 152:	9a 89       	ldd	r25, Y+18	; 0x12
 154:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>
 158:	6d a3       	std	Y+37, r22	; 0x25
 15a:	7e a3       	std	Y+38, r23	; 0x26
 15c:	8f a3       	std	Y+39, r24	; 0x27
 15e:	98 a7       	std	Y+40, r25	; 0x28
 160:	8d a1       	ldd	r24, Y+37	; 0x25
 162:	9e a1       	ldd	r25, Y+38	; 0x26
 164:	af a1       	ldd	r26, Y+39	; 0x27
 166:	b8 a5       	ldd	r27, Y+40	; 0x28
 168:	8b 8b       	std	Y+19, r24	; 0x13
 16a:	9c 8b       	std	Y+20, r25	; 0x14
 16c:	ad 8b       	std	Y+21, r26	; 0x15
 16e:	be 8b       	std	Y+22, r27	; 0x16

00000170 <.Loc.7>:
	if (__tmp < 1.0)
 170:	20 e0       	ldi	r18, 0x00	; 0
 172:	30 e0       	ldi	r19, 0x00	; 0
 174:	40 e8       	ldi	r20, 0x80	; 128
 176:	5f e3       	ldi	r21, 0x3F	; 63
 178:	6b 89       	ldd	r22, Y+19	; 0x13
 17a:	7c 89       	ldd	r23, Y+20	; 0x14
 17c:	8d 89       	ldd	r24, Y+21	; 0x15
 17e:	9e 89       	ldd	r25, Y+22	; 0x16
 180:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__cmpsf2>
 184:	88 23       	and	r24, r24
 186:	2c f4       	brge	.+10     	; 0x192 <.L24>

00000188 <.Loc.8>:
		__ticks = 1;
 188:	81 e0       	ldi	r24, 0x01	; 1
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	98 8f       	std	Y+24, r25	; 0x18
 18e:	8f 8b       	std	Y+23, r24	; 0x17
 190:	55 c0       	rjmp	.+170    	; 0x23c <.L5>

00000192 <.L24>:
	else if (__tmp > 65535)
 192:	20 e0       	ldi	r18, 0x00	; 0
 194:	3f ef       	ldi	r19, 0xFF	; 255
 196:	4f e7       	ldi	r20, 0x7F	; 127
 198:	57 e4       	ldi	r21, 0x47	; 71
 19a:	6b 89       	ldd	r22, Y+19	; 0x13
 19c:	7c 89       	ldd	r23, Y+20	; 0x14
 19e:	8d 89       	ldd	r24, Y+21	; 0x15
 1a0:	9e 89       	ldd	r25, Y+22	; 0x16
 1a2:	0e 94 bf 04 	call	0x97e	; 0x97e <__gesf2>
 1a6:	88 23       	and	r24, r24
 1a8:	d9 f1       	breq	.+118    	; 0x220 <.L25>
 1aa:	d4 f1       	brlt	.+116    	; 0x220 <.L25>

000001ac <.Loc.10>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 1ac:	20 e0       	ldi	r18, 0x00	; 0
 1ae:	30 e0       	ldi	r19, 0x00	; 0
 1b0:	40 e2       	ldi	r20, 0x20	; 32
 1b2:	51 e4       	ldi	r21, 0x41	; 65
 1b4:	6f 85       	ldd	r22, Y+15	; 0x0f
 1b6:	78 89       	ldd	r23, Y+16	; 0x10
 1b8:	89 89       	ldd	r24, Y+17	; 0x11
 1ba:	9a 89       	ldd	r25, Y+18	; 0x12
 1bc:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>
 1c0:	69 a7       	std	Y+41, r22	; 0x29
 1c2:	7a a7       	std	Y+42, r23	; 0x2a
 1c4:	8b a7       	std	Y+43, r24	; 0x2b
 1c6:	9c a7       	std	Y+44, r25	; 0x2c
 1c8:	89 a5       	ldd	r24, Y+41	; 0x29
 1ca:	9a a5       	ldd	r25, Y+42	; 0x2a
 1cc:	ab a5       	ldd	r26, Y+43	; 0x2b
 1ce:	bc a5       	ldd	r27, Y+44	; 0x2c
 1d0:	89 a3       	std	Y+33, r24	; 0x21
 1d2:	9a a3       	std	Y+34, r25	; 0x22
 1d4:	ab a3       	std	Y+35, r26	; 0x23
 1d6:	bc a3       	std	Y+36, r27	; 0x24

000001d8 <.Loc.11>:
 1d8:	69 a1       	ldd	r22, Y+33	; 0x21
 1da:	7a a1       	ldd	r23, Y+34	; 0x22
 1dc:	8b a1       	ldd	r24, Y+35	; 0x23
 1de:	9c a1       	ldd	r25, Y+36	; 0x24
 1e0:	0e 94 de 03 	call	0x7bc	; 0x7bc <__fixunssfsi>
 1e4:	6d a7       	std	Y+45, r22	; 0x2d
 1e6:	7e a7       	std	Y+46, r23	; 0x2e
 1e8:	8f a7       	std	Y+47, r24	; 0x2f
 1ea:	98 ab       	std	Y+48, r25	; 0x30
 1ec:	ad a5       	ldd	r26, Y+45	; 0x2d
 1ee:	be a5       	ldd	r27, Y+46	; 0x2e
 1f0:	b8 8f       	std	Y+24, r27	; 0x18
 1f2:	af 8b       	std	Y+23, r26	; 0x17

000001f4 <.Loc.12>:
		while(__ticks)
 1f4:	10 c0       	rjmp	.+32     	; 0x216 <.L8>

000001f6 <.L9>:
 1f6:	80 e9       	ldi	r24, 0x90	; 144
 1f8:	91 e0       	ldi	r25, 0x01	; 1
 1fa:	9a 8f       	std	Y+26, r25	; 0x1a
 1fc:	89 8f       	std	Y+25, r24	; 0x19

000001fe <.LBB20>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 1fe:	89 8d       	ldd	r24, Y+25	; 0x19
 200:	9a 8d       	ldd	r25, Y+26	; 0x1a

00000202 <.L1^B1>:
 202:	01 97       	sbiw	r24, 0x01	; 1
 204:	f1 f7       	brne	.-4      	; 0x202 <.L1^B1>
 206:	9a 8f       	std	Y+26, r25	; 0x1a
 208:	89 8f       	std	Y+25, r24	; 0x19

0000020a <.Loc.14>:
	...

0000020c <.LBE20>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 20c:	8f 89       	ldd	r24, Y+23	; 0x17
 20e:	98 8d       	ldd	r25, Y+24	; 0x18
 210:	01 97       	sbiw	r24, 0x01	; 1
 212:	98 8f       	std	Y+24, r25	; 0x18
 214:	8f 8b       	std	Y+23, r24	; 0x17

00000216 <.L8>:
		while(__ticks)
 216:	8f 89       	ldd	r24, Y+23	; 0x17
 218:	98 8d       	ldd	r25, Y+24	; 0x18
 21a:	00 97       	sbiw	r24, 0x00	; 0
 21c:	61 f7       	brne	.-40     	; 0x1f6 <.L9>

0000021e <.Loc.17>:
		}
		return;
 21e:	19 c0       	rjmp	.+50     	; 0x252 <.L10>

00000220 <.L25>:
	}
	else
		__ticks = (uint16_t)__tmp;
 220:	6b 89       	ldd	r22, Y+19	; 0x13
 222:	7c 89       	ldd	r23, Y+20	; 0x14
 224:	8d 89       	ldd	r24, Y+21	; 0x15
 226:	9e 89       	ldd	r25, Y+22	; 0x16
 228:	0e 94 de 03 	call	0x7bc	; 0x7bc <__fixunssfsi>
 22c:	69 ab       	std	Y+49, r22	; 0x31
 22e:	7a ab       	std	Y+50, r23	; 0x32
 230:	8b ab       	std	Y+51, r24	; 0x33
 232:	9c ab       	std	Y+52, r25	; 0x34
 234:	89 a9       	ldd	r24, Y+49	; 0x31
 236:	9a a9       	ldd	r25, Y+50	; 0x32
 238:	98 8f       	std	Y+24, r25	; 0x18
 23a:	8f 8b       	std	Y+23, r24	; 0x17

0000023c <.L5>:
 23c:	8f 89       	ldd	r24, Y+23	; 0x17
 23e:	98 8d       	ldd	r25, Y+24	; 0x18
 240:	9c 8f       	std	Y+28, r25	; 0x1c
 242:	8b 8f       	std	Y+27, r24	; 0x1b

00000244 <.LBB22>:
 244:	8b 8d       	ldd	r24, Y+27	; 0x1b
 246:	9c 8d       	ldd	r25, Y+28	; 0x1c

00000248 <.L1^B2>:
 248:	01 97       	sbiw	r24, 0x01	; 1
 24a:	f1 f7       	brne	.-4      	; 0x248 <.L1^B2>
 24c:	9c 8f       	std	Y+28, r25	; 0x1c
 24e:	8b 8f       	std	Y+27, r24	; 0x1b

00000250 <.Loc.20>:
	...

00000252 <.L10>:
			_delay_ms (1000);
			servo1_set_percentage(-100);
 252:	8c e9       	ldi	r24, 0x9C	; 156
 254:	0e 94 84 02 	call	0x508	; 0x508 <servo1_set_percentage>
 258:	80 e0       	ldi	r24, 0x00	; 0
 25a:	90 e4       	ldi	r25, 0x40	; 64
 25c:	ac e1       	ldi	r26, 0x1C	; 28
 25e:	b6 e4       	ldi	r27, 0x46	; 70
 260:	89 83       	std	Y+1, r24	; 0x01
 262:	9a 83       	std	Y+2, r25	; 0x02
 264:	ab 83       	std	Y+3, r26	; 0x03
 266:	bc 83       	std	Y+4, r27	; 0x04

00000268 <.LBB24>:
	__tmp = ((F_CPU) / 4e3) * __ms;
 268:	20 e0       	ldi	r18, 0x00	; 0
 26a:	30 e0       	ldi	r19, 0x00	; 0
 26c:	4a e7       	ldi	r20, 0x7A	; 122
 26e:	55 e4       	ldi	r21, 0x45	; 69
 270:	69 81       	ldd	r22, Y+1	; 0x01
 272:	7a 81       	ldd	r23, Y+2	; 0x02
 274:	8b 81       	ldd	r24, Y+3	; 0x03
 276:	9c 81       	ldd	r25, Y+4	; 0x04
 278:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>
 27c:	6d ab       	std	Y+53, r22	; 0x35
 27e:	7e ab       	std	Y+54, r23	; 0x36
 280:	8f ab       	std	Y+55, r24	; 0x37
 282:	98 af       	std	Y+56, r25	; 0x38
 284:	8d a9       	ldd	r24, Y+53	; 0x35
 286:	9e a9       	ldd	r25, Y+54	; 0x36
 288:	af a9       	ldd	r26, Y+55	; 0x37
 28a:	b8 ad       	ldd	r27, Y+56	; 0x38
 28c:	8d 83       	std	Y+5, r24	; 0x05
 28e:	9e 83       	std	Y+6, r25	; 0x06
 290:	af 83       	std	Y+7, r26	; 0x07
 292:	b8 87       	std	Y+8, r27	; 0x08

00000294 <.Loc.23>:
	if (__tmp < 1.0)
 294:	20 e0       	ldi	r18, 0x00	; 0
 296:	30 e0       	ldi	r19, 0x00	; 0
 298:	40 e8       	ldi	r20, 0x80	; 128
 29a:	5f e3       	ldi	r21, 0x3F	; 63
 29c:	6d 81       	ldd	r22, Y+5	; 0x05
 29e:	7e 81       	ldd	r23, Y+6	; 0x06
 2a0:	8f 81       	ldd	r24, Y+7	; 0x07
 2a2:	98 85       	ldd	r25, Y+8	; 0x08
 2a4:	0e 94 d9 03 	call	0x7b2	; 0x7b2 <__cmpsf2>
 2a8:	88 23       	and	r24, r24
 2aa:	2c f4       	brge	.+10     	; 0x2b6 <.L26>

000002ac <.Loc.24>:
		__ticks = 1;
 2ac:	81 e0       	ldi	r24, 0x01	; 1
 2ae:	90 e0       	ldi	r25, 0x00	; 0
 2b0:	9a 87       	std	Y+10, r25	; 0x0a
 2b2:	89 87       	std	Y+9, r24	; 0x09
 2b4:	5c c0       	rjmp	.+184    	; 0x36e <.L13>

000002b6 <.L26>:
	else if (__tmp > 65535)
 2b6:	20 e0       	ldi	r18, 0x00	; 0
 2b8:	3f ef       	ldi	r19, 0xFF	; 255
 2ba:	4f e7       	ldi	r20, 0x7F	; 127
 2bc:	57 e4       	ldi	r21, 0x47	; 71
 2be:	6d 81       	ldd	r22, Y+5	; 0x05
 2c0:	7e 81       	ldd	r23, Y+6	; 0x06
 2c2:	8f 81       	ldd	r24, Y+7	; 0x07
 2c4:	98 85       	ldd	r25, Y+8	; 0x08
 2c6:	0e 94 bf 04 	call	0x97e	; 0x97e <__gesf2>
 2ca:	88 23       	and	r24, r24
 2cc:	09 f0       	breq	.+2      	; 0x2d0 <L0^A>

000002ce <L0^A>:
 2ce:	0c f4       	brge	.+2      	; 0x2d2 <.Loc.26>

000002d0 <L0^A>:
 2d0:	3c c0       	rjmp	.+120    	; 0x34a <.L27>

000002d2 <.Loc.26>:
		__ticks = (uint16_t) (__ms * 10.0);
 2d2:	20 e0       	ldi	r18, 0x00	; 0
 2d4:	30 e0       	ldi	r19, 0x00	; 0
 2d6:	40 e2       	ldi	r20, 0x20	; 32
 2d8:	51 e4       	ldi	r21, 0x41	; 65
 2da:	69 81       	ldd	r22, Y+1	; 0x01
 2dc:	7a 81       	ldd	r23, Y+2	; 0x02
 2de:	8b 81       	ldd	r24, Y+3	; 0x03
 2e0:	9c 81       	ldd	r25, Y+4	; 0x04
 2e2:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>
 2e6:	69 af       	std	Y+57, r22	; 0x39
 2e8:	7a af       	std	Y+58, r23	; 0x3a
 2ea:	8b af       	std	Y+59, r24	; 0x3b
 2ec:	9c af       	std	Y+60, r25	; 0x3c
 2ee:	89 ad       	ldd	r24, Y+57	; 0x39
 2f0:	9a ad       	ldd	r25, Y+58	; 0x3a
 2f2:	ab ad       	ldd	r26, Y+59	; 0x3b
 2f4:	bc ad       	ldd	r27, Y+60	; 0x3c
 2f6:	8d 8f       	std	Y+29, r24	; 0x1d
 2f8:	9e 8f       	std	Y+30, r25	; 0x1e
 2fa:	af 8f       	std	Y+31, r26	; 0x1f
 2fc:	b8 a3       	std	Y+32, r27	; 0x20

000002fe <.Loc.27>:
 2fe:	6d 8d       	ldd	r22, Y+29	; 0x1d
 300:	7e 8d       	ldd	r23, Y+30	; 0x1e
 302:	8f 8d       	ldd	r24, Y+31	; 0x1f
 304:	98 a1       	ldd	r25, Y+32	; 0x20
 306:	0e 94 de 03 	call	0x7bc	; 0x7bc <__fixunssfsi>
 30a:	21 96       	adiw	r28, 0x01	; 1
 30c:	6c af       	std	Y+60, r22	; 0x3c
 30e:	7d af       	std	Y+61, r23	; 0x3d
 310:	8e af       	std	Y+62, r24	; 0x3e
 312:	9f af       	std	Y+63, r25	; 0x3f
 314:	21 97       	sbiw	r28, 0x01	; 1
 316:	ad ad       	ldd	r26, Y+61	; 0x3d
 318:	be ad       	ldd	r27, Y+62	; 0x3e
 31a:	ba 87       	std	Y+10, r27	; 0x0a
 31c:	a9 87       	std	Y+9, r26	; 0x09

0000031e <.Loc.28>:
		while(__ticks)
 31e:	10 c0       	rjmp	.+32     	; 0x340 <.L16>

00000320 <.L17>:
 320:	80 e9       	ldi	r24, 0x90	; 144
 322:	91 e0       	ldi	r25, 0x01	; 1
 324:	9c 87       	std	Y+12, r25	; 0x0c
 326:	8b 87       	std	Y+11, r24	; 0x0b

00000328 <.LBB26>:
 328:	8b 85       	ldd	r24, Y+11	; 0x0b
 32a:	9c 85       	ldd	r25, Y+12	; 0x0c

0000032c <.L1^B3>:
 32c:	01 97       	sbiw	r24, 0x01	; 1
 32e:	f1 f7       	brne	.-4      	; 0x32c <.L1^B3>
 330:	9c 87       	std	Y+12, r25	; 0x0c
 332:	8b 87       	std	Y+11, r24	; 0x0b

00000334 <.Loc.30>:
	...

00000336 <.LBE26>:
			__ticks --;
 336:	89 85       	ldd	r24, Y+9	; 0x09
 338:	9a 85       	ldd	r25, Y+10	; 0x0a
 33a:	01 97       	sbiw	r24, 0x01	; 1
 33c:	9a 87       	std	Y+10, r25	; 0x0a
 33e:	89 87       	std	Y+9, r24	; 0x09

00000340 <.L16>:
		while(__ticks)
 340:	89 85       	ldd	r24, Y+9	; 0x09
 342:	9a 85       	ldd	r25, Y+10	; 0x0a
 344:	00 97       	sbiw	r24, 0x00	; 0
 346:	61 f7       	brne	.-40     	; 0x320 <.L17>

00000348 <.Loc.33>:
		return;
 348:	1d c0       	rjmp	.+58     	; 0x384 <.L18>

0000034a <.L27>:
		__ticks = (uint16_t)__tmp;
 34a:	6d 81       	ldd	r22, Y+5	; 0x05
 34c:	7e 81       	ldd	r23, Y+6	; 0x06
 34e:	8f 81       	ldd	r24, Y+7	; 0x07
 350:	98 85       	ldd	r25, Y+8	; 0x08
 352:	0e 94 de 03 	call	0x7bc	; 0x7bc <__fixunssfsi>
 356:	25 96       	adiw	r28, 0x05	; 5
 358:	6c af       	std	Y+60, r22	; 0x3c
 35a:	7d af       	std	Y+61, r23	; 0x3d
 35c:	8e af       	std	Y+62, r24	; 0x3e
 35e:	9f af       	std	Y+63, r25	; 0x3f
 360:	25 97       	sbiw	r28, 0x05	; 5
 362:	23 96       	adiw	r28, 0x03	; 3
 364:	8e ad       	ldd	r24, Y+62	; 0x3e
 366:	9f ad       	ldd	r25, Y+63	; 0x3f
 368:	23 97       	sbiw	r28, 0x03	; 3
 36a:	9a 87       	std	Y+10, r25	; 0x0a
 36c:	89 87       	std	Y+9, r24	; 0x09

0000036e <.L13>:
 36e:	89 85       	ldd	r24, Y+9	; 0x09
 370:	9a 85       	ldd	r25, Y+10	; 0x0a
 372:	9e 87       	std	Y+14, r25	; 0x0e
 374:	8d 87       	std	Y+13, r24	; 0x0d

00000376 <.LBB28>:
 376:	8d 85       	ldd	r24, Y+13	; 0x0d
 378:	9e 85       	ldd	r25, Y+14	; 0x0e

0000037a <.L1^B4>:
 37a:	01 97       	sbiw	r24, 0x01	; 1
 37c:	f1 f7       	brne	.-4      	; 0x37a <.L1^B4>
 37e:	9e 87       	std	Y+14, r25	; 0x0e
 380:	8d 87       	std	Y+13, r24	; 0x0d

00000382 <.Loc.36>:
	...

00000384 <.L18>:
			servo1_set_percentage(100);
 384:	00 00       	nop
 386:	d3 ce       	rjmp	.-602    	; 0x12e <.L19>

00000388 <__vector_20>:
#define RESET_VALUE	(65636ul-TIME_VALUE)
#define STOP_VALUE	(TIME_VALUE*0.075)
#define RANGE		(TIME_VALUE*0.025)

ISR(TIMER1_OVF_vect)
{
 388:	1f 92       	push	r1
 38a:	0f 92       	push	r0
 38c:	0f b6       	in	r0, 0x3f	; 63
 38e:	0f 92       	push	r0
 390:	11 24       	eor	r1, r1
 392:	0b b6       	in	r0, 0x3b	; 59
 394:	0f 92       	push	r0
 396:	2f 93       	push	r18
 398:	3f 93       	push	r19
 39a:	8f 93       	push	r24
 39c:	9f 93       	push	r25
 39e:	ef 93       	push	r30
 3a0:	ff 93       	push	r31
 3a2:	cf 93       	push	r28
 3a4:	df 93       	push	r29
 3a6:	cd b7       	in	r28, 0x3d	; 61
 3a8:	de b7       	in	r29, 0x3e	; 62

000003aa <.Loc.1>:
	TCNT1 = RESET_VALUE;
 3aa:	84 e8       	ldi	r24, 0x84	; 132
 3ac:	90 e0       	ldi	r25, 0x00	; 0

000003ae <.Loc.2>:
 3ae:	24 e2       	ldi	r18, 0x24	; 36
 3b0:	34 e6       	ldi	r19, 0x64	; 100
 3b2:	fc 01       	movw	r30, r24
 3b4:	31 83       	std	Z+1, r19	; 0x01
 3b6:	20 83       	st	Z, r18

000003b8 <.Loc.3>:

	PORT_1 |= (1<<PIN_1);
 3b8:	8e e2       	ldi	r24, 0x2E	; 46
 3ba:	90 e0       	ldi	r25, 0x00	; 0
 3bc:	fc 01       	movw	r30, r24
 3be:	20 81       	ld	r18, Z
 3c0:	8e e2       	ldi	r24, 0x2E	; 46
 3c2:	90 e0       	ldi	r25, 0x00	; 0

000003c4 <.Loc.4>:
 3c4:	28 60       	ori	r18, 0x08	; 8
 3c6:	fc 01       	movw	r30, r24
 3c8:	20 83       	st	Z, r18

000003ca <.Loc.5>:
	PORT_2 |= (1<<PIN_2);
 3ca:	82 e0       	ldi	r24, 0x02	; 2
 3cc:	91 e0       	ldi	r25, 0x01	; 1
 3ce:	fc 01       	movw	r30, r24
 3d0:	20 81       	ld	r18, Z
 3d2:	82 e0       	ldi	r24, 0x02	; 2
 3d4:	91 e0       	ldi	r25, 0x01	; 1

000003d6 <.Loc.6>:
 3d6:	28 60       	ori	r18, 0x08	; 8
 3d8:	fc 01       	movw	r30, r24
 3da:	20 83       	st	Z, r18

000003dc <.Loc.7>:
}
 3dc:	00 00       	nop
 3de:	df 91       	pop	r29
 3e0:	cf 91       	pop	r28
 3e2:	ff 91       	pop	r31
 3e4:	ef 91       	pop	r30
 3e6:	9f 91       	pop	r25
 3e8:	8f 91       	pop	r24
 3ea:	3f 91       	pop	r19
 3ec:	2f 91       	pop	r18
 3ee:	0f 90       	pop	r0
 3f0:	0b be       	out	0x3b, r0	; 59
 3f2:	0f 90       	pop	r0
 3f4:	0f be       	out	0x3f, r0	; 63
 3f6:	0f 90       	pop	r0
 3f8:	1f 90       	pop	r1
 3fa:	18 95       	reti

000003fc <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
 3fc:	1f 92       	push	r1
 3fe:	0f 92       	push	r0
 400:	0f b6       	in	r0, 0x3f	; 63
 402:	0f 92       	push	r0
 404:	11 24       	eor	r1, r1
 406:	0b b6       	in	r0, 0x3b	; 59
 408:	0f 92       	push	r0
 40a:	2f 93       	push	r18
 40c:	8f 93       	push	r24
 40e:	9f 93       	push	r25
 410:	ef 93       	push	r30
 412:	ff 93       	push	r31
 414:	cf 93       	push	r28
 416:	df 93       	push	r29
 418:	cd b7       	in	r28, 0x3d	; 61
 41a:	de b7       	in	r29, 0x3e	; 62

0000041c <.Loc.9>:
	PORT_1 &= ~(1<<PIN_1);
 41c:	8e e2       	ldi	r24, 0x2E	; 46
 41e:	90 e0       	ldi	r25, 0x00	; 0
 420:	fc 01       	movw	r30, r24
 422:	20 81       	ld	r18, Z

00000424 <.Loc.10>:
 424:	8e e2       	ldi	r24, 0x2E	; 46
 426:	90 e0       	ldi	r25, 0x00	; 0

00000428 <.Loc.11>:
 428:	27 7f       	andi	r18, 0xF7	; 247
 42a:	fc 01       	movw	r30, r24
 42c:	20 83       	st	Z, r18

0000042e <.Loc.12>:
}
 42e:	00 00       	nop
 430:	df 91       	pop	r29
 432:	cf 91       	pop	r28
 434:	ff 91       	pop	r31
 436:	ef 91       	pop	r30
 438:	9f 91       	pop	r25
 43a:	8f 91       	pop	r24
 43c:	2f 91       	pop	r18
 43e:	0f 90       	pop	r0
 440:	0b be       	out	0x3b, r0	; 59
 442:	0f 90       	pop	r0
 444:	0f be       	out	0x3f, r0	; 63
 446:	0f 90       	pop	r0
 448:	1f 90       	pop	r1
 44a:	18 95       	reti

0000044c <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
 44c:	1f 92       	push	r1
 44e:	0f 92       	push	r0
 450:	0f b6       	in	r0, 0x3f	; 63
 452:	0f 92       	push	r0
 454:	11 24       	eor	r1, r1
 456:	0b b6       	in	r0, 0x3b	; 59
 458:	0f 92       	push	r0
 45a:	2f 93       	push	r18
 45c:	8f 93       	push	r24
 45e:	9f 93       	push	r25
 460:	ef 93       	push	r30
 462:	ff 93       	push	r31
 464:	cf 93       	push	r28
 466:	df 93       	push	r29
 468:	cd b7       	in	r28, 0x3d	; 61
 46a:	de b7       	in	r29, 0x3e	; 62

0000046c <.Loc.14>:
	PORT_2 &= ~(1<<PIN_2);
 46c:	82 e0       	ldi	r24, 0x02	; 2
 46e:	91 e0       	ldi	r25, 0x01	; 1
 470:	fc 01       	movw	r30, r24
 472:	20 81       	ld	r18, Z

00000474 <.Loc.15>:
 474:	82 e0       	ldi	r24, 0x02	; 2
 476:	91 e0       	ldi	r25, 0x01	; 1

00000478 <.Loc.16>:
 478:	27 7f       	andi	r18, 0xF7	; 247
 47a:	fc 01       	movw	r30, r24
 47c:	20 83       	st	Z, r18

0000047e <.Loc.17>:
}
 47e:	00 00       	nop
 480:	df 91       	pop	r29
 482:	cf 91       	pop	r28
 484:	ff 91       	pop	r31
 486:	ef 91       	pop	r30
 488:	9f 91       	pop	r25
 48a:	8f 91       	pop	r24
 48c:	2f 91       	pop	r18
 48e:	0f 90       	pop	r0
 490:	0b be       	out	0x3b, r0	; 59
 492:	0f 90       	pop	r0
 494:	0f be       	out	0x3f, r0	; 63
 496:	0f 90       	pop	r0
 498:	1f 90       	pop	r1
 49a:	18 95       	reti

0000049c <init_servo>:

void init_servo(void)
{
 49c:	cf 93       	push	r28
 49e:	df 93       	push	r29
 4a0:	cd b7       	in	r28, 0x3d	; 61
 4a2:	de b7       	in	r29, 0x3e	; 62

000004a4 <.Loc.19>:
	// Config pins as output
	DDR_1 |= (1<<PIN_1);
 4a4:	8d e2       	ldi	r24, 0x2D	; 45
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	fc 01       	movw	r30, r24
 4aa:	20 81       	ld	r18, Z
 4ac:	8d e2       	ldi	r24, 0x2D	; 45
 4ae:	90 e0       	ldi	r25, 0x00	; 0

000004b0 <.Loc.20>:
 4b0:	28 60       	ori	r18, 0x08	; 8
 4b2:	fc 01       	movw	r30, r24
 4b4:	20 83       	st	Z, r18

000004b6 <.Loc.21>:
	DDR_2 |= (1<<PIN_2);
 4b6:	81 e0       	ldi	r24, 0x01	; 1
 4b8:	91 e0       	ldi	r25, 0x01	; 1
 4ba:	fc 01       	movw	r30, r24
 4bc:	20 81       	ld	r18, Z
 4be:	81 e0       	ldi	r24, 0x01	; 1
 4c0:	91 e0       	ldi	r25, 0x01	; 1

000004c2 <.Loc.22>:
 4c2:	28 60       	ori	r18, 0x08	; 8
 4c4:	fc 01       	movw	r30, r24
 4c6:	20 83       	st	Z, r18

000004c8 <.Loc.23>:

	// Use mode 0, clkdiv = 8
	TCCR1A = 0;
 4c8:	80 e8       	ldi	r24, 0x80	; 128
 4ca:	90 e0       	ldi	r25, 0x00	; 0

000004cc <.Loc.24>:
 4cc:	fc 01       	movw	r30, r24
 4ce:	10 82       	st	Z, r1

000004d0 <.Loc.25>:
	TCCR1B = (0<<CS12) | (1<<CS11) | (0<<CS10);
 4d0:	81 e8       	ldi	r24, 0x81	; 129
 4d2:	90 e0       	ldi	r25, 0x00	; 0

000004d4 <.Loc.26>:
 4d4:	22 e0       	ldi	r18, 0x02	; 2
 4d6:	fc 01       	movw	r30, r24
 4d8:	20 83       	st	Z, r18

000004da <.Loc.27>:
	// Interrupts on OCA, OCB and OVF
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
 4da:	8f e6       	ldi	r24, 0x6F	; 111
 4dc:	90 e0       	ldi	r25, 0x00	; 0

000004de <.Loc.28>:
 4de:	27 e0       	ldi	r18, 0x07	; 7
 4e0:	fc 01       	movw	r30, r24
 4e2:	20 83       	st	Z, r18

000004e4 <.Loc.29>:

	TCNT1 = RESET_VALUE;
 4e4:	84 e8       	ldi	r24, 0x84	; 132
 4e6:	90 e0       	ldi	r25, 0x00	; 0

000004e8 <.Loc.30>:
 4e8:	24 e2       	ldi	r18, 0x24	; 36
 4ea:	34 e6       	ldi	r19, 0x64	; 100
 4ec:	fc 01       	movw	r30, r24
 4ee:	31 83       	std	Z+1, r19	; 0x01
 4f0:	20 83       	st	Z, r18

000004f2 <.Loc.31>:

	servo1_set_percentage(0);
 4f2:	80 e0       	ldi	r24, 0x00	; 0
 4f4:	0e 94 84 02 	call	0x508	; 0x508 <servo1_set_percentage>

000004f8 <.Loc.32>:
	servo2_set_percentage(0);
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <servo2_set_percentage>

000004fe <.Loc.33>:

	sei();
 4fe:	78 94       	sei

00000500 <.Loc.34>:
}
 500:	00 00       	nop
 502:	df 91       	pop	r29
 504:	cf 91       	pop	r28
 506:	08 95       	ret

00000508 <servo1_set_percentage>:

void servo1_set_percentage(signed char percentage)
{
 508:	0f 93       	push	r16
 50a:	1f 93       	push	r17
 50c:	cf 93       	push	r28
 50e:	df 93       	push	r29
 510:	cd b7       	in	r28, 0x3d	; 61
 512:	de b7       	in	r29, 0x3e	; 62
 514:	6d 97       	sbiw	r28, 0x1d	; 29
 516:	0f b6       	in	r0, 0x3f	; 63
 518:	f8 94       	cli
 51a:	de bf       	out	0x3e, r29	; 62
 51c:	0f be       	out	0x3f, r0	; 63
 51e:	cd bf       	out	0x3d, r28	; 61
 520:	89 83       	std	Y+1, r24	; 0x01

00000522 <.Loc.36>:
	if (percentage >= -100 && percentage <= 100)
 522:	89 81       	ldd	r24, Y+1	; 0x01
 524:	8c 39       	cpi	r24, 0x9C	; 156
 526:	0c f4       	brge	.+2      	; 0x52a <.Loc.37>

00000528 <L0^A>:
 528:	57 c0       	rjmp	.+174    	; 0x5d8 <.L7>

0000052a <.Loc.37>:
 52a:	89 81       	ldd	r24, Y+1	; 0x01
 52c:	84 36       	cpi	r24, 0x64	; 100
 52e:	11 f0       	breq	.+4      	; 0x534 <.Loc.38>

00000530 <L0^A>:
 530:	0c f0       	brlt	.+2      	; 0x534 <.Loc.38>

00000532 <L0^A>:
 532:	52 c0       	rjmp	.+164    	; 0x5d8 <.L7>

00000534 <.Loc.38>:
	{
		OCR1A = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
 534:	89 81       	ldd	r24, Y+1	; 0x01
 536:	28 2f       	mov	r18, r24
 538:	88 0f       	add	r24, r24
 53a:	33 0b       	sbc	r19, r19
 53c:	44 0b       	sbc	r20, r20
 53e:	55 0b       	sbc	r21, r21
 540:	2e 87       	std	Y+14, r18	; 0x0e
 542:	3f 87       	std	Y+15, r19	; 0x0f
 544:	48 8b       	std	Y+16, r20	; 0x10
 546:	59 8b       	std	Y+17, r21	; 0x11
 548:	6e 85       	ldd	r22, Y+14	; 0x0e
 54a:	7f 85       	ldd	r23, Y+15	; 0x0f
 54c:	88 89       	ldd	r24, Y+16	; 0x10
 54e:	99 89       	ldd	r25, Y+17	; 0x11
 550:	0e 94 0f 04 	call	0x81e	; 0x81e <__floatsisf>
 554:	6a 83       	std	Y+2, r22	; 0x02
 556:	7b 83       	std	Y+3, r23	; 0x03
 558:	8c 83       	std	Y+4, r24	; 0x04
 55a:	9d 83       	std	Y+5, r25	; 0x05
 55c:	20 e0       	ldi	r18, 0x00	; 0
 55e:	30 e0       	ldi	r19, 0x00	; 0
 560:	40 e2       	ldi	r20, 0x20	; 32
 562:	51 e4       	ldi	r21, 0x41	; 65
 564:	6a 81       	ldd	r22, Y+2	; 0x02
 566:	7b 81       	ldd	r23, Y+3	; 0x03
 568:	8c 81       	ldd	r24, Y+4	; 0x04
 56a:	9d 81       	ldd	r25, Y+5	; 0x05
 56c:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>
 570:	6a 8b       	std	Y+18, r22	; 0x12
 572:	7b 8b       	std	Y+19, r23	; 0x13
 574:	8c 8b       	std	Y+20, r24	; 0x14
 576:	9d 8b       	std	Y+21, r25	; 0x15
 578:	8a 89       	ldd	r24, Y+18	; 0x12
 57a:	9b 89       	ldd	r25, Y+19	; 0x13
 57c:	ac 89       	ldd	r26, Y+20	; 0x14
 57e:	bd 89       	ldd	r27, Y+21	; 0x15
 580:	8e 83       	std	Y+6, r24	; 0x06
 582:	9f 83       	std	Y+7, r25	; 0x07
 584:	a8 87       	std	Y+8, r26	; 0x08
 586:	b9 87       	std	Y+9, r27	; 0x09

00000588 <.Loc.39>:
 588:	20 e0       	ldi	r18, 0x00	; 0
 58a:	38 eb       	ldi	r19, 0xB8	; 184
 58c:	4f ed       	ldi	r20, 0xDF	; 223
 58e:	56 e4       	ldi	r21, 0x46	; 70
 590:	6e 81       	ldd	r22, Y+6	; 0x06
 592:	7f 81       	ldd	r23, Y+7	; 0x07
 594:	88 85       	ldd	r24, Y+8	; 0x08
 596:	99 85       	ldd	r25, Y+9	; 0x09
 598:	0e 94 6d 03 	call	0x6da	; 0x6da <__addsf3>
 59c:	6e 8b       	std	Y+22, r22	; 0x16
 59e:	7f 8b       	std	Y+23, r23	; 0x17
 5a0:	88 8f       	std	Y+24, r24	; 0x18
 5a2:	99 8f       	std	Y+25, r25	; 0x19
 5a4:	2e 89       	ldd	r18, Y+22	; 0x16
 5a6:	3f 89       	ldd	r19, Y+23	; 0x17
 5a8:	48 8d       	ldd	r20, Y+24	; 0x18
 5aa:	59 8d       	ldd	r21, Y+25	; 0x19
 5ac:	2a 87       	std	Y+10, r18	; 0x0a
 5ae:	3b 87       	std	Y+11, r19	; 0x0b
 5b0:	4c 87       	std	Y+12, r20	; 0x0c
 5b2:	5d 87       	std	Y+13, r21	; 0x0d

000005b4 <.Loc.40>:
 5b4:	08 e8       	ldi	r16, 0x88	; 136
 5b6:	10 e0       	ldi	r17, 0x00	; 0

000005b8 <.Loc.41>:
 5b8:	6a 85       	ldd	r22, Y+10	; 0x0a
 5ba:	7b 85       	ldd	r23, Y+11	; 0x0b
 5bc:	8c 85       	ldd	r24, Y+12	; 0x0c
 5be:	9d 85       	ldd	r25, Y+13	; 0x0d
 5c0:	0e 94 de 03 	call	0x7bc	; 0x7bc <__fixunssfsi>
 5c4:	6a 8f       	std	Y+26, r22	; 0x1a
 5c6:	7b 8f       	std	Y+27, r23	; 0x1b
 5c8:	8c 8f       	std	Y+28, r24	; 0x1c
 5ca:	9d 8f       	std	Y+29, r25	; 0x1d
 5cc:	8a 8d       	ldd	r24, Y+26	; 0x1a
 5ce:	9b 8d       	ldd	r25, Y+27	; 0x1b
 5d0:	d8 01       	movw	r26, r16
 5d2:	11 96       	adiw	r26, 0x01	; 1
 5d4:	9c 93       	st	X, r25
 5d6:	8e 93       	st	-X, r24

000005d8 <.L7>:
	}
}
 5d8:	00 00       	nop
 5da:	6d 96       	adiw	r28, 0x1d	; 29
 5dc:	0f b6       	in	r0, 0x3f	; 63
 5de:	f8 94       	cli
 5e0:	de bf       	out	0x3e, r29	; 62
 5e2:	0f be       	out	0x3f, r0	; 63
 5e4:	cd bf       	out	0x3d, r28	; 61
 5e6:	df 91       	pop	r29
 5e8:	cf 91       	pop	r28
 5ea:	1f 91       	pop	r17
 5ec:	0f 91       	pop	r16
 5ee:	08 95       	ret

000005f0 <servo2_set_percentage>:

void servo2_set_percentage(signed char percentage)
{
 5f0:	0f 93       	push	r16
 5f2:	1f 93       	push	r17
 5f4:	cf 93       	push	r28
 5f6:	df 93       	push	r29
 5f8:	cd b7       	in	r28, 0x3d	; 61
 5fa:	de b7       	in	r29, 0x3e	; 62
 5fc:	6d 97       	sbiw	r28, 0x1d	; 29
 5fe:	0f b6       	in	r0, 0x3f	; 63
 600:	f8 94       	cli
 602:	de bf       	out	0x3e, r29	; 62
 604:	0f be       	out	0x3f, r0	; 63
 606:	cd bf       	out	0x3d, r28	; 61
 608:	89 83       	std	Y+1, r24	; 0x01

0000060a <.Loc.44>:
	if (percentage >= -100 && percentage <= 100)
 60a:	89 81       	ldd	r24, Y+1	; 0x01
 60c:	8c 39       	cpi	r24, 0x9C	; 156
 60e:	0c f4       	brge	.+2      	; 0x612 <.Loc.45>

00000610 <L0^A>:
 610:	57 c0       	rjmp	.+174    	; 0x6c0 <.L10>

00000612 <.Loc.45>:
 612:	89 81       	ldd	r24, Y+1	; 0x01
 614:	84 36       	cpi	r24, 0x64	; 100
 616:	11 f0       	breq	.+4      	; 0x61c <.Loc.46>

00000618 <L0^A>:
 618:	0c f0       	brlt	.+2      	; 0x61c <.Loc.46>

0000061a <L0^A>:
 61a:	52 c0       	rjmp	.+164    	; 0x6c0 <.L10>

0000061c <.Loc.46>:
	{
		OCR1B = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
 61c:	89 81       	ldd	r24, Y+1	; 0x01
 61e:	28 2f       	mov	r18, r24
 620:	88 0f       	add	r24, r24
 622:	33 0b       	sbc	r19, r19
 624:	44 0b       	sbc	r20, r20
 626:	55 0b       	sbc	r21, r21
 628:	2e 87       	std	Y+14, r18	; 0x0e
 62a:	3f 87       	std	Y+15, r19	; 0x0f
 62c:	48 8b       	std	Y+16, r20	; 0x10
 62e:	59 8b       	std	Y+17, r21	; 0x11
 630:	6e 85       	ldd	r22, Y+14	; 0x0e
 632:	7f 85       	ldd	r23, Y+15	; 0x0f
 634:	88 89       	ldd	r24, Y+16	; 0x10
 636:	99 89       	ldd	r25, Y+17	; 0x11
 638:	0e 94 0f 04 	call	0x81e	; 0x81e <__floatsisf>
 63c:	6a 83       	std	Y+2, r22	; 0x02
 63e:	7b 83       	std	Y+3, r23	; 0x03
 640:	8c 83       	std	Y+4, r24	; 0x04
 642:	9d 83       	std	Y+5, r25	; 0x05
 644:	20 e0       	ldi	r18, 0x00	; 0
 646:	30 e0       	ldi	r19, 0x00	; 0
 648:	40 e2       	ldi	r20, 0x20	; 32
 64a:	51 e4       	ldi	r21, 0x41	; 65
 64c:	6a 81       	ldd	r22, Y+2	; 0x02
 64e:	7b 81       	ldd	r23, Y+3	; 0x03
 650:	8c 81       	ldd	r24, Y+4	; 0x04
 652:	9d 81       	ldd	r25, Y+5	; 0x05
 654:	0e 94 c4 04 	call	0x988	; 0x988 <__mulsf3>
 658:	6a 8b       	std	Y+18, r22	; 0x12
 65a:	7b 8b       	std	Y+19, r23	; 0x13
 65c:	8c 8b       	std	Y+20, r24	; 0x14
 65e:	9d 8b       	std	Y+21, r25	; 0x15
 660:	8a 89       	ldd	r24, Y+18	; 0x12
 662:	9b 89       	ldd	r25, Y+19	; 0x13
 664:	ac 89       	ldd	r26, Y+20	; 0x14
 666:	bd 89       	ldd	r27, Y+21	; 0x15
 668:	8e 83       	std	Y+6, r24	; 0x06
 66a:	9f 83       	std	Y+7, r25	; 0x07
 66c:	a8 87       	std	Y+8, r26	; 0x08
 66e:	b9 87       	std	Y+9, r27	; 0x09

00000670 <.Loc.47>:
 670:	20 e0       	ldi	r18, 0x00	; 0
 672:	38 eb       	ldi	r19, 0xB8	; 184
 674:	4f ed       	ldi	r20, 0xDF	; 223
 676:	56 e4       	ldi	r21, 0x46	; 70
 678:	6e 81       	ldd	r22, Y+6	; 0x06
 67a:	7f 81       	ldd	r23, Y+7	; 0x07
 67c:	88 85       	ldd	r24, Y+8	; 0x08
 67e:	99 85       	ldd	r25, Y+9	; 0x09
 680:	0e 94 6d 03 	call	0x6da	; 0x6da <__addsf3>
 684:	6e 8b       	std	Y+22, r22	; 0x16
 686:	7f 8b       	std	Y+23, r23	; 0x17
 688:	88 8f       	std	Y+24, r24	; 0x18
 68a:	99 8f       	std	Y+25, r25	; 0x19
 68c:	2e 89       	ldd	r18, Y+22	; 0x16
 68e:	3f 89       	ldd	r19, Y+23	; 0x17
 690:	48 8d       	ldd	r20, Y+24	; 0x18
 692:	59 8d       	ldd	r21, Y+25	; 0x19
 694:	2a 87       	std	Y+10, r18	; 0x0a
 696:	3b 87       	std	Y+11, r19	; 0x0b
 698:	4c 87       	std	Y+12, r20	; 0x0c
 69a:	5d 87       	std	Y+13, r21	; 0x0d

0000069c <.Loc.48>:
 69c:	0a e8       	ldi	r16, 0x8A	; 138
 69e:	10 e0       	ldi	r17, 0x00	; 0

000006a0 <.Loc.49>:
 6a0:	6a 85       	ldd	r22, Y+10	; 0x0a
 6a2:	7b 85       	ldd	r23, Y+11	; 0x0b
 6a4:	8c 85       	ldd	r24, Y+12	; 0x0c
 6a6:	9d 85       	ldd	r25, Y+13	; 0x0d
 6a8:	0e 94 de 03 	call	0x7bc	; 0x7bc <__fixunssfsi>
 6ac:	6a 8f       	std	Y+26, r22	; 0x1a
 6ae:	7b 8f       	std	Y+27, r23	; 0x1b
 6b0:	8c 8f       	std	Y+28, r24	; 0x1c
 6b2:	9d 8f       	std	Y+29, r25	; 0x1d
 6b4:	8a 8d       	ldd	r24, Y+26	; 0x1a
 6b6:	9b 8d       	ldd	r25, Y+27	; 0x1b
 6b8:	d8 01       	movw	r26, r16
 6ba:	11 96       	adiw	r26, 0x01	; 1
 6bc:	9c 93       	st	X, r25
 6be:	8e 93       	st	-X, r24

000006c0 <.L10>:
	}
}
 6c0:	00 00       	nop
 6c2:	6d 96       	adiw	r28, 0x1d	; 29
 6c4:	0f b6       	in	r0, 0x3f	; 63
 6c6:	f8 94       	cli
 6c8:	de bf       	out	0x3e, r29	; 62
 6ca:	0f be       	out	0x3f, r0	; 63
 6cc:	cd bf       	out	0x3d, r28	; 61
 6ce:	df 91       	pop	r29
 6d0:	cf 91       	pop	r28
 6d2:	1f 91       	pop	r17
 6d4:	0f 91       	pop	r16
 6d6:	08 95       	ret

000006d8 <__subsf3>:
 6d8:	50 58       	subi	r21, 0x80	; 128

000006da <__addsf3>:
 6da:	bb 27       	eor	r27, r27
 6dc:	aa 27       	eor	r26, r26
 6de:	0e 94 84 03 	call	0x708	; 0x708 <__addsf3x>
 6e2:	0c 94 85 04 	jmp	0x90a	; 0x90a <__fp_round>

000006e6 <.L^B1>:
 6e6:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fp_pscA>
 6ea:	38 f0       	brcs	.+14     	; 0x6fa <.L_nan>
 6ec:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__fp_pscB>
 6f0:	20 f0       	brcs	.+8      	; 0x6fa <.L_nan>
 6f2:	39 f4       	brne	.+14     	; 0x702 <.L_inf>
 6f4:	9f 3f       	cpi	r25, 0xFF	; 255
 6f6:	19 f4       	brne	.+6      	; 0x6fe <.L_infB>
 6f8:	26 f4       	brtc	.+8      	; 0x702 <.L_inf>

000006fa <.L_nan>:
 6fa:	0c 94 74 04 	jmp	0x8e8	; 0x8e8 <__fp_nan>

000006fe <.L_infB>:
 6fe:	0e f4       	brtc	.+2      	; 0x702 <.L_inf>
 700:	e0 95       	com	r30

00000702 <.L_inf>:
 702:	e7 fb       	bst	r30, 7
 704:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <__fp_inf>

00000708 <__addsf3x>:
 708:	e9 2f       	mov	r30, r25
 70a:	0e 94 96 04 	call	0x92c	; 0x92c <__fp_split3>
 70e:	58 f3       	brcs	.-42     	; 0x6e6 <.L^B1>
 710:	ba 17       	cp	r27, r26
 712:	62 07       	cpc	r22, r18
 714:	73 07       	cpc	r23, r19
 716:	84 07       	cpc	r24, r20
 718:	95 07       	cpc	r25, r21
 71a:	20 f0       	brcs	.+8      	; 0x724 <.L2^B1>
 71c:	79 f4       	brne	.+30     	; 0x73c <.L4^B1>
 71e:	a6 f5       	brtc	.+104    	; 0x788 <.L_add>
 720:	0c 94 b8 04 	jmp	0x970	; 0x970 <__fp_zero>

00000724 <.L2^B1>:
 724:	0e f4       	brtc	.+2      	; 0x728 <.L3^B1>
 726:	e0 95       	com	r30

00000728 <.L3^B1>:
 728:	0b 2e       	mov	r0, r27
 72a:	ba 2f       	mov	r27, r26
 72c:	a0 2d       	mov	r26, r0
 72e:	0b 01       	movw	r0, r22
 730:	b9 01       	movw	r22, r18
 732:	90 01       	movw	r18, r0
 734:	0c 01       	movw	r0, r24
 736:	ca 01       	movw	r24, r20
 738:	a0 01       	movw	r20, r0
 73a:	11 24       	eor	r1, r1

0000073c <.L4^B1>:
 73c:	ff 27       	eor	r31, r31
 73e:	59 1b       	sub	r21, r25

00000740 <.L5^B1>:
 740:	99 f0       	breq	.+38     	; 0x768 <.L7^B1>
 742:	59 3f       	cpi	r21, 0xF9	; 249
 744:	50 f4       	brcc	.+20     	; 0x75a <.L6^B1>
 746:	50 3e       	cpi	r21, 0xE0	; 224
 748:	68 f1       	brcs	.+90     	; 0x7a4 <.L_ret>
 74a:	1a 16       	cp	r1, r26
 74c:	f0 40       	sbci	r31, 0x00	; 0
 74e:	a2 2f       	mov	r26, r18
 750:	23 2f       	mov	r18, r19
 752:	34 2f       	mov	r19, r20
 754:	44 27       	eor	r20, r20
 756:	58 5f       	subi	r21, 0xF8	; 248
 758:	f3 cf       	rjmp	.-26     	; 0x740 <.L5^B1>

0000075a <.L6^B1>:
 75a:	46 95       	lsr	r20
 75c:	37 95       	ror	r19
 75e:	27 95       	ror	r18
 760:	a7 95       	ror	r26
 762:	f0 40       	sbci	r31, 0x00	; 0
 764:	53 95       	inc	r21
 766:	c9 f7       	brne	.-14     	; 0x75a <.L6^B1>

00000768 <.L7^B1>:
 768:	7e f4       	brtc	.+30     	; 0x788 <.L_add>
 76a:	1f 16       	cp	r1, r31
 76c:	ba 0b       	sbc	r27, r26
 76e:	62 0b       	sbc	r22, r18
 770:	73 0b       	sbc	r23, r19
 772:	84 0b       	sbc	r24, r20
 774:	ba f0       	brmi	.+46     	; 0x7a4 <.L_ret>

00000776 <.L8^B1>:
 776:	91 50       	subi	r25, 0x01	; 1
 778:	a1 f0       	breq	.+40     	; 0x7a2 <.L9^B1>
 77a:	ff 0f       	add	r31, r31
 77c:	bb 1f       	adc	r27, r27
 77e:	66 1f       	adc	r22, r22
 780:	77 1f       	adc	r23, r23
 782:	88 1f       	adc	r24, r24
 784:	c2 f7       	brpl	.-16     	; 0x776 <.L8^B1>
 786:	0e c0       	rjmp	.+28     	; 0x7a4 <.L_ret>

00000788 <.L_add>:
 788:	ba 0f       	add	r27, r26
 78a:	62 1f       	adc	r22, r18
 78c:	73 1f       	adc	r23, r19
 78e:	84 1f       	adc	r24, r20
 790:	48 f4       	brcc	.+18     	; 0x7a4 <.L_ret>
 792:	87 95       	ror	r24
 794:	77 95       	ror	r23
 796:	67 95       	ror	r22
 798:	b7 95       	ror	r27
 79a:	f7 95       	ror	r31
 79c:	9e 3f       	cpi	r25, 0xFE	; 254
 79e:	08 f0       	brcs	.+2      	; 0x7a2 <.L9^B1>
 7a0:	b0 cf       	rjmp	.-160    	; 0x702 <.L_inf>

000007a2 <.L9^B1>:
 7a2:	93 95       	inc	r25

000007a4 <.L_ret>:
 7a4:	88 0f       	add	r24, r24
 7a6:	08 f0       	brcs	.+2      	; 0x7aa <.L1^B1>
 7a8:	99 27       	eor	r25, r25

000007aa <.L1^B1>:
 7aa:	ee 0f       	add	r30, r30
 7ac:	97 95       	ror	r25
 7ae:	87 95       	ror	r24
 7b0:	08 95       	ret

000007b2 <__cmpsf2>:
 7b2:	0e 94 4a 04 	call	0x894	; 0x894 <__fp_cmp>
 7b6:	08 f4       	brcc	.+2      	; 0x7ba <.L1^B1>
 7b8:	81 e0       	ldi	r24, 0x01	; 1

000007ba <.L1^B1>:
 7ba:	08 95       	ret

000007bc <__fixunssfsi>:
 7bc:	0e 94 9e 04 	call	0x93c	; 0x93c <__fp_splitA>
 7c0:	88 f0       	brcs	.+34     	; 0x7e4 <.L_err>
 7c2:	9f 57       	subi	r25, 0x7F	; 127
 7c4:	98 f0       	brcs	.+38     	; 0x7ec <.L_zr>
 7c6:	b9 2f       	mov	r27, r25
 7c8:	99 27       	eor	r25, r25
 7ca:	b7 51       	subi	r27, 0x17	; 23
 7cc:	b0 f0       	brcs	.+44     	; 0x7fa <.L4^B1>
 7ce:	e1 f0       	breq	.+56     	; 0x808 <.L_sign>

000007d0 <.L1^B1>:
 7d0:	66 0f       	add	r22, r22
 7d2:	77 1f       	adc	r23, r23
 7d4:	88 1f       	adc	r24, r24
 7d6:	99 1f       	adc	r25, r25
 7d8:	1a f0       	brmi	.+6      	; 0x7e0 <.L2^B1>
 7da:	ba 95       	dec	r27
 7dc:	c9 f7       	brne	.-14     	; 0x7d0 <.L1^B1>
 7de:	14 c0       	rjmp	.+40     	; 0x808 <.L_sign>

000007e0 <.L2^B1>:
 7e0:	b1 30       	cpi	r27, 0x01	; 1
 7e2:	91 f0       	breq	.+36     	; 0x808 <.L_sign>

000007e4 <.L_err>:
 7e4:	0e 94 b8 04 	call	0x970	; 0x970 <__fp_zero>
 7e8:	b1 e0       	ldi	r27, 0x01	; 1
 7ea:	08 95       	ret

000007ec <.L_zr>:
 7ec:	0c 94 b8 04 	jmp	0x970	; 0x970 <__fp_zero>

000007f0 <.L3^B1>:
 7f0:	67 2f       	mov	r22, r23
 7f2:	78 2f       	mov	r23, r24
 7f4:	88 27       	eor	r24, r24
 7f6:	b8 5f       	subi	r27, 0xF8	; 248
 7f8:	39 f0       	breq	.+14     	; 0x808 <.L_sign>

000007fa <.L4^B1>:
 7fa:	b9 3f       	cpi	r27, 0xF9	; 249
 7fc:	cc f3       	brlt	.-14     	; 0x7f0 <.L3^B1>

000007fe <.L5^B1>:
 7fe:	86 95       	lsr	r24
 800:	77 95       	ror	r23
 802:	67 95       	ror	r22
 804:	b3 95       	inc	r27
 806:	d9 f7       	brne	.-10     	; 0x7fe <.L5^B1>

00000808 <.L_sign>:
 808:	3e f4       	brtc	.+14     	; 0x818 <.L6^B1>
 80a:	90 95       	com	r25
 80c:	80 95       	com	r24
 80e:	70 95       	com	r23
 810:	61 95       	neg	r22
 812:	7f 4f       	sbci	r23, 0xFF	; 255
 814:	8f 4f       	sbci	r24, 0xFF	; 255
 816:	9f 4f       	sbci	r25, 0xFF	; 255

00000818 <.L6^B1>:
 818:	08 95       	ret

0000081a <__floatunsisf>:
 81a:	e8 94       	clt
 81c:	09 c0       	rjmp	.+18     	; 0x830 <.L1^B1>

0000081e <__floatsisf>:
 81e:	97 fb       	bst	r25, 7
 820:	3e f4       	brtc	.+14     	; 0x830 <.L1^B1>
 822:	90 95       	com	r25
 824:	80 95       	com	r24
 826:	70 95       	com	r23
 828:	61 95       	neg	r22
 82a:	7f 4f       	sbci	r23, 0xFF	; 255
 82c:	8f 4f       	sbci	r24, 0xFF	; 255
 82e:	9f 4f       	sbci	r25, 0xFF	; 255

00000830 <.L1^B1>:
 830:	99 23       	and	r25, r25
 832:	a9 f0       	breq	.+42     	; 0x85e <.L4^B1>
 834:	f9 2f       	mov	r31, r25
 836:	96 e9       	ldi	r25, 0x96	; 150
 838:	bb 27       	eor	r27, r27

0000083a <.L2^B1>:
 83a:	93 95       	inc	r25
 83c:	f6 95       	lsr	r31
 83e:	87 95       	ror	r24
 840:	77 95       	ror	r23
 842:	67 95       	ror	r22
 844:	b7 95       	ror	r27
 846:	f1 11       	cpse	r31, r1
 848:	f8 cf       	rjmp	.-16     	; 0x83a <.L2^B1>
 84a:	fa f4       	brpl	.+62     	; 0x88a <.L_pack>
 84c:	bb 0f       	add	r27, r27
 84e:	11 f4       	brne	.+4      	; 0x854 <.L3^B1>
 850:	60 ff       	sbrs	r22, 0
 852:	1b c0       	rjmp	.+54     	; 0x88a <.L_pack>

00000854 <.L3^B1>:
 854:	6f 5f       	subi	r22, 0xFF	; 255
 856:	7f 4f       	sbci	r23, 0xFF	; 255
 858:	8f 4f       	sbci	r24, 0xFF	; 255
 85a:	9f 4f       	sbci	r25, 0xFF	; 255
 85c:	16 c0       	rjmp	.+44     	; 0x88a <.L_pack>

0000085e <.L4^B1>:
 85e:	88 23       	and	r24, r24
 860:	11 f0       	breq	.+4      	; 0x866 <.L5^B1>
 862:	96 e9       	ldi	r25, 0x96	; 150
 864:	11 c0       	rjmp	.+34     	; 0x888 <.L8^B1>

00000866 <.L5^B1>:
 866:	77 23       	and	r23, r23
 868:	21 f0       	breq	.+8      	; 0x872 <.L6^B1>
 86a:	9e e8       	ldi	r25, 0x8E	; 142
 86c:	87 2f       	mov	r24, r23
 86e:	76 2f       	mov	r23, r22
 870:	05 c0       	rjmp	.+10     	; 0x87c <.L7^B1>

00000872 <.L6^B1>:
 872:	66 23       	and	r22, r22
 874:	71 f0       	breq	.+28     	; 0x892 <.L9^B1>
 876:	96 e8       	ldi	r25, 0x86	; 134
 878:	86 2f       	mov	r24, r22
 87a:	70 e0       	ldi	r23, 0x00	; 0

0000087c <.L7^B1>:
 87c:	60 e0       	ldi	r22, 0x00	; 0
 87e:	2a f0       	brmi	.+10     	; 0x88a <.L_pack>

00000880 <.L10^B1>:
 880:	9a 95       	dec	r25
 882:	66 0f       	add	r22, r22
 884:	77 1f       	adc	r23, r23
 886:	88 1f       	adc	r24, r24

00000888 <.L8^B1>:
 888:	da f7       	brpl	.-10     	; 0x880 <.L10^B1>

0000088a <.L_pack>:
 88a:	88 0f       	add	r24, r24
 88c:	96 95       	lsr	r25
 88e:	87 95       	ror	r24
 890:	97 f9       	bld	r25, 7

00000892 <.L9^B1>:
 892:	08 95       	ret

00000894 <__fp_cmp>:
 894:	99 0f       	add	r25, r25
 896:	00 08       	sbc	r0, r0
 898:	55 0f       	add	r21, r21
 89a:	aa 0b       	sbc	r26, r26
 89c:	e0 e8       	ldi	r30, 0x80	; 128
 89e:	fe ef       	ldi	r31, 0xFE	; 254
 8a0:	16 16       	cp	r1, r22
 8a2:	17 06       	cpc	r1, r23
 8a4:	e8 07       	cpc	r30, r24
 8a6:	f9 07       	cpc	r31, r25
 8a8:	c0 f0       	brcs	.+48     	; 0x8da <.L9^B1>
 8aa:	12 16       	cp	r1, r18
 8ac:	13 06       	cpc	r1, r19
 8ae:	e4 07       	cpc	r30, r20
 8b0:	f5 07       	cpc	r31, r21
 8b2:	98 f0       	brcs	.+38     	; 0x8da <.L9^B1>
 8b4:	62 1b       	sub	r22, r18
 8b6:	73 0b       	sbc	r23, r19
 8b8:	84 0b       	sbc	r24, r20
 8ba:	95 0b       	sbc	r25, r21
 8bc:	39 f4       	brne	.+14     	; 0x8cc <.L1^B1>
 8be:	0a 26       	eor	r0, r26
 8c0:	61 f0       	breq	.+24     	; 0x8da <.L9^B1>
 8c2:	23 2b       	or	r18, r19
 8c4:	24 2b       	or	r18, r20
 8c6:	25 2b       	or	r18, r21
 8c8:	21 f4       	brne	.+8      	; 0x8d2 <.L2^B1>
 8ca:	08 95       	ret

000008cc <.L1^B1>:
 8cc:	0a 26       	eor	r0, r26
 8ce:	09 f4       	brne	.+2      	; 0x8d2 <.L2^B1>
 8d0:	a1 40       	sbci	r26, 0x01	; 1

000008d2 <.L2^B1>:
 8d2:	a6 95       	lsr	r26
 8d4:	8f ef       	ldi	r24, 0xFF	; 255
 8d6:	81 1d       	adc	r24, r1
 8d8:	81 1d       	adc	r24, r1

000008da <.L9^B1>:
 8da:	08 95       	ret

000008dc <__fp_inf>:
 8dc:	97 f9       	bld	r25, 7
 8de:	9f 67       	ori	r25, 0x7F	; 127
 8e0:	80 e8       	ldi	r24, 0x80	; 128
 8e2:	70 e0       	ldi	r23, 0x00	; 0
 8e4:	60 e0       	ldi	r22, 0x00	; 0
 8e6:	08 95       	ret

000008e8 <__fp_nan>:
 8e8:	9f ef       	ldi	r25, 0xFF	; 255
 8ea:	80 ec       	ldi	r24, 0xC0	; 192
 8ec:	08 95       	ret

000008ee <__fp_pscA>:
 8ee:	00 24       	eor	r0, r0
 8f0:	0a 94       	dec	r0
 8f2:	16 16       	cp	r1, r22
 8f4:	17 06       	cpc	r1, r23
 8f6:	18 06       	cpc	r1, r24
 8f8:	09 06       	cpc	r0, r25
 8fa:	08 95       	ret

000008fc <__fp_pscB>:
 8fc:	00 24       	eor	r0, r0
 8fe:	0a 94       	dec	r0
 900:	12 16       	cp	r1, r18
 902:	13 06       	cpc	r1, r19
 904:	14 06       	cpc	r1, r20
 906:	05 06       	cpc	r0, r21
 908:	08 95       	ret

0000090a <__fp_round>:
 90a:	09 2e       	mov	r0, r25
 90c:	03 94       	inc	r0
 90e:	00 0c       	add	r0, r0
 910:	11 f4       	brne	.+4      	; 0x916 <.L1^B1>
 912:	88 23       	and	r24, r24
 914:	52 f0       	brmi	.+20     	; 0x92a <.L3^B1>

00000916 <.L1^B1>:
 916:	bb 0f       	add	r27, r27
 918:	40 f4       	brcc	.+16     	; 0x92a <.L3^B1>
 91a:	bf 2b       	or	r27, r31
 91c:	11 f4       	brne	.+4      	; 0x922 <.L2^B1>
 91e:	60 ff       	sbrs	r22, 0
 920:	04 c0       	rjmp	.+8      	; 0x92a <.L3^B1>

00000922 <.L2^B1>:
 922:	6f 5f       	subi	r22, 0xFF	; 255
 924:	7f 4f       	sbci	r23, 0xFF	; 255
 926:	8f 4f       	sbci	r24, 0xFF	; 255
 928:	9f 4f       	sbci	r25, 0xFF	; 255

0000092a <.L3^B1>:
 92a:	08 95       	ret

0000092c <__fp_split3>:
 92c:	57 fd       	sbrc	r21, 7
 92e:	90 58       	subi	r25, 0x80	; 128
 930:	44 0f       	add	r20, r20
 932:	55 1f       	adc	r21, r21
 934:	59 f0       	breq	.+22     	; 0x94c <.L4^B1>
 936:	5f 3f       	cpi	r21, 0xFF	; 255
 938:	71 f0       	breq	.+28     	; 0x956 <.L5^B1>

0000093a <.L1^B1>:
 93a:	47 95       	ror	r20

0000093c <__fp_splitA>:
 93c:	88 0f       	add	r24, r24
 93e:	97 fb       	bst	r25, 7
 940:	99 1f       	adc	r25, r25
 942:	61 f0       	breq	.+24     	; 0x95c <.L6^B1>
 944:	9f 3f       	cpi	r25, 0xFF	; 255
 946:	79 f0       	breq	.+30     	; 0x966 <.L7^B1>

00000948 <.L3^B1>:
 948:	87 95       	ror	r24
 94a:	08 95       	ret

0000094c <.L4^B1>:
 94c:	12 16       	cp	r1, r18
 94e:	13 06       	cpc	r1, r19
 950:	14 06       	cpc	r1, r20
 952:	55 1f       	adc	r21, r21
 954:	f2 cf       	rjmp	.-28     	; 0x93a <.L1^B1>

00000956 <.L5^B1>:
 956:	46 95       	lsr	r20
 958:	f1 df       	rcall	.-30     	; 0x93c <__fp_splitA>
 95a:	08 c0       	rjmp	.+16     	; 0x96c <.L8^B1>

0000095c <.L6^B1>:
 95c:	16 16       	cp	r1, r22
 95e:	17 06       	cpc	r1, r23
 960:	18 06       	cpc	r1, r24
 962:	99 1f       	adc	r25, r25
 964:	f1 cf       	rjmp	.-30     	; 0x948 <.L3^B1>

00000966 <.L7^B1>:
 966:	86 95       	lsr	r24
 968:	71 05       	cpc	r23, r1
 96a:	61 05       	cpc	r22, r1

0000096c <.L8^B1>:
 96c:	08 94       	sec
 96e:	08 95       	ret

00000970 <__fp_zero>:
 970:	e8 94       	clt

00000972 <__fp_szero>:
 972:	bb 27       	eor	r27, r27
 974:	66 27       	eor	r22, r22
 976:	77 27       	eor	r23, r23
 978:	cb 01       	movw	r24, r22
 97a:	97 f9       	bld	r25, 7
 97c:	08 95       	ret

0000097e <__gesf2>:
 97e:	0e 94 4a 04 	call	0x894	; 0x894 <__fp_cmp>
 982:	08 f4       	brcc	.+2      	; 0x986 <.L1^B1>
 984:	8f ef       	ldi	r24, 0xFF	; 255

00000986 <.L1^B1>:
 986:	08 95       	ret

00000988 <__mulsf3>:
 988:	0e 94 d7 04 	call	0x9ae	; 0x9ae <__mulsf3x>
 98c:	0c 94 85 04 	jmp	0x90a	; 0x90a <__fp_round>

00000990 <.L^B1>:
 990:	0e 94 77 04 	call	0x8ee	; 0x8ee <__fp_pscA>
 994:	38 f0       	brcs	.+14     	; 0x9a4 <.L1^B1>
 996:	0e 94 7e 04 	call	0x8fc	; 0x8fc <__fp_pscB>
 99a:	20 f0       	brcs	.+8      	; 0x9a4 <.L1^B1>
 99c:	95 23       	and	r25, r21
 99e:	11 f0       	breq	.+4      	; 0x9a4 <.L1^B1>
 9a0:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <__fp_inf>

000009a4 <.L1^B1>:
 9a4:	0c 94 74 04 	jmp	0x8e8	; 0x8e8 <__fp_nan>

000009a8 <.L2^B1>:
 9a8:	11 24       	eor	r1, r1
 9aa:	0c 94 b9 04 	jmp	0x972	; 0x972 <__fp_szero>

000009ae <__mulsf3x>:
 9ae:	0e 94 96 04 	call	0x92c	; 0x92c <__fp_split3>
 9b2:	70 f3       	brcs	.-36     	; 0x990 <.L^B1>

000009b4 <__mulsf3_pse>:
 9b4:	95 9f       	mul	r25, r21
 9b6:	c1 f3       	breq	.-16     	; 0x9a8 <.L2^B1>
 9b8:	95 0f       	add	r25, r21
 9ba:	50 e0       	ldi	r21, 0x00	; 0
 9bc:	55 1f       	adc	r21, r21
 9be:	62 9f       	mul	r22, r18
 9c0:	f0 01       	movw	r30, r0
 9c2:	72 9f       	mul	r23, r18
 9c4:	bb 27       	eor	r27, r27
 9c6:	f0 0d       	add	r31, r0
 9c8:	b1 1d       	adc	r27, r1
 9ca:	63 9f       	mul	r22, r19
 9cc:	aa 27       	eor	r26, r26
 9ce:	f0 0d       	add	r31, r0
 9d0:	b1 1d       	adc	r27, r1
 9d2:	aa 1f       	adc	r26, r26
 9d4:	64 9f       	mul	r22, r20
 9d6:	66 27       	eor	r22, r22
 9d8:	b0 0d       	add	r27, r0
 9da:	a1 1d       	adc	r26, r1
 9dc:	66 1f       	adc	r22, r22
 9de:	82 9f       	mul	r24, r18
 9e0:	22 27       	eor	r18, r18
 9e2:	b0 0d       	add	r27, r0
 9e4:	a1 1d       	adc	r26, r1
 9e6:	62 1f       	adc	r22, r18
 9e8:	73 9f       	mul	r23, r19
 9ea:	b0 0d       	add	r27, r0
 9ec:	a1 1d       	adc	r26, r1
 9ee:	62 1f       	adc	r22, r18
 9f0:	83 9f       	mul	r24, r19
 9f2:	a0 0d       	add	r26, r0
 9f4:	61 1d       	adc	r22, r1
 9f6:	22 1f       	adc	r18, r18
 9f8:	74 9f       	mul	r23, r20
 9fa:	33 27       	eor	r19, r19
 9fc:	a0 0d       	add	r26, r0
 9fe:	61 1d       	adc	r22, r1
 a00:	23 1f       	adc	r18, r19
 a02:	84 9f       	mul	r24, r20
 a04:	60 0d       	add	r22, r0
 a06:	21 1d       	adc	r18, r1
 a08:	82 2f       	mov	r24, r18
 a0a:	76 2f       	mov	r23, r22
 a0c:	6a 2f       	mov	r22, r26
 a0e:	11 24       	eor	r1, r1
 a10:	9f 57       	subi	r25, 0x7F	; 127
 a12:	50 40       	sbci	r21, 0x00	; 0
 a14:	9a f0       	brmi	.+38     	; 0xa3c <.L13^B1>
 a16:	f1 f0       	breq	.+60     	; 0xa54 <.L15^B1>

00000a18 <.L10^B1>:
 a18:	88 23       	and	r24, r24
 a1a:	4a f0       	brmi	.+18     	; 0xa2e <.L11^B1>
 a1c:	ee 0f       	add	r30, r30
 a1e:	ff 1f       	adc	r31, r31
 a20:	bb 1f       	adc	r27, r27
 a22:	66 1f       	adc	r22, r22
 a24:	77 1f       	adc	r23, r23
 a26:	88 1f       	adc	r24, r24
 a28:	91 50       	subi	r25, 0x01	; 1
 a2a:	50 40       	sbci	r21, 0x00	; 0
 a2c:	a9 f7       	brne	.-22     	; 0xa18 <.L10^B1>

00000a2e <.L11^B1>:
 a2e:	9e 3f       	cpi	r25, 0xFE	; 254
 a30:	51 05       	cpc	r21, r1
 a32:	80 f0       	brcs	.+32     	; 0xa54 <.L15^B1>
 a34:	0c 94 6e 04 	jmp	0x8dc	; 0x8dc <__fp_inf>

00000a38 <.L12^B1>:
 a38:	0c 94 b9 04 	jmp	0x972	; 0x972 <__fp_szero>

00000a3c <.L13^B1>:
 a3c:	5f 3f       	cpi	r21, 0xFF	; 255
 a3e:	e4 f3       	brlt	.-8      	; 0xa38 <.L12^B1>
 a40:	98 3e       	cpi	r25, 0xE8	; 232
 a42:	d4 f3       	brlt	.-12     	; 0xa38 <.L12^B1>

00000a44 <.L14^B1>:
 a44:	86 95       	lsr	r24
 a46:	77 95       	ror	r23
 a48:	67 95       	ror	r22
 a4a:	b7 95       	ror	r27
 a4c:	f7 95       	ror	r31
 a4e:	e7 95       	ror	r30
 a50:	9f 5f       	subi	r25, 0xFF	; 255
 a52:	c1 f7       	brne	.-16     	; 0xa44 <.L14^B1>

00000a54 <.L15^B1>:
 a54:	fe 2b       	or	r31, r30
 a56:	88 0f       	add	r24, r24
 a58:	91 1d       	adc	r25, r1
 a5a:	96 95       	lsr	r25
 a5c:	87 95       	ror	r24
 a5e:	97 f9       	bld	r25, 7
 a60:	08 95       	ret

00000a62 <_exit>:
 a62:	f8 94       	cli

00000a64 <__stop_program>:
 a64:	ff cf       	rjmp	.-2      	; 0xa64 <__stop_program>
