
bin\Debug\lineFollowSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  000005c4  00000658  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000005c4  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .fuse         00000003  00820000  00820000  00000658  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .comment      00000012  00000000  00000000  0000065b  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000670  2**2
                  CONTENTS, READONLY, OCTETS
  5 .debug_aranges 00000078  00000000  00000000  000006b0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  6 .debug_info   00000e01  00000000  00000000  00000728  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_abbrev 00000cb8  00000000  00000000  00001529  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_line   0000032b  00000000  00000000  000021e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_frame  00000054  00000000  00000000  0000250c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_str    00000554  00000000  00000000  00002560  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line_str 00000187  00000000  00000000  00002ab4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 74 00 	jmp	0xe8	; 0xe8 <__ctors_end>
   4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
   8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
   c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  10:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  14:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  18:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  1c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  20:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  24:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  28:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  2c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  30:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  34:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  38:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  3c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  40:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  44:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  48:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  4c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  50:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  54:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  58:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  5c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  60:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  64:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  68:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  6c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  70:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  74:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  78:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  7c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  80:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  84:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  88:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  8c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  90:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  94:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  98:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  9c:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  a0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  a4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  a8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  ac:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  b0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  b4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  b8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  bc:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  c0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  c4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  c8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  cc:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  d0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  d4:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  d8:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  dc:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>
  e0:	0c 94 80 00 	jmp	0x100	; 0x100 <__bad_interrupt>

000000e4 <__trampolines_start>:
  e4:	0c 94 05 01 	jmp	0x20a	; 0x20a <.L7>

000000e8 <__ctors_end>:
  e8:	11 24       	eor	r1, r1
  ea:	1f be       	out	0x3f, r1	; 63
  ec:	cf ef       	ldi	r28, 0xFF	; 255
  ee:	d1 e2       	ldi	r29, 0x21	; 33
  f0:	de bf       	out	0x3e, r29	; 62
  f2:	cd bf       	out	0x3d, r28	; 61
  f4:	00 e0       	ldi	r16, 0x00	; 0
  f6:	0c bf       	out	0x3c, r16	; 60
  f8:	0e 94 a5 00 	call	0x14a	; 0x14a <main>
  fc:	0c 94 d2 02 	jmp	0x5a4	; 0x5a4 <_exit>

00000100 <__bad_interrupt>:
 100:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000104 <init>:
#define LED2 PB6
#define LED3 PB5
#define LED4 PB4

void init(void)
{
 104:	cf 93       	push	r28
 106:	df 93       	push	r29
 108:	cd b7       	in	r28, 0x3d	; 61
 10a:	de b7       	in	r29, 0x3e	; 62

0000010c <.Loc.1>:
    DDRB |= ((1<<LED1)|(1<<LED2)|(1<<LED3)|(1<<LED4));
 10c:	84 e2       	ldi	r24, 0x24	; 36
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	fc 01       	movw	r30, r24
 112:	20 81       	ld	r18, Z
 114:	84 e2       	ldi	r24, 0x24	; 36
 116:	90 e0       	ldi	r25, 0x00	; 0

00000118 <.Loc.2>:
 118:	20 6f       	ori	r18, 0xF0	; 240
 11a:	fc 01       	movw	r30, r24
 11c:	20 83       	st	Z, r18

0000011e <.Loc.3>:
    PORTB |= ((1<<LED1)|(1<<LED2)|(1<<LED3)|(1<<LED4));
 11e:	85 e2       	ldi	r24, 0x25	; 37
 120:	90 e0       	ldi	r25, 0x00	; 0
 122:	fc 01       	movw	r30, r24
 124:	20 81       	ld	r18, Z
 126:	85 e2       	ldi	r24, 0x25	; 37
 128:	90 e0       	ldi	r25, 0x00	; 0

0000012a <.Loc.4>:
 12a:	20 6f       	ori	r18, 0xF0	; 240
 12c:	fc 01       	movw	r30, r24
 12e:	20 83       	st	Z, r18

00000130 <.Loc.5>:

    DDRC &= ~((1<<PC2)|(1<<PC3)|(1<<PC4)|(1<<PC5)|(1<<PC6)|(1<<PC7));
 130:	87 e2       	ldi	r24, 0x27	; 39
 132:	90 e0       	ldi	r25, 0x00	; 0
 134:	fc 01       	movw	r30, r24
 136:	20 81       	ld	r18, Z

00000138 <.Loc.6>:
 138:	87 e2       	ldi	r24, 0x27	; 39
 13a:	90 e0       	ldi	r25, 0x00	; 0

0000013c <.Loc.7>:
 13c:	23 70       	andi	r18, 0x03	; 3
 13e:	fc 01       	movw	r30, r24
 140:	20 83       	st	Z, r18

00000142 <.Loc.8>:
}
 142:	00 00       	nop
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	08 95       	ret

0000014a <main>:

int main(void)
{
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62
 152:	a4 97       	sbiw	r28, 0x24	; 36
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	f8 94       	cli
 158:	de bf       	out	0x3e, r29	; 62
 15a:	0f be       	out	0x3f, r0	; 63
 15c:	cd bf       	out	0x3d, r28	; 61

0000015e <.Loc.10>:
    init();
 15e:	0e 94 82 00 	call	0x104	; 0x104 <init>

00000162 <.Loc.11>:
    int sensoren = 0;
 162:	1a 82       	std	Y+2, r1	; 0x02
 164:	19 82       	std	Y+1, r1	; 0x01

00000166 <.L24>:

    while(1)
    {
        if(PINC & (1<<PC3))
 166:	86 e2       	ldi	r24, 0x26	; 38
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	dc 01       	movw	r26, r24
 16c:	8c 91       	ld	r24, X

0000016e <.Loc.13>:
 16e:	88 2f       	mov	r24, r24
 170:	90 e0       	ldi	r25, 0x00	; 0
 172:	88 70       	andi	r24, 0x08	; 8
 174:	99 27       	eor	r25, r25

00000176 <.Loc.14>:
 176:	00 97       	sbiw	r24, 0x00	; 0
 178:	29 f0       	breq	.+10     	; 0x184 <.L3>

0000017a <.Loc.15>:
        {
            sensoren += 0b0001;
 17a:	89 81       	ldd	r24, Y+1	; 0x01
 17c:	9a 81       	ldd	r25, Y+2	; 0x02
 17e:	01 96       	adiw	r24, 0x01	; 1
 180:	9a 83       	std	Y+2, r25	; 0x02
 182:	89 83       	std	Y+1, r24	; 0x01

00000184 <.L3>:
        }
        if(PINC & (1<<PC4))
 184:	86 e2       	ldi	r24, 0x26	; 38
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	fc 01       	movw	r30, r24
 18a:	80 81       	ld	r24, Z

0000018c <.Loc.17>:
 18c:	88 2f       	mov	r24, r24
 18e:	90 e0       	ldi	r25, 0x00	; 0
 190:	80 71       	andi	r24, 0x10	; 16
 192:	99 27       	eor	r25, r25

00000194 <.Loc.18>:
 194:	00 97       	sbiw	r24, 0x00	; 0
 196:	29 f0       	breq	.+10     	; 0x1a2 <.L4>

00000198 <.Loc.19>:
        {
            sensoren += 0b0010;
 198:	89 81       	ldd	r24, Y+1	; 0x01
 19a:	9a 81       	ldd	r25, Y+2	; 0x02
 19c:	02 96       	adiw	r24, 0x02	; 2
 19e:	9a 83       	std	Y+2, r25	; 0x02
 1a0:	89 83       	std	Y+1, r24	; 0x01

000001a2 <.L4>:
        }
        if(PINC & (1<<PC5))
 1a2:	86 e2       	ldi	r24, 0x26	; 38
 1a4:	90 e0       	ldi	r25, 0x00	; 0
 1a6:	dc 01       	movw	r26, r24
 1a8:	8c 91       	ld	r24, X

000001aa <.Loc.21>:
 1aa:	88 2f       	mov	r24, r24
 1ac:	90 e0       	ldi	r25, 0x00	; 0
 1ae:	80 72       	andi	r24, 0x20	; 32
 1b0:	99 27       	eor	r25, r25

000001b2 <.Loc.22>:
 1b2:	00 97       	sbiw	r24, 0x00	; 0
 1b4:	29 f0       	breq	.+10     	; 0x1c0 <.L5>

000001b6 <.Loc.23>:
        {
            sensoren += 0b0100;
 1b6:	89 81       	ldd	r24, Y+1	; 0x01
 1b8:	9a 81       	ldd	r25, Y+2	; 0x02
 1ba:	04 96       	adiw	r24, 0x04	; 4
 1bc:	9a 83       	std	Y+2, r25	; 0x02
 1be:	89 83       	std	Y+1, r24	; 0x01

000001c0 <.L5>:
        }
        if(PINC & (1<<PC6))
 1c0:	86 e2       	ldi	r24, 0x26	; 38
 1c2:	90 e0       	ldi	r25, 0x00	; 0
 1c4:	fc 01       	movw	r30, r24
 1c6:	80 81       	ld	r24, Z

000001c8 <.Loc.25>:
 1c8:	88 2f       	mov	r24, r24
 1ca:	90 e0       	ldi	r25, 0x00	; 0
 1cc:	80 74       	andi	r24, 0x40	; 64
 1ce:	99 27       	eor	r25, r25

000001d0 <.Loc.26>:
 1d0:	00 97       	sbiw	r24, 0x00	; 0
 1d2:	29 f0       	breq	.+10     	; 0x1de <.L6>

000001d4 <.Loc.27>:
        {
            sensoren += 0b1000;
 1d4:	89 81       	ldd	r24, Y+1	; 0x01
 1d6:	9a 81       	ldd	r25, Y+2	; 0x02
 1d8:	08 96       	adiw	r24, 0x08	; 8
 1da:	9a 83       	std	Y+2, r25	; 0x02
 1dc:	89 83       	std	Y+1, r24	; 0x01

000001de <.L6>:
        }

        switch(sensoren)
 1de:	89 81       	ldd	r24, Y+1	; 0x01
 1e0:	9a 81       	ldd	r25, Y+2	; 0x02
 1e2:	09 2e       	mov	r0, r25
 1e4:	00 0c       	add	r0, r0
 1e6:	aa 0b       	sbc	r26, r26
 1e8:	bb 0b       	sbc	r27, r27
 1ea:	01 97       	sbiw	r24, 0x01	; 1
 1ec:	a1 09       	sbc	r26, r1
 1ee:	b1 09       	sbc	r27, r1
 1f0:	8d 30       	cpi	r24, 0x0D	; 13
 1f2:	91 05       	cpc	r25, r1
 1f4:	a1 05       	cpc	r26, r1
 1f6:	b1 05       	cpc	r27, r1
 1f8:	09 f0       	breq	.+2      	; 0x1fc <L0^A+0x2>

000001fa <L0^A>:
 1fa:	38 f4       	brcc	.+14     	; 0x20a <.L7>
 1fc:	fc 01       	movw	r30, r24
 1fe:	88 27       	eor	r24, r24
 200:	ec 52       	subi	r30, 0x2C	; 44
 202:	fd 4f       	sbci	r31, 0xFD	; 253
 204:	8f 4f       	sbci	r24, 0xFF	; 255
 206:	0c 94 af 01 	jmp	0x35e	; 0x35e <__tablejump2__>

0000020a <.L7>:
        default:
            //rij maar gewoon rechtdoor
            // of pas niet aan
        }

        PORTB &= ~(sensoren<<4);
 20a:	85 e2       	ldi	r24, 0x25	; 37
 20c:	90 e0       	ldi	r25, 0x00	; 0
 20e:	dc 01       	movw	r26, r24
 210:	8c 91       	ld	r24, X
 212:	98 2f       	mov	r25, r24

00000214 <.Loc.30>:
 214:	89 81       	ldd	r24, Y+1	; 0x01
 216:	82 95       	swap	r24
 218:	80 7f       	andi	r24, 0xF0	; 240

0000021a <.Loc.31>:
 21a:	80 95       	com	r24
 21c:	29 2f       	mov	r18, r25
 21e:	28 23       	and	r18, r24

00000220 <.Loc.32>:
 220:	85 e2       	ldi	r24, 0x25	; 37
 222:	90 e0       	ldi	r25, 0x00	; 0

00000224 <.Loc.33>:
 224:	fc 01       	movw	r30, r24
 226:	20 83       	st	Z, r18
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	a0 e2       	ldi	r26, 0x20	; 32
 22e:	b1 e4       	ldi	r27, 0x41	; 65
 230:	8b 83       	std	Y+3, r24	; 0x03
 232:	9c 83       	std	Y+4, r25	; 0x04
 234:	ad 83       	std	Y+5, r26	; 0x05
 236:	be 83       	std	Y+6, r27	; 0x06

00000238 <.LBB12>:

	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint16_t __ticks;
	__tmp = ((F_CPU) / 4e3) * __ms;
 238:	20 e0       	ldi	r18, 0x00	; 0
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	4a e7       	ldi	r20, 0x7A	; 122
 23e:	55 e4       	ldi	r21, 0x45	; 69
 240:	6b 81       	ldd	r22, Y+3	; 0x03
 242:	7c 81       	ldd	r23, Y+4	; 0x04
 244:	8d 81       	ldd	r24, Y+5	; 0x05
 246:	9e 81       	ldd	r25, Y+6	; 0x06
 248:	0e 94 3d 02 	call	0x47a	; 0x47a <__mulsf3>
 24c:	6d 8b       	std	Y+21, r22	; 0x15
 24e:	7e 8b       	std	Y+22, r23	; 0x16
 250:	8f 8b       	std	Y+23, r24	; 0x17
 252:	98 8f       	std	Y+24, r25	; 0x18
 254:	8d 89       	ldd	r24, Y+21	; 0x15
 256:	9e 89       	ldd	r25, Y+22	; 0x16
 258:	af 89       	ldd	r26, Y+23	; 0x17
 25a:	b8 8d       	ldd	r27, Y+24	; 0x18
 25c:	8f 83       	std	Y+7, r24	; 0x07
 25e:	98 87       	std	Y+8, r25	; 0x08
 260:	a9 87       	std	Y+9, r26	; 0x09
 262:	ba 87       	std	Y+10, r27	; 0x0a

00000264 <.Loc.35>:
	if (__tmp < 1.0)
 264:	20 e0       	ldi	r18, 0x00	; 0
 266:	30 e0       	ldi	r19, 0x00	; 0
 268:	40 e8       	ldi	r20, 0x80	; 128
 26a:	5f e3       	ldi	r21, 0x3F	; 63
 26c:	6f 81       	ldd	r22, Y+7	; 0x07
 26e:	78 85       	ldd	r23, Y+8	; 0x08
 270:	89 85       	ldd	r24, Y+9	; 0x09
 272:	9a 85       	ldd	r25, Y+10	; 0x0a
 274:	0e 94 b7 01 	call	0x36e	; 0x36e <__cmpsf2>
 278:	88 23       	and	r24, r24
 27a:	2c f4       	brge	.+10     	; 0x286 <.L27>

0000027c <.Loc.36>:
		__ticks = 1;
 27c:	81 e0       	ldi	r24, 0x01	; 1
 27e:	90 e0       	ldi	r25, 0x00	; 0
 280:	9c 87       	std	Y+12, r25	; 0x0c
 282:	8b 87       	std	Y+11, r24	; 0x0b
 284:	55 c0       	rjmp	.+170    	; 0x330 <.L18>

00000286 <.L27>:
	else if (__tmp > 65535)
 286:	20 e0       	ldi	r18, 0x00	; 0
 288:	3f ef       	ldi	r19, 0xFF	; 255
 28a:	4f e7       	ldi	r20, 0x7F	; 127
 28c:	57 e4       	ldi	r21, 0x47	; 71
 28e:	6f 81       	ldd	r22, Y+7	; 0x07
 290:	78 85       	ldd	r23, Y+8	; 0x08
 292:	89 85       	ldd	r24, Y+9	; 0x09
 294:	9a 85       	ldd	r25, Y+10	; 0x0a
 296:	0e 94 38 02 	call	0x470	; 0x470 <__gesf2>
 29a:	88 23       	and	r24, r24
 29c:	d9 f1       	breq	.+118    	; 0x314 <.L28>
 29e:	d4 f1       	brlt	.+116    	; 0x314 <.L28>

000002a0 <.Loc.38>:
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
 2a0:	20 e0       	ldi	r18, 0x00	; 0
 2a2:	30 e0       	ldi	r19, 0x00	; 0
 2a4:	40 e2       	ldi	r20, 0x20	; 32
 2a6:	51 e4       	ldi	r21, 0x41	; 65
 2a8:	6b 81       	ldd	r22, Y+3	; 0x03
 2aa:	7c 81       	ldd	r23, Y+4	; 0x04
 2ac:	8d 81       	ldd	r24, Y+5	; 0x05
 2ae:	9e 81       	ldd	r25, Y+6	; 0x06
 2b0:	0e 94 3d 02 	call	0x47a	; 0x47a <__mulsf3>
 2b4:	69 8f       	std	Y+25, r22	; 0x19
 2b6:	7a 8f       	std	Y+26, r23	; 0x1a
 2b8:	8b 8f       	std	Y+27, r24	; 0x1b
 2ba:	9c 8f       	std	Y+28, r25	; 0x1c
 2bc:	89 8d       	ldd	r24, Y+25	; 0x19
 2be:	9a 8d       	ldd	r25, Y+26	; 0x1a
 2c0:	ab 8d       	ldd	r26, Y+27	; 0x1b
 2c2:	bc 8d       	ldd	r27, Y+28	; 0x1c
 2c4:	89 8b       	std	Y+17, r24	; 0x11
 2c6:	9a 8b       	std	Y+18, r25	; 0x12
 2c8:	ab 8b       	std	Y+19, r26	; 0x13
 2ca:	bc 8b       	std	Y+20, r27	; 0x14

000002cc <.Loc.39>:
 2cc:	69 89       	ldd	r22, Y+17	; 0x11
 2ce:	7a 89       	ldd	r23, Y+18	; 0x12
 2d0:	8b 89       	ldd	r24, Y+19	; 0x13
 2d2:	9c 89       	ldd	r25, Y+20	; 0x14
 2d4:	0e 94 bc 01 	call	0x378	; 0x378 <__fixunssfsi>
 2d8:	6d 8f       	std	Y+29, r22	; 0x1d
 2da:	7e 8f       	std	Y+30, r23	; 0x1e
 2dc:	8f 8f       	std	Y+31, r24	; 0x1f
 2de:	98 a3       	std	Y+32, r25	; 0x20
 2e0:	ad 8d       	ldd	r26, Y+29	; 0x1d
 2e2:	be 8d       	ldd	r27, Y+30	; 0x1e
 2e4:	bc 87       	std	Y+12, r27	; 0x0c
 2e6:	ab 87       	std	Y+11, r26	; 0x0b

000002e8 <.Loc.40>:
		while(__ticks)
 2e8:	10 c0       	rjmp	.+32     	; 0x30a <.L21>

000002ea <.L22>:
 2ea:	80 e9       	ldi	r24, 0x90	; 144
 2ec:	91 e0       	ldi	r25, 0x01	; 1
 2ee:	9e 87       	std	Y+14, r25	; 0x0e
 2f0:	8d 87       	std	Y+13, r24	; 0x0d

000002f2 <.LBB14>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
 2f2:	8d 85       	ldd	r24, Y+13	; 0x0d
 2f4:	9e 85       	ldd	r25, Y+14	; 0x0e

000002f6 <.L1^B1>:
 2f6:	01 97       	sbiw	r24, 0x01	; 1
 2f8:	f1 f7       	brne	.-4      	; 0x2f6 <.L1^B1>
 2fa:	9e 87       	std	Y+14, r25	; 0x0e
 2fc:	8d 87       	std	Y+13, r24	; 0x0d

000002fe <.Loc.42>:
	...

00000300 <.LBE14>:
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 300:	8b 85       	ldd	r24, Y+11	; 0x0b
 302:	9c 85       	ldd	r25, Y+12	; 0x0c
 304:	01 97       	sbiw	r24, 0x01	; 1
 306:	9c 87       	std	Y+12, r25	; 0x0c
 308:	8b 87       	std	Y+11, r24	; 0x0b

0000030a <.L21>:
		while(__ticks)
 30a:	8b 85       	ldd	r24, Y+11	; 0x0b
 30c:	9c 85       	ldd	r25, Y+12	; 0x0c
 30e:	00 97       	sbiw	r24, 0x00	; 0
 310:	61 f7       	brne	.-40     	; 0x2ea <.L22>

00000312 <.Loc.45>:
		}
		return;
 312:	19 c0       	rjmp	.+50     	; 0x346 <.L23>

00000314 <.L28>:
	}
	else
		__ticks = (uint16_t)__tmp;
 314:	6f 81       	ldd	r22, Y+7	; 0x07
 316:	78 85       	ldd	r23, Y+8	; 0x08
 318:	89 85       	ldd	r24, Y+9	; 0x09
 31a:	9a 85       	ldd	r25, Y+10	; 0x0a
 31c:	0e 94 bc 01 	call	0x378	; 0x378 <__fixunssfsi>
 320:	69 a3       	std	Y+33, r22	; 0x21
 322:	7a a3       	std	Y+34, r23	; 0x22
 324:	8b a3       	std	Y+35, r24	; 0x23
 326:	9c a3       	std	Y+36, r25	; 0x24
 328:	e9 a1       	ldd	r30, Y+33	; 0x21
 32a:	fa a1       	ldd	r31, Y+34	; 0x22
 32c:	fc 87       	std	Y+12, r31	; 0x0c
 32e:	eb 87       	std	Y+11, r30	; 0x0b

00000330 <.L18>:
 330:	8b 85       	ldd	r24, Y+11	; 0x0b
 332:	9c 85       	ldd	r25, Y+12	; 0x0c
 334:	98 8b       	std	Y+16, r25	; 0x10
 336:	8f 87       	std	Y+15, r24	; 0x0f

00000338 <.LBB16>:
 338:	8f 85       	ldd	r24, Y+15	; 0x0f
 33a:	98 89       	ldd	r25, Y+16	; 0x10

0000033c <.L1^B2>:
 33c:	01 97       	sbiw	r24, 0x01	; 1
 33e:	f1 f7       	brne	.-4      	; 0x33c <.L1^B2>
 340:	98 8b       	std	Y+16, r25	; 0x10
 342:	8f 87       	std	Y+15, r24	; 0x0f

00000344 <.Loc.48>:
	...

00000346 <.L23>:
        _delay_ms(10);
        PORTB |= ((1<<LED1)|(1<<LED2)|(1<<LED3)|(1<<LED4));
 346:	85 e2       	ldi	r24, 0x25	; 37
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	dc 01       	movw	r26, r24
 34c:	2c 91       	ld	r18, X
 34e:	85 e2       	ldi	r24, 0x25	; 37
 350:	90 e0       	ldi	r25, 0x00	; 0

00000352 <.Loc.50>:
 352:	20 6f       	ori	r18, 0xF0	; 240
 354:	fc 01       	movw	r30, r24
 356:	20 83       	st	Z, r18

00000358 <.Loc.51>:
        sensoren = 0b0;
 358:	1a 82       	std	Y+2, r1	; 0x02
 35a:	19 82       	std	Y+1, r1	; 0x01

0000035c <.Loc.52>:
        if(PINC & (1<<PC3))
 35c:	04 cf       	rjmp	.-504    	; 0x166 <.L24>

0000035e <__tablejump2__>:
 35e:	ee 0f       	add	r30, r30

00000360 <.Loc.1>:
 360:	ff 1f       	adc	r31, r31

00000362 <.Loc.2>:
 362:	88 1f       	adc	r24, r24

00000364 <.Loc.3>:
 364:	8b bf       	out	0x3b, r24	; 59

00000366 <.Loc.4>:
 366:	07 90       	elpm	r0, Z+

00000368 <.Loc.5>:
 368:	f6 91       	elpm	r31, Z

0000036a <.Loc.6>:
 36a:	e0 2d       	mov	r30, r0

0000036c <.Loc.7>:
 36c:	19 94       	eijmp

0000036e <__cmpsf2>:
 36e:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__fp_cmp>
 372:	08 f4       	brcc	.+2      	; 0x376 <.L1^B1>
 374:	81 e0       	ldi	r24, 0x01	; 1

00000376 <.L1^B1>:
 376:	08 95       	ret

00000378 <__fixunssfsi>:
 378:	0e 94 17 02 	call	0x42e	; 0x42e <__fp_splitA>
 37c:	88 f0       	brcs	.+34     	; 0x3a0 <.L_err>
 37e:	9f 57       	subi	r25, 0x7F	; 127
 380:	98 f0       	brcs	.+38     	; 0x3a8 <.L_zr>
 382:	b9 2f       	mov	r27, r25
 384:	99 27       	eor	r25, r25
 386:	b7 51       	subi	r27, 0x17	; 23
 388:	b0 f0       	brcs	.+44     	; 0x3b6 <.L4^B1>
 38a:	e1 f0       	breq	.+56     	; 0x3c4 <.L_sign>

0000038c <.L1^B1>:
 38c:	66 0f       	add	r22, r22
 38e:	77 1f       	adc	r23, r23
 390:	88 1f       	adc	r24, r24
 392:	99 1f       	adc	r25, r25
 394:	1a f0       	brmi	.+6      	; 0x39c <.L2^B1>
 396:	ba 95       	dec	r27
 398:	c9 f7       	brne	.-14     	; 0x38c <.L1^B1>
 39a:	14 c0       	rjmp	.+40     	; 0x3c4 <.L_sign>

0000039c <.L2^B1>:
 39c:	b1 30       	cpi	r27, 0x01	; 1
 39e:	91 f0       	breq	.+36     	; 0x3c4 <.L_sign>

000003a0 <.L_err>:
 3a0:	0e 94 31 02 	call	0x462	; 0x462 <__fp_zero>
 3a4:	b1 e0       	ldi	r27, 0x01	; 1
 3a6:	08 95       	ret

000003a8 <.L_zr>:
 3a8:	0c 94 31 02 	jmp	0x462	; 0x462 <__fp_zero>

000003ac <.L3^B1>:
 3ac:	67 2f       	mov	r22, r23
 3ae:	78 2f       	mov	r23, r24
 3b0:	88 27       	eor	r24, r24
 3b2:	b8 5f       	subi	r27, 0xF8	; 248
 3b4:	39 f0       	breq	.+14     	; 0x3c4 <.L_sign>

000003b6 <.L4^B1>:
 3b6:	b9 3f       	cpi	r27, 0xF9	; 249
 3b8:	cc f3       	brlt	.-14     	; 0x3ac <.L3^B1>

000003ba <.L5^B1>:
 3ba:	86 95       	lsr	r24
 3bc:	77 95       	ror	r23
 3be:	67 95       	ror	r22
 3c0:	b3 95       	inc	r27
 3c2:	d9 f7       	brne	.-10     	; 0x3ba <.L5^B1>

000003c4 <.L_sign>:
 3c4:	3e f4       	brtc	.+14     	; 0x3d4 <.L6^B1>
 3c6:	90 95       	com	r25
 3c8:	80 95       	com	r24
 3ca:	70 95       	com	r23
 3cc:	61 95       	neg	r22
 3ce:	7f 4f       	sbci	r23, 0xFF	; 255
 3d0:	8f 4f       	sbci	r24, 0xFF	; 255
 3d2:	9f 4f       	sbci	r25, 0xFF	; 255

000003d4 <.L6^B1>:
 3d4:	08 95       	ret

000003d6 <__fp_cmp>:
 3d6:	99 0f       	add	r25, r25
 3d8:	00 08       	sbc	r0, r0
 3da:	55 0f       	add	r21, r21
 3dc:	aa 0b       	sbc	r26, r26
 3de:	e0 e8       	ldi	r30, 0x80	; 128
 3e0:	fe ef       	ldi	r31, 0xFE	; 254
 3e2:	16 16       	cp	r1, r22
 3e4:	17 06       	cpc	r1, r23
 3e6:	e8 07       	cpc	r30, r24
 3e8:	f9 07       	cpc	r31, r25
 3ea:	c0 f0       	brcs	.+48     	; 0x41c <.L9^B1>
 3ec:	12 16       	cp	r1, r18
 3ee:	13 06       	cpc	r1, r19
 3f0:	e4 07       	cpc	r30, r20
 3f2:	f5 07       	cpc	r31, r21
 3f4:	98 f0       	brcs	.+38     	; 0x41c <.L9^B1>
 3f6:	62 1b       	sub	r22, r18
 3f8:	73 0b       	sbc	r23, r19
 3fa:	84 0b       	sbc	r24, r20
 3fc:	95 0b       	sbc	r25, r21
 3fe:	39 f4       	brne	.+14     	; 0x40e <.L1^B1>
 400:	0a 26       	eor	r0, r26
 402:	61 f0       	breq	.+24     	; 0x41c <.L9^B1>
 404:	23 2b       	or	r18, r19
 406:	24 2b       	or	r18, r20
 408:	25 2b       	or	r18, r21
 40a:	21 f4       	brne	.+8      	; 0x414 <.L2^B1>
 40c:	08 95       	ret

0000040e <.L1^B1>:
 40e:	0a 26       	eor	r0, r26
 410:	09 f4       	brne	.+2      	; 0x414 <.L2^B1>
 412:	a1 40       	sbci	r26, 0x01	; 1

00000414 <.L2^B1>:
 414:	a6 95       	lsr	r26
 416:	8f ef       	ldi	r24, 0xFF	; 255
 418:	81 1d       	adc	r24, r1
 41a:	81 1d       	adc	r24, r1

0000041c <.L9^B1>:
 41c:	08 95       	ret

0000041e <__fp_split3>:
 41e:	57 fd       	sbrc	r21, 7
 420:	90 58       	subi	r25, 0x80	; 128
 422:	44 0f       	add	r20, r20
 424:	55 1f       	adc	r21, r21
 426:	59 f0       	breq	.+22     	; 0x43e <.L4^B1>
 428:	5f 3f       	cpi	r21, 0xFF	; 255
 42a:	71 f0       	breq	.+28     	; 0x448 <.L5^B1>

0000042c <.L1^B1>:
 42c:	47 95       	ror	r20

0000042e <__fp_splitA>:
 42e:	88 0f       	add	r24, r24
 430:	97 fb       	bst	r25, 7
 432:	99 1f       	adc	r25, r25
 434:	61 f0       	breq	.+24     	; 0x44e <.L6^B1>
 436:	9f 3f       	cpi	r25, 0xFF	; 255
 438:	79 f0       	breq	.+30     	; 0x458 <.L7^B1>

0000043a <.L3^B1>:
 43a:	87 95       	ror	r24
 43c:	08 95       	ret

0000043e <.L4^B1>:
 43e:	12 16       	cp	r1, r18
 440:	13 06       	cpc	r1, r19
 442:	14 06       	cpc	r1, r20
 444:	55 1f       	adc	r21, r21
 446:	f2 cf       	rjmp	.-28     	; 0x42c <.L1^B1>

00000448 <.L5^B1>:
 448:	46 95       	lsr	r20
 44a:	f1 df       	rcall	.-30     	; 0x42e <__fp_splitA>
 44c:	08 c0       	rjmp	.+16     	; 0x45e <.L8^B1>

0000044e <.L6^B1>:
 44e:	16 16       	cp	r1, r22
 450:	17 06       	cpc	r1, r23
 452:	18 06       	cpc	r1, r24
 454:	99 1f       	adc	r25, r25
 456:	f1 cf       	rjmp	.-30     	; 0x43a <.L3^B1>

00000458 <.L7^B1>:
 458:	86 95       	lsr	r24
 45a:	71 05       	cpc	r23, r1
 45c:	61 05       	cpc	r22, r1

0000045e <.L8^B1>:
 45e:	08 94       	sec
 460:	08 95       	ret

00000462 <__fp_zero>:
 462:	e8 94       	clt

00000464 <__fp_szero>:
 464:	bb 27       	eor	r27, r27
 466:	66 27       	eor	r22, r22
 468:	77 27       	eor	r23, r23
 46a:	cb 01       	movw	r24, r22
 46c:	97 f9       	bld	r25, 7
 46e:	08 95       	ret

00000470 <__gesf2>:
 470:	0e 94 eb 01 	call	0x3d6	; 0x3d6 <__fp_cmp>
 474:	08 f4       	brcc	.+2      	; 0x478 <.L1^B1>
 476:	8f ef       	ldi	r24, 0xFF	; 255

00000478 <.L1^B1>:
 478:	08 95       	ret

0000047a <__mulsf3>:
 47a:	0e 94 50 02 	call	0x4a0	; 0x4a0 <__mulsf3x>
 47e:	0c 94 c1 02 	jmp	0x582	; 0x582 <__fp_round>

00000482 <.L^B1>:
 482:	0e 94 b3 02 	call	0x566	; 0x566 <__fp_pscA>
 486:	38 f0       	brcs	.+14     	; 0x496 <.L1^B1>
 488:	0e 94 ba 02 	call	0x574	; 0x574 <__fp_pscB>
 48c:	20 f0       	brcs	.+8      	; 0x496 <.L1^B1>
 48e:	95 23       	and	r25, r21
 490:	11 f0       	breq	.+4      	; 0x496 <.L1^B1>
 492:	0c 94 aa 02 	jmp	0x554	; 0x554 <__fp_inf>

00000496 <.L1^B1>:
 496:	0c 94 b0 02 	jmp	0x560	; 0x560 <__fp_nan>

0000049a <.L2^B1>:
 49a:	11 24       	eor	r1, r1
 49c:	0c 94 32 02 	jmp	0x464	; 0x464 <__fp_szero>

000004a0 <__mulsf3x>:
 4a0:	0e 94 0f 02 	call	0x41e	; 0x41e <__fp_split3>
 4a4:	70 f3       	brcs	.-36     	; 0x482 <.L^B1>

000004a6 <__mulsf3_pse>:
 4a6:	95 9f       	mul	r25, r21
 4a8:	c1 f3       	breq	.-16     	; 0x49a <.L2^B1>
 4aa:	95 0f       	add	r25, r21
 4ac:	50 e0       	ldi	r21, 0x00	; 0
 4ae:	55 1f       	adc	r21, r21
 4b0:	62 9f       	mul	r22, r18
 4b2:	f0 01       	movw	r30, r0
 4b4:	72 9f       	mul	r23, r18
 4b6:	bb 27       	eor	r27, r27
 4b8:	f0 0d       	add	r31, r0
 4ba:	b1 1d       	adc	r27, r1
 4bc:	63 9f       	mul	r22, r19
 4be:	aa 27       	eor	r26, r26
 4c0:	f0 0d       	add	r31, r0
 4c2:	b1 1d       	adc	r27, r1
 4c4:	aa 1f       	adc	r26, r26
 4c6:	64 9f       	mul	r22, r20
 4c8:	66 27       	eor	r22, r22
 4ca:	b0 0d       	add	r27, r0
 4cc:	a1 1d       	adc	r26, r1
 4ce:	66 1f       	adc	r22, r22
 4d0:	82 9f       	mul	r24, r18
 4d2:	22 27       	eor	r18, r18
 4d4:	b0 0d       	add	r27, r0
 4d6:	a1 1d       	adc	r26, r1
 4d8:	62 1f       	adc	r22, r18
 4da:	73 9f       	mul	r23, r19
 4dc:	b0 0d       	add	r27, r0
 4de:	a1 1d       	adc	r26, r1
 4e0:	62 1f       	adc	r22, r18
 4e2:	83 9f       	mul	r24, r19
 4e4:	a0 0d       	add	r26, r0
 4e6:	61 1d       	adc	r22, r1
 4e8:	22 1f       	adc	r18, r18
 4ea:	74 9f       	mul	r23, r20
 4ec:	33 27       	eor	r19, r19
 4ee:	a0 0d       	add	r26, r0
 4f0:	61 1d       	adc	r22, r1
 4f2:	23 1f       	adc	r18, r19
 4f4:	84 9f       	mul	r24, r20
 4f6:	60 0d       	add	r22, r0
 4f8:	21 1d       	adc	r18, r1
 4fa:	82 2f       	mov	r24, r18
 4fc:	76 2f       	mov	r23, r22
 4fe:	6a 2f       	mov	r22, r26
 500:	11 24       	eor	r1, r1
 502:	9f 57       	subi	r25, 0x7F	; 127
 504:	50 40       	sbci	r21, 0x00	; 0
 506:	9a f0       	brmi	.+38     	; 0x52e <.L13^B1>
 508:	f1 f0       	breq	.+60     	; 0x546 <.L15^B1>

0000050a <.L10^B1>:
 50a:	88 23       	and	r24, r24
 50c:	4a f0       	brmi	.+18     	; 0x520 <.L11^B1>
 50e:	ee 0f       	add	r30, r30
 510:	ff 1f       	adc	r31, r31
 512:	bb 1f       	adc	r27, r27
 514:	66 1f       	adc	r22, r22
 516:	77 1f       	adc	r23, r23
 518:	88 1f       	adc	r24, r24
 51a:	91 50       	subi	r25, 0x01	; 1
 51c:	50 40       	sbci	r21, 0x00	; 0
 51e:	a9 f7       	brne	.-22     	; 0x50a <.L10^B1>

00000520 <.L11^B1>:
 520:	9e 3f       	cpi	r25, 0xFE	; 254
 522:	51 05       	cpc	r21, r1
 524:	80 f0       	brcs	.+32     	; 0x546 <.L15^B1>
 526:	0c 94 aa 02 	jmp	0x554	; 0x554 <__fp_inf>

0000052a <.L12^B1>:
 52a:	0c 94 32 02 	jmp	0x464	; 0x464 <__fp_szero>

0000052e <.L13^B1>:
 52e:	5f 3f       	cpi	r21, 0xFF	; 255
 530:	e4 f3       	brlt	.-8      	; 0x52a <.L12^B1>
 532:	98 3e       	cpi	r25, 0xE8	; 232
 534:	d4 f3       	brlt	.-12     	; 0x52a <.L12^B1>

00000536 <.L14^B1>:
 536:	86 95       	lsr	r24
 538:	77 95       	ror	r23
 53a:	67 95       	ror	r22
 53c:	b7 95       	ror	r27
 53e:	f7 95       	ror	r31
 540:	e7 95       	ror	r30
 542:	9f 5f       	subi	r25, 0xFF	; 255
 544:	c1 f7       	brne	.-16     	; 0x536 <.L14^B1>

00000546 <.L15^B1>:
 546:	fe 2b       	or	r31, r30
 548:	88 0f       	add	r24, r24
 54a:	91 1d       	adc	r25, r1
 54c:	96 95       	lsr	r25
 54e:	87 95       	ror	r24
 550:	97 f9       	bld	r25, 7
 552:	08 95       	ret

00000554 <__fp_inf>:
 554:	97 f9       	bld	r25, 7
 556:	9f 67       	ori	r25, 0x7F	; 127
 558:	80 e8       	ldi	r24, 0x80	; 128
 55a:	70 e0       	ldi	r23, 0x00	; 0
 55c:	60 e0       	ldi	r22, 0x00	; 0
 55e:	08 95       	ret

00000560 <__fp_nan>:
 560:	9f ef       	ldi	r25, 0xFF	; 255
 562:	80 ec       	ldi	r24, 0xC0	; 192
 564:	08 95       	ret

00000566 <__fp_pscA>:
 566:	00 24       	eor	r0, r0
 568:	0a 94       	dec	r0
 56a:	16 16       	cp	r1, r22
 56c:	17 06       	cpc	r1, r23
 56e:	18 06       	cpc	r1, r24
 570:	09 06       	cpc	r0, r25
 572:	08 95       	ret

00000574 <__fp_pscB>:
 574:	00 24       	eor	r0, r0
 576:	0a 94       	dec	r0
 578:	12 16       	cp	r1, r18
 57a:	13 06       	cpc	r1, r19
 57c:	14 06       	cpc	r1, r20
 57e:	05 06       	cpc	r0, r21
 580:	08 95       	ret

00000582 <__fp_round>:
 582:	09 2e       	mov	r0, r25
 584:	03 94       	inc	r0
 586:	00 0c       	add	r0, r0
 588:	11 f4       	brne	.+4      	; 0x58e <.L1^B1>
 58a:	88 23       	and	r24, r24
 58c:	52 f0       	brmi	.+20     	; 0x5a2 <.L3^B1>

0000058e <.L1^B1>:
 58e:	bb 0f       	add	r27, r27
 590:	40 f4       	brcc	.+16     	; 0x5a2 <.L3^B1>
 592:	bf 2b       	or	r27, r31
 594:	11 f4       	brne	.+4      	; 0x59a <.L2^B1>
 596:	60 ff       	sbrs	r22, 0
 598:	04 c0       	rjmp	.+8      	; 0x5a2 <.L3^B1>

0000059a <.L2^B1>:
 59a:	6f 5f       	subi	r22, 0xFF	; 255
 59c:	7f 4f       	sbci	r23, 0xFF	; 255
 59e:	8f 4f       	sbci	r24, 0xFF	; 255
 5a0:	9f 4f       	sbci	r25, 0xFF	; 255

000005a2 <.L3^B1>:
 5a2:	08 95       	ret

000005a4 <_exit>:
 5a4:	f8 94       	cli

000005a6 <__stop_program>:
 5a6:	ff cf       	rjmp	.-2      	; 0x5a6 <__stop_program>

000005a8 <L0^A>:
 5a8:	05 01       	movw	r0, r10
 5aa:	05 01       	movw	r0, r10
 5ac:	05 01       	movw	r0, r10
 5ae:	05 01       	movw	r0, r10
 5b0:	05 01       	movw	r0, r10
 5b2:	05 01       	movw	r0, r10
 5b4:	05 01       	movw	r0, r10
 5b6:	05 01       	movw	r0, r10
 5b8:	05 01       	movw	r0, r10
 5ba:	05 01       	movw	r0, r10
 5bc:	05 01       	movw	r0, r10
 5be:	05 01       	movw	r0, r10
 5c0:	05 01       	movw	r0, r10
 5c2:	05 01       	movw	r0, r10
