
bin\Debug\AGV-Final.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  0000042c  000004e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000042c  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800202  00800202  000004e2  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000004e2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000004e5  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004f8  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000b8  00000000  00000000  00000538  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00000e02  00000000  00000000  000005f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000ccf  00000000  00000000  000013f2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   0000056d  00000000  00000000  000020c1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000074  00000000  00000000  00002630  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000533  00000000  00000000  000026a4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 00000159  00000000  00000000  00002bd7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 82 00 	jmp	0x104	; 0x104 <__ctors_end>
   4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
   8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
   c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  10:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  14:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  18:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  1c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  20:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  24:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  28:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  2c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  30:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  34:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  38:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  3c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  40:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  44:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  48:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  4c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  50:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  54:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  58:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  5c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  60:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  64:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  68:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  6c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  70:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  74:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  78:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  7c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  80:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  84:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  88:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  8c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  90:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  94:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  98:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  9c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  a0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  a4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  a8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  ac:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  b0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  b4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  b8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  bc:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  c0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  c4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  c8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  cc:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  d0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  d4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  d8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  dc:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
  e0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>

000000e4 <__trampolines_start>:
  e4:	0c 94 bf 01 	jmp	0x37e	; 0x37e <.L10>
  e8:	0c 94 83 01 	jmp	0x306	; 0x306 <.L17>
  ec:	0c 94 92 01 	jmp	0x324	; 0x324 <.L16>
  f0:	0c 94 dd 01 	jmp	0x3ba	; 0x3ba <.L13>
  f4:	0c 94 a1 01 	jmp	0x342	; 0x342 <.L14>
  f8:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <.L9>
  fc:	0c 94 b0 01 	jmp	0x360	; 0x360 <.L15>
 100:	0c 94 ce 01 	jmp	0x39c	; 0x39c <.L12>

00000104 <__ctors_end>:
 104:	11 24       	eor	r1, r1
 106:	1f be       	out	0x3f, r1	; 63
 108:	cf ef       	ldi	r28, 0xFF	; 255
 10a:	d1 e2       	ldi	r29, 0x21	; 33
 10c:	de bf       	out	0x3e, r29	; 62
 10e:	cd bf       	out	0x3d, r28	; 61
 110:	00 e0       	ldi	r16, 0x00	; 0
 112:	0c bf       	out	0x3c, r16	; 60

00000114 <__do_copy_data>:
 114:	12 e0       	ldi	r17, 0x02	; 2

00000116 <.Loc.1>:
 116:	a0 e0       	ldi	r26, 0x00	; 0

00000118 <.Loc.2>:
 118:	b2 e0       	ldi	r27, 0x02	; 2

0000011a <.Loc.3>:
 11a:	ec e2       	ldi	r30, 0x2C	; 44

0000011c <.Loc.4>:
 11c:	f4 e0       	ldi	r31, 0x04	; 4

0000011e <.Loc.5>:
 11e:	00 e0       	ldi	r16, 0x00	; 0

00000120 <.Loc.6>:
 120:	0b bf       	out	0x3b, r16	; 59

00000122 <.Loc.7>:
 122:	02 c0       	rjmp	.+4      	; 0x128 <.L__do_copy_data_start>

00000124 <.L__do_copy_data_loop>:
 124:	07 90       	elpm	r0, Z+

00000126 <.Loc.9>:
 126:	0d 92       	st	X+, r0

00000128 <.L__do_copy_data_start>:
 128:	a2 30       	cpi	r26, 0x02	; 2

0000012a <.Loc.11>:
 12a:	b1 07       	cpc	r27, r17

0000012c <.Loc.12>:
 12c:	d9 f7       	brne	.-10     	; 0x124 <.L__do_copy_data_loop>

0000012e <__do_clear_bss>:
 12e:	22 e0       	ldi	r18, 0x02	; 2

00000130 <.Loc.1>:
 130:	a2 e0       	ldi	r26, 0x02	; 2

00000132 <.Loc.2>:
 132:	b2 e0       	ldi	r27, 0x02	; 2

00000134 <.Loc.3>:
 134:	01 c0       	rjmp	.+2      	; 0x138 <.Loc.5>

00000136 <.Loc.4>:
 136:	1d 92       	st	X+, r1

00000138 <.Loc.5>:
 138:	a4 30       	cpi	r26, 0x04	; 4

0000013a <.Loc.6>:
 13a:	b2 07       	cpc	r27, r18

0000013c <.Loc.7>:
 13c:	e1 f7       	brne	.-8      	; 0x136 <.Loc.4>

0000013e <L0^A>:
 13e:	0e 94 a5 00 	call	0x14a	; 0x14a <main>
 142:	0c 94 06 02 	jmp	0x40c	; 0x40c <_exit>

00000146 <__bad_interrupt>:
 146:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014a <main>:

int basissnelheid = 20000;                    // basissnelheid
int speed;                                   // past het prog aan

int main(void)
{
 14a:	cf 93       	push	r28
 14c:	df 93       	push	r29
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62

00000152 <.Loc.1>:
    setupSteppers();                         // steppers initialiseren
 152:	0e 94 b7 00 	call	0x16e	; 0x16e <setupSteppers>

00000156 <.Loc.2>:
    speed = basissnelheid;
 156:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <basissnelheid>
 15a:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <basissnelheid+0x1>
 15e:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <speed+0x1>
 162:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <speed>

00000166 <.L2>:

    while(1)
    {
        line();
 166:	0e 94 2c 01 	call	0x258	; 0x258 <line>

0000016a <.LBE2>:
    {
 16a:	00 00       	nop
 16c:	fc cf       	rjmp	.-8      	; 0x166 <.L2>

0000016e <setupSteppers>:

    return 0;
}

int setupSteppers(void)
{
 16e:	cf 93       	push	r28
 170:	df 93       	push	r29
 172:	cd b7       	in	r28, 0x3d	; 61
 174:	de b7       	in	r29, 0x3e	; 62

00000176 <.Loc.6>:
    DDRL |= (1 << stepR);                  // PWM steppers aan
 176:	8a e0       	ldi	r24, 0x0A	; 10
 178:	91 e0       	ldi	r25, 0x01	; 1
 17a:	fc 01       	movw	r30, r24
 17c:	20 81       	ld	r18, Z
 17e:	8a e0       	ldi	r24, 0x0A	; 10
 180:	91 e0       	ldi	r25, 0x01	; 1

00000182 <.Loc.7>:
 182:	28 60       	ori	r18, 0x08	; 8
 184:	fc 01       	movw	r30, r24
 186:	20 83       	st	Z, r18

00000188 <.Loc.8>:
    DDRB |= (1 << stepL);
 188:	84 e2       	ldi	r24, 0x24	; 36
 18a:	90 e0       	ldi	r25, 0x00	; 0
 18c:	fc 01       	movw	r30, r24
 18e:	20 81       	ld	r18, Z
 190:	84 e2       	ldi	r24, 0x24	; 36
 192:	90 e0       	ldi	r25, 0x00	; 0

00000194 <.Loc.9>:
 194:	20 62       	ori	r18, 0x20	; 32
 196:	fc 01       	movw	r30, r24
 198:	20 83       	st	Z, r18

0000019a <.Loc.10>:
    DDRE |= (1 << stop);
 19a:	8d e2       	ldi	r24, 0x2D	; 45
 19c:	90 e0       	ldi	r25, 0x00	; 0
 19e:	fc 01       	movw	r30, r24
 1a0:	20 81       	ld	r18, Z
 1a2:	8d e2       	ldi	r24, 0x2D	; 45
 1a4:	90 e0       	ldi	r25, 0x00	; 0

000001a6 <.Loc.11>:
 1a6:	21 60       	ori	r18, 0x01	; 1
 1a8:	fc 01       	movw	r30, r24
 1aa:	20 83       	st	Z, r18

000001ac <.Loc.12>:


    TCCR1A = (1 << COM1A1) | (0 << COM1A0) | (1 << WGM11) | (0 << WGM10);
 1ac:	80 e8       	ldi	r24, 0x80	; 128
 1ae:	90 e0       	ldi	r25, 0x00	; 0

000001b0 <.Loc.13>:
 1b0:	22 e8       	ldi	r18, 0x82	; 130
 1b2:	fc 01       	movw	r30, r24
 1b4:	20 83       	st	Z, r18

000001b6 <.Loc.14>:
    TCCR1B = (1 << WGM13) | (1 << WGM12) | (0 << CS12) | (0 << CS11) | (1 << CS10);
 1b6:	81 e8       	ldi	r24, 0x81	; 129
 1b8:	90 e0       	ldi	r25, 0x00	; 0

000001ba <.Loc.15>:
 1ba:	29 e1       	ldi	r18, 0x19	; 25
 1bc:	fc 01       	movw	r30, r24
 1be:	20 83       	st	Z, r18

000001c0 <.Loc.16>:

    TCCR5A = (1 << COM5A1) | (0 << COM5A0) | (1 << WGM51) | (0 << WGM50);
 1c0:	80 e2       	ldi	r24, 0x20	; 32
 1c2:	91 e0       	ldi	r25, 0x01	; 1

000001c4 <.Loc.17>:
 1c4:	22 e8       	ldi	r18, 0x82	; 130
 1c6:	fc 01       	movw	r30, r24
 1c8:	20 83       	st	Z, r18

000001ca <.Loc.18>:
    TCCR5B = (1 << WGM53) | (1 << WGM52) | (0 << CS52) | (0 << CS51) | (1 << CS50);
 1ca:	81 e2       	ldi	r24, 0x21	; 33
 1cc:	91 e0       	ldi	r25, 0x01	; 1

000001ce <.Loc.19>:
 1ce:	29 e1       	ldi	r18, 0x19	; 25
 1d0:	fc 01       	movw	r30, r24
 1d2:	20 83       	st	Z, r18

000001d4 <.Loc.20>:

    OCR1A = 2000;
 1d4:	88 e8       	ldi	r24, 0x88	; 136
 1d6:	90 e0       	ldi	r25, 0x00	; 0

000001d8 <.Loc.21>:
 1d8:	20 ed       	ldi	r18, 0xD0	; 208
 1da:	37 e0       	ldi	r19, 0x07	; 7
 1dc:	fc 01       	movw	r30, r24
 1de:	31 83       	std	Z+1, r19	; 0x01
 1e0:	20 83       	st	Z, r18

000001e2 <.Loc.22>:
    OCR5A = 2000;
 1e2:	88 e2       	ldi	r24, 0x28	; 40
 1e4:	91 e0       	ldi	r25, 0x01	; 1

000001e6 <.Loc.23>:
 1e6:	20 ed       	ldi	r18, 0xD0	; 208
 1e8:	37 e0       	ldi	r19, 0x07	; 7
 1ea:	fc 01       	movw	r30, r24
 1ec:	31 83       	std	Z+1, r19	; 0x01
 1ee:	20 83       	st	Z, r18

000001f0 <.Loc.24>:
    ICR1 = 20000;			                       // 32000 is 5ms 16000 is 1ms
 1f0:	86 e8       	ldi	r24, 0x86	; 134
 1f2:	90 e0       	ldi	r25, 0x00	; 0

000001f4 <.Loc.25>:
 1f4:	20 e2       	ldi	r18, 0x20	; 32
 1f6:	3e e4       	ldi	r19, 0x4E	; 78
 1f8:	fc 01       	movw	r30, r24
 1fa:	31 83       	std	Z+1, r19	; 0x01
 1fc:	20 83       	st	Z, r18

000001fe <.Loc.26>:
    ICR5 = 20000;
 1fe:	86 e2       	ldi	r24, 0x26	; 38
 200:	91 e0       	ldi	r25, 0x01	; 1

00000202 <.Loc.27>:
 202:	20 e2       	ldi	r18, 0x20	; 32
 204:	3e e4       	ldi	r19, 0x4E	; 78
 206:	fc 01       	movw	r30, r24
 208:	31 83       	std	Z+1, r19	; 0x01
 20a:	20 83       	st	Z, r18

0000020c <.Loc.28>:

    DDRG |= (1 << 2);                    // GND voor linesensor
 20c:	83 e3       	ldi	r24, 0x33	; 51
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	fc 01       	movw	r30, r24
 212:	20 81       	ld	r18, Z
 214:	83 e3       	ldi	r24, 0x33	; 51
 216:	90 e0       	ldi	r25, 0x00	; 0

00000218 <.Loc.29>:
 218:	24 60       	ori	r18, 0x04	; 4
 21a:	fc 01       	movw	r30, r24
 21c:	20 83       	st	Z, r18

0000021e <.Loc.30>:
    PORTG &= ~(1 << 2);                  // maakt port GND
 21e:	84 e3       	ldi	r24, 0x34	; 52
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	fc 01       	movw	r30, r24
 224:	20 81       	ld	r18, Z

00000226 <.Loc.31>:
 226:	84 e3       	ldi	r24, 0x34	; 52
 228:	90 e0       	ldi	r25, 0x00	; 0

0000022a <.Loc.32>:
 22a:	2b 7f       	andi	r18, 0xFB	; 251
 22c:	fc 01       	movw	r30, r24
 22e:	20 83       	st	Z, r18

00000230 <.Loc.33>:
    DDRC &= ~(1 << 0) | ~(1 << 2) | ~(1 << 4) | ~(1 << 6);  // ingang sensor
 230:	27 e2       	ldi	r18, 0x27	; 39
 232:	30 e0       	ldi	r19, 0x00	; 0
 234:	87 e2       	ldi	r24, 0x27	; 39
 236:	90 e0       	ldi	r25, 0x00	; 0
 238:	f9 01       	movw	r30, r18
 23a:	20 81       	ld	r18, Z

0000023c <.Loc.34>:
 23c:	fc 01       	movw	r30, r24
 23e:	20 83       	st	Z, r18

00000240 <.Loc.35>:
    DDRA &= ~(1 << 7) | ~(1 << 5) | ~(1 << 3) | ~(1 << 1);  // same
 240:	21 e2       	ldi	r18, 0x21	; 33
 242:	30 e0       	ldi	r19, 0x00	; 0
 244:	81 e2       	ldi	r24, 0x21	; 33
 246:	90 e0       	ldi	r25, 0x00	; 0
 248:	f9 01       	movw	r30, r18
 24a:	20 81       	ld	r18, Z

0000024c <.Loc.36>:
 24c:	fc 01       	movw	r30, r24
 24e:	20 83       	st	Z, r18

00000250 <.Loc.37>:

}
 250:	00 00       	nop
 252:	df 91       	pop	r29
 254:	cf 91       	pop	r28
 256:	08 95       	ret

00000258 <line>:

int line(void)
{
 258:	cf 93       	push	r28
 25a:	df 93       	push	r29
 25c:	0f 92       	push	r0
 25e:	0f 92       	push	r0
 260:	cd b7       	in	r28, 0x3d	; 61
 262:	de b7       	in	r29, 0x3e	; 62

00000264 <.Loc.39>:

    int sensoren = 0;
 264:	1a 82       	std	Y+2, r1	; 0x02
 266:	19 82       	std	Y+1, r1	; 0x01

00000268 <.Loc.40>:


    if(PINC & (1 << 4))
 268:	86 e2       	ldi	r24, 0x26	; 38
 26a:	90 e0       	ldi	r25, 0x00	; 0
 26c:	fc 01       	movw	r30, r24
 26e:	80 81       	ld	r24, Z

00000270 <.Loc.41>:
 270:	88 2f       	mov	r24, r24
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	80 71       	andi	r24, 0x10	; 16
 276:	99 27       	eor	r25, r25

00000278 <.Loc.42>:
 278:	00 97       	sbiw	r24, 0x00	; 0
 27a:	29 f0       	breq	.+10     	; 0x286 <.L5>

0000027c <.Loc.43>:
    {
        sensoren += 0b0001;
 27c:	89 81       	ldd	r24, Y+1	; 0x01
 27e:	9a 81       	ldd	r25, Y+2	; 0x02
 280:	01 96       	adiw	r24, 0x01	; 1
 282:	9a 83       	std	Y+2, r25	; 0x02
 284:	89 83       	std	Y+1, r24	; 0x01

00000286 <.L5>:
    }
    if(PINC & (1 << 6))
 286:	86 e2       	ldi	r24, 0x26	; 38
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	fc 01       	movw	r30, r24
 28c:	80 81       	ld	r24, Z

0000028e <.Loc.45>:
 28e:	88 2f       	mov	r24, r24
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	80 74       	andi	r24, 0x40	; 64
 294:	99 27       	eor	r25, r25

00000296 <.Loc.46>:
 296:	00 97       	sbiw	r24, 0x00	; 0
 298:	29 f0       	breq	.+10     	; 0x2a4 <.L6>

0000029a <.Loc.47>:
    {
        sensoren += 0b0010;
 29a:	89 81       	ldd	r24, Y+1	; 0x01
 29c:	9a 81       	ldd	r25, Y+2	; 0x02
 29e:	02 96       	adiw	r24, 0x02	; 2
 2a0:	9a 83       	std	Y+2, r25	; 0x02
 2a2:	89 83       	std	Y+1, r24	; 0x01

000002a4 <.L6>:
    }
    if(PINA & (1 << 7))
 2a4:	80 e2       	ldi	r24, 0x20	; 32
 2a6:	90 e0       	ldi	r25, 0x00	; 0
 2a8:	fc 01       	movw	r30, r24
 2aa:	80 81       	ld	r24, Z

000002ac <.Loc.49>:
 2ac:	88 23       	and	r24, r24
 2ae:	2c f4       	brge	.+10     	; 0x2ba <.L7>

000002b0 <.Loc.50>:
    {
        sensoren += 0b0100;
 2b0:	89 81       	ldd	r24, Y+1	; 0x01
 2b2:	9a 81       	ldd	r25, Y+2	; 0x02
 2b4:	04 96       	adiw	r24, 0x04	; 4
 2b6:	9a 83       	std	Y+2, r25	; 0x02
 2b8:	89 83       	std	Y+1, r24	; 0x01

000002ba <.L7>:
    }
    if(PINA & (1 << 5))
 2ba:	80 e2       	ldi	r24, 0x20	; 32
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	fc 01       	movw	r30, r24
 2c0:	80 81       	ld	r24, Z

000002c2 <.Loc.52>:
 2c2:	88 2f       	mov	r24, r24
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	80 72       	andi	r24, 0x20	; 32
 2c8:	99 27       	eor	r25, r25

000002ca <.Loc.53>:
 2ca:	00 97       	sbiw	r24, 0x00	; 0
 2cc:	29 f0       	breq	.+10     	; 0x2d8 <.L8>

000002ce <.Loc.54>:
    {
        sensoren += 0b1000;
 2ce:	89 81       	ldd	r24, Y+1	; 0x01
 2d0:	9a 81       	ldd	r25, Y+2	; 0x02
 2d2:	08 96       	adiw	r24, 0x08	; 8
 2d4:	9a 83       	std	Y+2, r25	; 0x02
 2d6:	89 83       	std	Y+1, r24	; 0x01

000002d8 <.L8>:
    }
    switch(sensoren)
 2d8:	89 81       	ldd	r24, Y+1	; 0x01
 2da:	9a 81       	ldd	r25, Y+2	; 0x02
 2dc:	09 2e       	mov	r0, r25
 2de:	00 0c       	add	r0, r0
 2e0:	aa 0b       	sbc	r26, r26
 2e2:	bb 0b       	sbc	r27, r27
 2e4:	01 97       	sbiw	r24, 0x01	; 1
 2e6:	a1 09       	sbc	r26, r1
 2e8:	b1 09       	sbc	r27, r1
 2ea:	8d 30       	cpi	r24, 0x0D	; 13
 2ec:	91 05       	cpc	r25, r1
 2ee:	a1 05       	cpc	r26, r1
 2f0:	b1 05       	cpc	r27, r1
 2f2:	11 f0       	breq	.+4      	; 0x2f8 <L0^A+0x2>

000002f4 <L0^A>:
 2f4:	08 f0       	brcs	.+2      	; 0x2f8 <L0^A+0x2>

000002f6 <L0^A>:
 2f6:	70 c0       	rjmp	.+224    	; 0x3d8 <.L9>
 2f8:	fc 01       	movw	r30, r24
 2fa:	88 27       	eor	r24, r24
 2fc:	e8 5f       	subi	r30, 0xF8	; 248
 2fe:	fd 4f       	sbci	r31, 0xFD	; 253
 300:	8f 4f       	sbci	r24, 0xFF	; 255
 302:	0c 94 fe 01 	jmp	0x3fc	; 0x3fc <__tablejump2__>

00000306 <.L17>:
    {
    case(0b0001):
        ICR1 = 20000;
 306:	86 e8       	ldi	r24, 0x86	; 134
 308:	90 e0       	ldi	r25, 0x00	; 0

0000030a <.Loc.57>:
 30a:	20 e2       	ldi	r18, 0x20	; 32
 30c:	3e e4       	ldi	r19, 0x4E	; 78
 30e:	fc 01       	movw	r30, r24
 310:	31 83       	std	Z+1, r19	; 0x01
 312:	20 83       	st	Z, r18

00000314 <.Loc.58>:
        ICR5 = 60000;
 314:	86 e2       	ldi	r24, 0x26	; 38
 316:	91 e0       	ldi	r25, 0x01	; 1

00000318 <.Loc.59>:
 318:	20 e6       	ldi	r18, 0x60	; 96
 31a:	3a ee       	ldi	r19, 0xEA	; 234
 31c:	fc 01       	movw	r30, r24
 31e:	31 83       	std	Z+1, r19	; 0x01
 320:	20 83       	st	Z, r18

00000322 <.Loc.60>:
        break;
 322:	66 c0       	rjmp	.+204    	; 0x3f0 <.L18>

00000324 <.L16>:
    case(0b0011):
        ICR1 = 20000;
 324:	86 e8       	ldi	r24, 0x86	; 134
 326:	90 e0       	ldi	r25, 0x00	; 0

00000328 <.Loc.62>:
 328:	20 e2       	ldi	r18, 0x20	; 32
 32a:	3e e4       	ldi	r19, 0x4E	; 78
 32c:	fc 01       	movw	r30, r24
 32e:	31 83       	std	Z+1, r19	; 0x01
 330:	20 83       	st	Z, r18

00000332 <.Loc.63>:
        ICR5 = 40000;
 332:	86 e2       	ldi	r24, 0x26	; 38
 334:	91 e0       	ldi	r25, 0x01	; 1

00000336 <.Loc.64>:
 336:	20 e4       	ldi	r18, 0x40	; 64
 338:	3c e9       	ldi	r19, 0x9C	; 156
 33a:	fc 01       	movw	r30, r24
 33c:	31 83       	std	Z+1, r19	; 0x01
 33e:	20 83       	st	Z, r18

00000340 <.Loc.65>:
        break;
 340:	57 c0       	rjmp	.+174    	; 0x3f0 <.L18>

00000342 <.L14>:
    case(0b0111):
        ICR1 = 20000;
 342:	86 e8       	ldi	r24, 0x86	; 134
 344:	90 e0       	ldi	r25, 0x00	; 0

00000346 <.Loc.67>:
 346:	20 e2       	ldi	r18, 0x20	; 32
 348:	3e e4       	ldi	r19, 0x4E	; 78
 34a:	fc 01       	movw	r30, r24
 34c:	31 83       	std	Z+1, r19	; 0x01
 34e:	20 83       	st	Z, r18

00000350 <.Loc.68>:
        ICR5 = 30000;
 350:	86 e2       	ldi	r24, 0x26	; 38
 352:	91 e0       	ldi	r25, 0x01	; 1

00000354 <.Loc.69>:
 354:	20 e3       	ldi	r18, 0x30	; 48
 356:	35 e7       	ldi	r19, 0x75	; 117
 358:	fc 01       	movw	r30, r24
 35a:	31 83       	std	Z+1, r19	; 0x01
 35c:	20 83       	st	Z, r18

0000035e <.Loc.70>:
        break;
 35e:	48 c0       	rjmp	.+144    	; 0x3f0 <.L18>

00000360 <.L15>:
    case(0b0110):
        ICR1 = 18000;
 360:	86 e8       	ldi	r24, 0x86	; 134
 362:	90 e0       	ldi	r25, 0x00	; 0

00000364 <.Loc.72>:
 364:	20 e5       	ldi	r18, 0x50	; 80
 366:	36 e4       	ldi	r19, 0x46	; 70
 368:	fc 01       	movw	r30, r24
 36a:	31 83       	std	Z+1, r19	; 0x01
 36c:	20 83       	st	Z, r18

0000036e <.Loc.73>:
        ICR5 = 18000;
 36e:	86 e2       	ldi	r24, 0x26	; 38
 370:	91 e0       	ldi	r25, 0x01	; 1

00000372 <.Loc.74>:
 372:	20 e5       	ldi	r18, 0x50	; 80
 374:	36 e4       	ldi	r19, 0x46	; 70
 376:	fc 01       	movw	r30, r24
 378:	31 83       	std	Z+1, r19	; 0x01
 37a:	20 83       	st	Z, r18

0000037c <.Loc.75>:
        break;
 37c:	39 c0       	rjmp	.+114    	; 0x3f0 <.L18>

0000037e <.L10>:
    case(0b1110):
        ICR1 = 30000;
 37e:	86 e8       	ldi	r24, 0x86	; 134
 380:	90 e0       	ldi	r25, 0x00	; 0

00000382 <.Loc.77>:
 382:	20 e3       	ldi	r18, 0x30	; 48
 384:	35 e7       	ldi	r19, 0x75	; 117
 386:	fc 01       	movw	r30, r24
 388:	31 83       	std	Z+1, r19	; 0x01
 38a:	20 83       	st	Z, r18

0000038c <.Loc.78>:
        ICR5 = 20000;
 38c:	86 e2       	ldi	r24, 0x26	; 38
 38e:	91 e0       	ldi	r25, 0x01	; 1

00000390 <.Loc.79>:
 390:	20 e2       	ldi	r18, 0x20	; 32
 392:	3e e4       	ldi	r19, 0x4E	; 78
 394:	fc 01       	movw	r30, r24
 396:	31 83       	std	Z+1, r19	; 0x01
 398:	20 83       	st	Z, r18

0000039a <.Loc.80>:
        break;
 39a:	2a c0       	rjmp	.+84     	; 0x3f0 <.L18>

0000039c <.L12>:
    case(0b1100):
        ICR1 = 40000;
 39c:	86 e8       	ldi	r24, 0x86	; 134
 39e:	90 e0       	ldi	r25, 0x00	; 0

000003a0 <.Loc.82>:
 3a0:	20 e4       	ldi	r18, 0x40	; 64
 3a2:	3c e9       	ldi	r19, 0x9C	; 156
 3a4:	fc 01       	movw	r30, r24
 3a6:	31 83       	std	Z+1, r19	; 0x01
 3a8:	20 83       	st	Z, r18

000003aa <.Loc.83>:
        ICR5 = 20000;
 3aa:	86 e2       	ldi	r24, 0x26	; 38
 3ac:	91 e0       	ldi	r25, 0x01	; 1

000003ae <.Loc.84>:
 3ae:	20 e2       	ldi	r18, 0x20	; 32
 3b0:	3e e4       	ldi	r19, 0x4E	; 78
 3b2:	fc 01       	movw	r30, r24
 3b4:	31 83       	std	Z+1, r19	; 0x01
 3b6:	20 83       	st	Z, r18

000003b8 <.Loc.85>:
        break;
 3b8:	1b c0       	rjmp	.+54     	; 0x3f0 <.L18>

000003ba <.L13>:
    case(0b1000):
        ICR1 = 60000;
 3ba:	86 e8       	ldi	r24, 0x86	; 134
 3bc:	90 e0       	ldi	r25, 0x00	; 0

000003be <.Loc.87>:
 3be:	20 e6       	ldi	r18, 0x60	; 96
 3c0:	3a ee       	ldi	r19, 0xEA	; 234
 3c2:	fc 01       	movw	r30, r24
 3c4:	31 83       	std	Z+1, r19	; 0x01
 3c6:	20 83       	st	Z, r18

000003c8 <.Loc.88>:
        ICR5 = 20000;
 3c8:	86 e2       	ldi	r24, 0x26	; 38
 3ca:	91 e0       	ldi	r25, 0x01	; 1

000003cc <.Loc.89>:
 3cc:	20 e2       	ldi	r18, 0x20	; 32
 3ce:	3e e4       	ldi	r19, 0x4E	; 78
 3d0:	fc 01       	movw	r30, r24
 3d2:	31 83       	std	Z+1, r19	; 0x01
 3d4:	20 83       	st	Z, r18

000003d6 <.Loc.90>:
        break;
 3d6:	0c c0       	rjmp	.+24     	; 0x3f0 <.L18>

000003d8 <.L9>:

    default:
        ICR1 = ICR5 = 63530;
 3d8:	26 e2       	ldi	r18, 0x26	; 38
 3da:	31 e0       	ldi	r19, 0x01	; 1

000003dc <.Loc.92>:
 3dc:	8a e2       	ldi	r24, 0x2A	; 42
 3de:	98 ef       	ldi	r25, 0xF8	; 248
 3e0:	f9 01       	movw	r30, r18
 3e2:	91 83       	std	Z+1, r25	; 0x01
 3e4:	80 83       	st	Z, r24

000003e6 <.Loc.93>:
 3e6:	26 e8       	ldi	r18, 0x86	; 134
 3e8:	30 e0       	ldi	r19, 0x00	; 0

000003ea <.Loc.94>:
 3ea:	f9 01       	movw	r30, r18
 3ec:	91 83       	std	Z+1, r25	; 0x01
 3ee:	80 83       	st	Z, r24

000003f0 <.L18>:
    }
}
 3f0:	00 00       	nop
 3f2:	0f 90       	pop	r0
 3f4:	0f 90       	pop	r0
 3f6:	df 91       	pop	r29
 3f8:	cf 91       	pop	r28
 3fa:	08 95       	ret

000003fc <__tablejump2__>:
 3fc:	ee 0f       	add	r30, r30

000003fe <.Loc.1>:
 3fe:	ff 1f       	adc	r31, r31

00000400 <.Loc.2>:
 400:	88 1f       	adc	r24, r24

00000402 <.Loc.3>:
 402:	8b bf       	out	0x3b, r24	; 59

00000404 <.Loc.4>:
 404:	07 90       	elpm	r0, Z+

00000406 <.Loc.5>:
 406:	f6 91       	elpm	r31, Z

00000408 <.Loc.6>:
 408:	e0 2d       	mov	r30, r0

0000040a <.Loc.7>:
 40a:	19 94       	eijmp

0000040c <_exit>:
 40c:	f8 94       	cli

0000040e <__stop_program>:
 40e:	ff cf       	rjmp	.-2      	; 0x40e <__stop_program>

00000410 <L0^A>:
 410:	83 01       	movw	r16, r6
 412:	ec 01       	movw	r28, r24
 414:	92 01       	movw	r18, r4
 416:	ec 01       	movw	r28, r24
 418:	ec 01       	movw	r28, r24
 41a:	b0 01       	movw	r22, r0
 41c:	a1 01       	movw	r20, r2
 41e:	dd 01       	movw	r26, r26
 420:	ec 01       	movw	r28, r24
 422:	ec 01       	movw	r28, r24
 424:	ec 01       	movw	r28, r24
 426:	ce 01       	movw	r24, r28
 428:	ec 01       	movw	r28, r24
 42a:	bf 01       	movw	r22, r30
