
bin\Debug\AGV.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000004  00800200  00001344  000013f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001344  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800204  00800204  000013fc  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000013fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000013ff  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001414  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 000000f8  00000000  00000000  00001458  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001287  00000000  00000000  00001550  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000e8e  00000000  00000000  000027d7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000bcc  00000000  00000000  00003665  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000274  00000000  00000000  00004234  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000638  00000000  00000000  000044a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 000001a2  00000000  00000000  00004ae0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__vector_17>
      48:	0c 94 fb 05 	jmp	0xbf6	; 0xbf6 <__vector_18>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 99 05 	jmp	0xb32	; 0xb32 <__vector_20>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	e4 e4       	ldi	r30, 0x44	; 68

000000fc <.Loc.4>:
      fc:	f3 e1       	ldi	r31, 0x13	; 19

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a4 30       	cpi	r26, 0x04	; 4

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a4 e0       	ldi	r26, 0x04	; 4

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	a6 30       	cpi	r26, 0x06	; 6

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 95 00 	call	0x12a	; 0x12a <main>
     122:	0c 94 a0 09 	jmp	0x1340	; 0x1340 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <main>:
int timeout = 26100;                          // tijd tot max afstand
int basissnelheid = 20000;                    // basissnelheid
int speed;                                    // past het prog aan

int main(void)
{
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62

00000132 <.Loc.1>:
    setupSteppers();
     132:	0e 94 a9 00 	call	0x152	; 0x152 <setupSteppers>

00000136 <.Loc.2>:
    setupUltraPins();
     136:	0e 94 10 01 	call	0x220	; 0x220 <setupUltraPins>

0000013a <.Loc.3>:
    init_servo();
     13a:	0e 94 23 06 	call	0xc46	; 0xc46 <init_servo>

0000013e <.L2>:

    while(1)
    {
        safety();
     13e:	0e 94 3c 01 	call	0x278	; 0x278 <safety>

00000142 <.Loc.5>:
        ultrasoon();
     142:	0e 94 94 04 	call	0x928	; 0x928 <ultrasoon>

00000146 <.Loc.6>:
        line();
     146:	0e 94 cb 04 	call	0x996	; 0x996 <line>

0000014a <.Loc.7>:
        rijden();
     14a:	0e 94 76 05 	call	0xaec	; 0xaec <rijden>

0000014e <.LBE43>:
    {
     14e:	00 00       	nop
     150:	f6 cf       	rjmp	.-20     	; 0x13e <.L2>

00000152 <setupSteppers>:
    return 0;
}


int setupSteppers(void)
{
     152:	cf 93       	push	r28
     154:	df 93       	push	r29
     156:	cd b7       	in	r28, 0x3d	; 61
     158:	de b7       	in	r29, 0x3e	; 62

0000015a <.Loc.10>:
    DDRL |= (1 << stepR);                  // PWM steppers aan
     15a:	8a e0       	ldi	r24, 0x0A	; 10
     15c:	91 e0       	ldi	r25, 0x01	; 1
     15e:	fc 01       	movw	r30, r24
     160:	20 81       	ld	r18, Z
     162:	8a e0       	ldi	r24, 0x0A	; 10
     164:	91 e0       	ldi	r25, 0x01	; 1

00000166 <.Loc.11>:
     166:	28 60       	ori	r18, 0x08	; 8
     168:	fc 01       	movw	r30, r24
     16a:	20 83       	st	Z, r18

0000016c <.Loc.12>:
    DDRB |= (1 << stepL);
     16c:	84 e2       	ldi	r24, 0x24	; 36
     16e:	90 e0       	ldi	r25, 0x00	; 0
     170:	fc 01       	movw	r30, r24
     172:	20 81       	ld	r18, Z
     174:	84 e2       	ldi	r24, 0x24	; 36
     176:	90 e0       	ldi	r25, 0x00	; 0

00000178 <.Loc.13>:
     178:	20 62       	ori	r18, 0x20	; 32
     17a:	fc 01       	movw	r30, r24
     17c:	20 83       	st	Z, r18

0000017e <.Loc.14>:
    DDRE |= (1 << stop);
     17e:	8d e2       	ldi	r24, 0x2D	; 45
     180:	90 e0       	ldi	r25, 0x00	; 0
     182:	fc 01       	movw	r30, r24
     184:	20 81       	ld	r18, Z
     186:	8d e2       	ldi	r24, 0x2D	; 45
     188:	90 e0       	ldi	r25, 0x00	; 0

0000018a <.Loc.15>:
     18a:	21 60       	ori	r18, 0x01	; 1
     18c:	fc 01       	movw	r30, r24
     18e:	20 83       	st	Z, r18

00000190 <.Loc.16>:


    TCCR1A = (1 << COM1A1) | (0 << COM1A0) | (1 << WGM11) | (0 << WGM10);
     190:	80 e8       	ldi	r24, 0x80	; 128
     192:	90 e0       	ldi	r25, 0x00	; 0

00000194 <.Loc.17>:
     194:	22 e8       	ldi	r18, 0x82	; 130
     196:	fc 01       	movw	r30, r24
     198:	20 83       	st	Z, r18

0000019a <.Loc.18>:
    TCCR1B = (1 << WGM13) | (1 << WGM12) | (0 << CS12) | (0 << CS11) | (1 << CS10);
     19a:	81 e8       	ldi	r24, 0x81	; 129
     19c:	90 e0       	ldi	r25, 0x00	; 0

0000019e <.Loc.19>:
     19e:	29 e1       	ldi	r18, 0x19	; 25
     1a0:	fc 01       	movw	r30, r24
     1a2:	20 83       	st	Z, r18

000001a4 <.Loc.20>:

    TCCR5A = (1 << COM5A1) | (0 << COM5A0) | (1 << WGM51) | (0 << WGM50);
     1a4:	80 e2       	ldi	r24, 0x20	; 32
     1a6:	91 e0       	ldi	r25, 0x01	; 1

000001a8 <.Loc.21>:
     1a8:	22 e8       	ldi	r18, 0x82	; 130
     1aa:	fc 01       	movw	r30, r24
     1ac:	20 83       	st	Z, r18

000001ae <.Loc.22>:
    TCCR5B = (1 << WGM53) | (1 << WGM52) | (0 << CS52) | (0 << CS51) | (1 << CS50);
     1ae:	81 e2       	ldi	r24, 0x21	; 33
     1b0:	91 e0       	ldi	r25, 0x01	; 1

000001b2 <.Loc.23>:
     1b2:	29 e1       	ldi	r18, 0x19	; 25
     1b4:	fc 01       	movw	r30, r24
     1b6:	20 83       	st	Z, r18

000001b8 <.Loc.24>:

    OCR1A = 2000;
     1b8:	88 e8       	ldi	r24, 0x88	; 136
     1ba:	90 e0       	ldi	r25, 0x00	; 0

000001bc <.Loc.25>:
     1bc:	20 ed       	ldi	r18, 0xD0	; 208
     1be:	37 e0       	ldi	r19, 0x07	; 7
     1c0:	fc 01       	movw	r30, r24
     1c2:	31 83       	std	Z+1, r19	; 0x01
     1c4:	20 83       	st	Z, r18

000001c6 <.Loc.26>:
    OCR5A = 2000;
     1c6:	88 e2       	ldi	r24, 0x28	; 40
     1c8:	91 e0       	ldi	r25, 0x01	; 1

000001ca <.Loc.27>:
     1ca:	20 ed       	ldi	r18, 0xD0	; 208
     1cc:	37 e0       	ldi	r19, 0x07	; 7
     1ce:	fc 01       	movw	r30, r24
     1d0:	31 83       	std	Z+1, r19	; 0x01
     1d2:	20 83       	st	Z, r18

000001d4 <.Loc.28>:
//    ICR1;			                       // 32000 is 5ms 16000 is 1ms
//    ICR5;

    DDRG |= (1 << 2);
     1d4:	83 e3       	ldi	r24, 0x33	; 51
     1d6:	90 e0       	ldi	r25, 0x00	; 0
     1d8:	fc 01       	movw	r30, r24
     1da:	20 81       	ld	r18, Z
     1dc:	83 e3       	ldi	r24, 0x33	; 51
     1de:	90 e0       	ldi	r25, 0x00	; 0

000001e0 <.Loc.29>:
     1e0:	24 60       	ori	r18, 0x04	; 4
     1e2:	fc 01       	movw	r30, r24
     1e4:	20 83       	st	Z, r18

000001e6 <.Loc.30>:
    PORTG &= ~(1 << 2);                  // uitgang voor GND
     1e6:	84 e3       	ldi	r24, 0x34	; 52
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	fc 01       	movw	r30, r24
     1ec:	20 81       	ld	r18, Z

000001ee <.Loc.31>:
     1ee:	84 e3       	ldi	r24, 0x34	; 52
     1f0:	90 e0       	ldi	r25, 0x00	; 0

000001f2 <.Loc.32>:
     1f2:	2b 7f       	andi	r18, 0xFB	; 251
     1f4:	fc 01       	movw	r30, r24
     1f6:	20 83       	st	Z, r18

000001f8 <.Loc.33>:
    DDRC &= ~(1 << 0) | ~(1 << 2) | ~(1 << 4) | ~(1 << 6);  // ingang sensor
     1f8:	27 e2       	ldi	r18, 0x27	; 39
     1fa:	30 e0       	ldi	r19, 0x00	; 0
     1fc:	87 e2       	ldi	r24, 0x27	; 39
     1fe:	90 e0       	ldi	r25, 0x00	; 0
     200:	f9 01       	movw	r30, r18
     202:	20 81       	ld	r18, Z

00000204 <.Loc.34>:
     204:	fc 01       	movw	r30, r24
     206:	20 83       	st	Z, r18

00000208 <.Loc.35>:
    DDRA &= ~(1 << 7) | ~(1 << 5) | ~(1 << 3) | ~(1 << 1);  // same
     208:	21 e2       	ldi	r18, 0x21	; 33
     20a:	30 e0       	ldi	r19, 0x00	; 0
     20c:	81 e2       	ldi	r24, 0x21	; 33
     20e:	90 e0       	ldi	r25, 0x00	; 0
     210:	f9 01       	movw	r30, r18
     212:	20 81       	ld	r18, Z

00000214 <.Loc.36>:
     214:	fc 01       	movw	r30, r24
     216:	20 83       	st	Z, r18

00000218 <.Loc.37>:

}
     218:	00 00       	nop
     21a:	df 91       	pop	r29
     21c:	cf 91       	pop	r28
     21e:	08 95       	ret

00000220 <setupUltraPins>:
void setupUltraPins(void)
{
     220:	cf 93       	push	r28
     222:	df 93       	push	r29
     224:	cd b7       	in	r28, 0x3d	; 61
     226:	de b7       	in	r29, 0x3e	; 62

00000228 <.Loc.39>:
    DDRB |= (1 << trig);                // trigger output
     228:	84 e2       	ldi	r24, 0x24	; 36
     22a:	90 e0       	ldi	r25, 0x00	; 0
     22c:	fc 01       	movw	r30, r24
     22e:	20 81       	ld	r18, Z
     230:	84 e2       	ldi	r24, 0x24	; 36
     232:	90 e0       	ldi	r25, 0x00	; 0

00000234 <.Loc.40>:
     234:	24 60       	ori	r18, 0x04	; 4
     236:	fc 01       	movw	r30, r24
     238:	20 83       	st	Z, r18

0000023a <.Loc.41>:
    DDRB &= ~(1 << echo);               // echo input
     23a:	84 e2       	ldi	r24, 0x24	; 36
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	fc 01       	movw	r30, r24
     240:	20 81       	ld	r18, Z

00000242 <.Loc.42>:
     242:	84 e2       	ldi	r24, 0x24	; 36
     244:	90 e0       	ldi	r25, 0x00	; 0

00000246 <.Loc.43>:
     246:	2e 7f       	andi	r18, 0xFE	; 254
     248:	fc 01       	movw	r30, r24
     24a:	20 83       	st	Z, r18

0000024c <.Loc.44>:
    DDRL |= (1 << 0);                   // pin voor 5V
     24c:	8a e0       	ldi	r24, 0x0A	; 10
     24e:	91 e0       	ldi	r25, 0x01	; 1
     250:	fc 01       	movw	r30, r24
     252:	20 81       	ld	r18, Z
     254:	8a e0       	ldi	r24, 0x0A	; 10
     256:	91 e0       	ldi	r25, 0x01	; 1

00000258 <.Loc.45>:
     258:	21 60       	ori	r18, 0x01	; 1
     25a:	fc 01       	movw	r30, r24
     25c:	20 83       	st	Z, r18

0000025e <.Loc.46>:
    PORTL |= (1 << 0);                  // 5v
     25e:	8b e0       	ldi	r24, 0x0B	; 11
     260:	91 e0       	ldi	r25, 0x01	; 1
     262:	fc 01       	movw	r30, r24
     264:	20 81       	ld	r18, Z
     266:	8b e0       	ldi	r24, 0x0B	; 11
     268:	91 e0       	ldi	r25, 0x01	; 1

0000026a <.Loc.47>:
     26a:	21 60       	ori	r18, 0x01	; 1
     26c:	fc 01       	movw	r30, r24
     26e:	20 83       	st	Z, r18

00000270 <.Loc.48>:
}
     270:	00 00       	nop
     272:	df 91       	pop	r29
     274:	cf 91       	pop	r28
     276:	08 95       	ret

00000278 <safety>:

int safety(void)
{
     278:	cf 93       	push	r28
     27a:	df 93       	push	r29
     27c:	cd b7       	in	r28, 0x3d	; 61
     27e:	de b7       	in	r29, 0x3e	; 62

00000280 <.L6>:
    while(stop == 0)
        {
            PORTE |= (1 << stop);
     280:	8e e2       	ldi	r24, 0x2E	; 46
     282:	90 e0       	ldi	r25, 0x00	; 0
     284:	fc 01       	movw	r30, r24
     286:	20 81       	ld	r18, Z
     288:	8e e2       	ldi	r24, 0x2E	; 46
     28a:	90 e0       	ldi	r25, 0x00	; 0

0000028c <.Loc.51>:
     28c:	21 60       	ori	r18, 0x01	; 1
     28e:	fc 01       	movw	r30, r24
     290:	20 83       	st	Z, r18
     292:	f6 cf       	rjmp	.-20     	; 0x280 <.L6>

00000294 <getPulse>:
        }
}

int getPulse(void)
{
     294:	0f 93       	push	r16
     296:	1f 93       	push	r17
     298:	cf 93       	push	r28
     29a:	df 93       	push	r29
     29c:	cd b7       	in	r28, 0x3d	; 61
     29e:	de b7       	in	r29, 0x3e	; 62
     2a0:	c4 59       	subi	r28, 0x94	; 148
     2a2:	d1 09       	sbc	r29, r1
     2a4:	0f b6       	in	r0, 0x3f	; 63
     2a6:	f8 94       	cli
     2a8:	de bf       	out	0x3e, r29	; 62
     2aa:	0f be       	out	0x3f, r0	; 63
     2ac:	cd bf       	out	0x3d, r28	; 61

000002ae <.Loc.53>:

    PORTB |= (1 << trig);
     2ae:	85 e2       	ldi	r24, 0x25	; 37
     2b0:	90 e0       	ldi	r25, 0x00	; 0
     2b2:	dc 01       	movw	r26, r24
     2b4:	2c 91       	ld	r18, X
     2b6:	85 e2       	ldi	r24, 0x25	; 37
     2b8:	90 e0       	ldi	r25, 0x00	; 0

000002ba <.Loc.54>:
     2ba:	24 60       	ori	r18, 0x04	; 4
     2bc:	fc 01       	movw	r30, r24
     2be:	20 83       	st	Z, r18
     2c0:	80 e0       	ldi	r24, 0x00	; 0
     2c2:	90 e0       	ldi	r25, 0x00	; 0
     2c4:	a0 e2       	ldi	r26, 0x20	; 32
     2c6:	b1 e4       	ldi	r27, 0x41	; 65
     2c8:	8d 83       	std	Y+5, r24	; 0x05
     2ca:	9e 83       	std	Y+6, r25	; 0x06
     2cc:	af 83       	std	Y+7, r26	; 0x07
     2ce:	b8 87       	std	Y+8, r27	; 0x08

000002d0 <.LBB44>:
	__builtin_avr_delay_cycles(__ticks_dc);

#else
	uint8_t __ticks;
	double __tmp2 ;
	__tmp = ((F_CPU) / 3e6) * __us;
     2d0:	2b ea       	ldi	r18, 0xAB	; 171
     2d2:	3a ea       	ldi	r19, 0xAA	; 170
     2d4:	4a ea       	ldi	r20, 0xAA	; 170
     2d6:	50 e4       	ldi	r21, 0x40	; 64
     2d8:	6d 81       	ldd	r22, Y+5	; 0x05
     2da:	7e 81       	ldd	r23, Y+6	; 0x06
     2dc:	8f 81       	ldd	r24, Y+7	; 0x07
     2de:	98 85       	ldd	r25, Y+8	; 0x08
     2e0:	0e 94 33 09 	call	0x1266	; 0x1266 <__mulsf3>
     2e4:	61 96       	adiw	r28, 0x11	; 17
     2e6:	6c af       	std	Y+60, r22	; 0x3c
     2e8:	7d af       	std	Y+61, r23	; 0x3d
     2ea:	8e af       	std	Y+62, r24	; 0x3e
     2ec:	9f af       	std	Y+63, r25	; 0x3f
     2ee:	61 97       	sbiw	r28, 0x11	; 17
     2f0:	61 96       	adiw	r28, 0x11	; 17
     2f2:	8c ad       	ldd	r24, Y+60	; 0x3c
     2f4:	9d ad       	ldd	r25, Y+61	; 0x3d
     2f6:	ae ad       	ldd	r26, Y+62	; 0x3e
     2f8:	bf ad       	ldd	r27, Y+63	; 0x3f
     2fa:	61 97       	sbiw	r28, 0x11	; 17
     2fc:	89 87       	std	Y+9, r24	; 0x09
     2fe:	9a 87       	std	Y+10, r25	; 0x0a
     300:	ab 87       	std	Y+11, r26	; 0x0b
     302:	bc 87       	std	Y+12, r27	; 0x0c

00000304 <.Loc.56>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     304:	20 e0       	ldi	r18, 0x00	; 0
     306:	30 e0       	ldi	r19, 0x00	; 0
     308:	40 e8       	ldi	r20, 0x80	; 128
     30a:	50 e4       	ldi	r21, 0x40	; 64
     30c:	6d 81       	ldd	r22, Y+5	; 0x05
     30e:	7e 81       	ldd	r23, Y+6	; 0x06
     310:	8f 81       	ldd	r24, Y+7	; 0x07
     312:	98 85       	ldd	r25, Y+8	; 0x08
     314:	0e 94 33 09 	call	0x1266	; 0x1266 <__mulsf3>
     318:	65 96       	adiw	r28, 0x15	; 21
     31a:	6c af       	std	Y+60, r22	; 0x3c
     31c:	7d af       	std	Y+61, r23	; 0x3d
     31e:	8e af       	std	Y+62, r24	; 0x3e
     320:	9f af       	std	Y+63, r25	; 0x3f
     322:	65 97       	sbiw	r28, 0x15	; 21
     324:	65 96       	adiw	r28, 0x15	; 21
     326:	8c ad       	ldd	r24, Y+60	; 0x3c
     328:	9d ad       	ldd	r25, Y+61	; 0x3d
     32a:	ae ad       	ldd	r26, Y+62	; 0x3e
     32c:	bf ad       	ldd	r27, Y+63	; 0x3f
     32e:	65 97       	sbiw	r28, 0x15	; 21
     330:	8d 87       	std	Y+13, r24	; 0x0d
     332:	9e 87       	std	Y+14, r25	; 0x0e
     334:	af 87       	std	Y+15, r26	; 0x0f
     336:	b8 8b       	std	Y+16, r27	; 0x10

00000338 <.Loc.57>:
	if (__tmp < 1.0)
     338:	20 e0       	ldi	r18, 0x00	; 0
     33a:	30 e0       	ldi	r19, 0x00	; 0
     33c:	40 e8       	ldi	r20, 0x80	; 128
     33e:	5f e3       	ldi	r21, 0x3F	; 63
     340:	69 85       	ldd	r22, Y+9	; 0x09
     342:	7a 85       	ldd	r23, Y+10	; 0x0a
     344:	8b 85       	ldd	r24, Y+11	; 0x0b
     346:	9c 85       	ldd	r25, Y+12	; 0x0c
     348:	0e 94 d6 07 	call	0xfac	; 0xfac <__cmpsf2>
     34c:	88 23       	and	r24, r24
     34e:	1c f4       	brge	.+6      	; 0x356 <.L56>

00000350 <.Loc.58>:
		__ticks = 1;
     350:	81 e0       	ldi	r24, 0x01	; 1
     352:	89 8b       	std	Y+17, r24	; 0x11
     354:	ff c0       	rjmp	.+510    	; 0x554 <.L10>

00000356 <.L56>:
	else if (__tmp2 > 65535)
     356:	20 e0       	ldi	r18, 0x00	; 0
     358:	3f ef       	ldi	r19, 0xFF	; 255
     35a:	4f e7       	ldi	r20, 0x7F	; 127
     35c:	57 e4       	ldi	r21, 0x47	; 71
     35e:	6d 85       	ldd	r22, Y+13	; 0x0d
     360:	7e 85       	ldd	r23, Y+14	; 0x0e
     362:	8f 85       	ldd	r24, Y+15	; 0x0f
     364:	98 89       	ldd	r25, Y+16	; 0x10
     366:	0e 94 2e 09 	call	0x125c	; 0x125c <__gesf2>
     36a:	88 23       	and	r24, r24
     36c:	09 f0       	breq	.+2      	; 0x370 <L0^A>

0000036e <L0^A>:
     36e:	0c f4       	brge	.+2      	; 0x372 <.Loc.60>

00000370 <L0^A>:
     370:	b6 c0       	rjmp	.+364    	; 0x4de <.L57>

00000372 <.Loc.60>:
	{
		_delay_ms(__us / 1000.0);
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	4a e7       	ldi	r20, 0x7A	; 122
     378:	54 e4       	ldi	r21, 0x44	; 68
     37a:	6d 81       	ldd	r22, Y+5	; 0x05
     37c:	7e 81       	ldd	r23, Y+6	; 0x06
     37e:	8f 81       	ldd	r24, Y+7	; 0x07
     380:	98 85       	ldd	r25, Y+8	; 0x08
     382:	0e 94 db 07 	call	0xfb6	; 0xfb6 <__divsf3>
     386:	69 96       	adiw	r28, 0x19	; 25
     388:	6c af       	std	Y+60, r22	; 0x3c
     38a:	7d af       	std	Y+61, r23	; 0x3d
     38c:	8e af       	std	Y+62, r24	; 0x3e
     38e:	9f af       	std	Y+63, r25	; 0x3f
     390:	69 97       	sbiw	r28, 0x19	; 25
     392:	69 96       	adiw	r28, 0x19	; 25
     394:	8c ad       	ldd	r24, Y+60	; 0x3c
     396:	9d ad       	ldd	r25, Y+61	; 0x3d
     398:	ae ad       	ldd	r26, Y+62	; 0x3e
     39a:	bf ad       	ldd	r27, Y+63	; 0x3f
     39c:	69 97       	sbiw	r28, 0x19	; 25
     39e:	8a 8b       	std	Y+18, r24	; 0x12
     3a0:	9b 8b       	std	Y+19, r25	; 0x13
     3a2:	ac 8b       	std	Y+20, r26	; 0x14
     3a4:	bd 8b       	std	Y+21, r27	; 0x15

000003a6 <.LBB46>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     3a6:	20 e0       	ldi	r18, 0x00	; 0
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	4a e7       	ldi	r20, 0x7A	; 122
     3ac:	55 e4       	ldi	r21, 0x45	; 69
     3ae:	6a 89       	ldd	r22, Y+18	; 0x12
     3b0:	7b 89       	ldd	r23, Y+19	; 0x13
     3b2:	8c 89       	ldd	r24, Y+20	; 0x14
     3b4:	9d 89       	ldd	r25, Y+21	; 0x15
     3b6:	0e 94 33 09 	call	0x1266	; 0x1266 <__mulsf3>
     3ba:	6d 96       	adiw	r28, 0x1d	; 29
     3bc:	6c af       	std	Y+60, r22	; 0x3c
     3be:	7d af       	std	Y+61, r23	; 0x3d
     3c0:	8e af       	std	Y+62, r24	; 0x3e
     3c2:	9f af       	std	Y+63, r25	; 0x3f
     3c4:	6d 97       	sbiw	r28, 0x1d	; 29
     3c6:	6d 96       	adiw	r28, 0x1d	; 29
     3c8:	8c ad       	ldd	r24, Y+60	; 0x3c
     3ca:	9d ad       	ldd	r25, Y+61	; 0x3d
     3cc:	ae ad       	ldd	r26, Y+62	; 0x3e
     3ce:	bf ad       	ldd	r27, Y+63	; 0x3f
     3d0:	6d 97       	sbiw	r28, 0x1d	; 29
     3d2:	8e 8b       	std	Y+22, r24	; 0x16
     3d4:	9f 8b       	std	Y+23, r25	; 0x17
     3d6:	a8 8f       	std	Y+24, r26	; 0x18
     3d8:	b9 8f       	std	Y+25, r27	; 0x19

000003da <.Loc.62>:
	if (__tmp < 1.0)
     3da:	20 e0       	ldi	r18, 0x00	; 0
     3dc:	30 e0       	ldi	r19, 0x00	; 0
     3de:	40 e8       	ldi	r20, 0x80	; 128
     3e0:	5f e3       	ldi	r21, 0x3F	; 63
     3e2:	6e 89       	ldd	r22, Y+22	; 0x16
     3e4:	7f 89       	ldd	r23, Y+23	; 0x17
     3e6:	88 8d       	ldd	r24, Y+24	; 0x18
     3e8:	99 8d       	ldd	r25, Y+25	; 0x19
     3ea:	0e 94 d6 07 	call	0xfac	; 0xfac <__cmpsf2>
     3ee:	88 23       	and	r24, r24
     3f0:	2c f4       	brge	.+10     	; 0x3fc <.L58>

000003f2 <.Loc.63>:
		__ticks = 1;
     3f2:	81 e0       	ldi	r24, 0x01	; 1
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	9b 8f       	std	Y+27, r25	; 0x1b
     3f8:	8a 8f       	std	Y+26, r24	; 0x1a
     3fa:	66 c0       	rjmp	.+204    	; 0x4c8 <.L15>

000003fc <.L58>:
	else if (__tmp > 65535)
     3fc:	20 e0       	ldi	r18, 0x00	; 0
     3fe:	3f ef       	ldi	r19, 0xFF	; 255
     400:	4f e7       	ldi	r20, 0x7F	; 127
     402:	57 e4       	ldi	r21, 0x47	; 71
     404:	6e 89       	ldd	r22, Y+22	; 0x16
     406:	7f 89       	ldd	r23, Y+23	; 0x17
     408:	88 8d       	ldd	r24, Y+24	; 0x18
     40a:	99 8d       	ldd	r25, Y+25	; 0x19
     40c:	0e 94 2e 09 	call	0x125c	; 0x125c <__gesf2>
     410:	88 23       	and	r24, r24
     412:	09 f0       	breq	.+2      	; 0x416 <L0^A>

00000414 <L0^A>:
     414:	0c f4       	brge	.+2      	; 0x418 <.Loc.65>

00000416 <L0^A>:
     416:	46 c0       	rjmp	.+140    	; 0x4a4 <.L59>

00000418 <.Loc.65>:
		__ticks = (uint16_t) (__ms * 10.0);
     418:	20 e0       	ldi	r18, 0x00	; 0
     41a:	30 e0       	ldi	r19, 0x00	; 0
     41c:	40 e2       	ldi	r20, 0x20	; 32
     41e:	51 e4       	ldi	r21, 0x41	; 65
     420:	6a 89       	ldd	r22, Y+18	; 0x12
     422:	7b 89       	ldd	r23, Y+19	; 0x13
     424:	8c 89       	ldd	r24, Y+20	; 0x14
     426:	9d 89       	ldd	r25, Y+21	; 0x15
     428:	0e 94 33 09 	call	0x1266	; 0x1266 <__mulsf3>
     42c:	a1 96       	adiw	r28, 0x21	; 33
     42e:	6c af       	std	Y+60, r22	; 0x3c
     430:	7d af       	std	Y+61, r23	; 0x3d
     432:	8e af       	std	Y+62, r24	; 0x3e
     434:	9f af       	std	Y+63, r25	; 0x3f
     436:	a1 97       	sbiw	r28, 0x21	; 33
     438:	a1 96       	adiw	r28, 0x21	; 33
     43a:	8c ad       	ldd	r24, Y+60	; 0x3c
     43c:	9d ad       	ldd	r25, Y+61	; 0x3d
     43e:	ae ad       	ldd	r26, Y+62	; 0x3e
     440:	bf ad       	ldd	r27, Y+63	; 0x3f
     442:	a1 97       	sbiw	r28, 0x21	; 33
     444:	29 96       	adiw	r28, 0x09	; 9
     446:	8c af       	std	Y+60, r24	; 0x3c
     448:	9d af       	std	Y+61, r25	; 0x3d
     44a:	ae af       	std	Y+62, r26	; 0x3e
     44c:	bf af       	std	Y+63, r27	; 0x3f
     44e:	29 97       	sbiw	r28, 0x09	; 9

00000450 <.Loc.66>:
     450:	29 96       	adiw	r28, 0x09	; 9
     452:	6c ad       	ldd	r22, Y+60	; 0x3c
     454:	7d ad       	ldd	r23, Y+61	; 0x3d
     456:	8e ad       	ldd	r24, Y+62	; 0x3e
     458:	9f ad       	ldd	r25, Y+63	; 0x3f
     45a:	29 97       	sbiw	r28, 0x09	; 9
     45c:	0e 94 4d 08 	call	0x109a	; 0x109a <__fixunssfsi>
     460:	a5 96       	adiw	r28, 0x25	; 37
     462:	6c af       	std	Y+60, r22	; 0x3c
     464:	7d af       	std	Y+61, r23	; 0x3d
     466:	8e af       	std	Y+62, r24	; 0x3e
     468:	9f af       	std	Y+63, r25	; 0x3f
     46a:	a5 97       	sbiw	r28, 0x25	; 37
     46c:	a3 96       	adiw	r28, 0x23	; 35
     46e:	ae ad       	ldd	r26, Y+62	; 0x3e
     470:	bf ad       	ldd	r27, Y+63	; 0x3f
     472:	a3 97       	sbiw	r28, 0x23	; 35
     474:	bb 8f       	std	Y+27, r27	; 0x1b
     476:	aa 8f       	std	Y+26, r26	; 0x1a

00000478 <.Loc.67>:
		while(__ticks)
     478:	10 c0       	rjmp	.+32     	; 0x49a <.L18>

0000047a <.L19>:
     47a:	80 e9       	ldi	r24, 0x90	; 144
     47c:	91 e0       	ldi	r25, 0x01	; 1
     47e:	9d 8f       	std	Y+29, r25	; 0x1d
     480:	8c 8f       	std	Y+28, r24	; 0x1c

00000482 <.LBB48>:
		"sbc %B0,__zero_reg__"    "\n\t"
		"brne 1b"
		: "+d" (__count)
	);
#else
	__asm__ volatile (
     482:	8c 8d       	ldd	r24, Y+28	; 0x1c
     484:	9d 8d       	ldd	r25, Y+29	; 0x1d

00000486 <.L1^B1>:
     486:	01 97       	sbiw	r24, 0x01	; 1
     488:	f1 f7       	brne	.-4      	; 0x486 <.L1^B1>
     48a:	9d 8f       	std	Y+29, r25	; 0x1d
     48c:	8c 8f       	std	Y+28, r24	; 0x1c

0000048e <.Loc.69>:
	...

00000490 <.LBE48>:
			__ticks --;
     490:	8a 8d       	ldd	r24, Y+26	; 0x1a
     492:	9b 8d       	ldd	r25, Y+27	; 0x1b
     494:	01 97       	sbiw	r24, 0x01	; 1
     496:	9b 8f       	std	Y+27, r25	; 0x1b
     498:	8a 8f       	std	Y+26, r24	; 0x1a

0000049a <.L18>:
		while(__ticks)
     49a:	8a 8d       	ldd	r24, Y+26	; 0x1a
     49c:	9b 8d       	ldd	r25, Y+27	; 0x1b
     49e:	00 97       	sbiw	r24, 0x00	; 0
     4a0:	61 f7       	brne	.-40     	; 0x47a <.L19>

000004a2 <.Loc.72>:
		return;
     4a2:	58 c0       	rjmp	.+176    	; 0x554 <.L10>

000004a4 <.L59>:
		__ticks = (uint16_t)__tmp;
     4a4:	6e 89       	ldd	r22, Y+22	; 0x16
     4a6:	7f 89       	ldd	r23, Y+23	; 0x17
     4a8:	88 8d       	ldd	r24, Y+24	; 0x18
     4aa:	99 8d       	ldd	r25, Y+25	; 0x19
     4ac:	0e 94 4d 08 	call	0x109a	; 0x109a <__fixunssfsi>
     4b0:	a9 96       	adiw	r28, 0x29	; 41
     4b2:	6c af       	std	Y+60, r22	; 0x3c
     4b4:	7d af       	std	Y+61, r23	; 0x3d
     4b6:	8e af       	std	Y+62, r24	; 0x3e
     4b8:	9f af       	std	Y+63, r25	; 0x3f
     4ba:	a9 97       	sbiw	r28, 0x29	; 41
     4bc:	a7 96       	adiw	r28, 0x27	; 39
     4be:	ee ad       	ldd	r30, Y+62	; 0x3e
     4c0:	ff ad       	ldd	r31, Y+63	; 0x3f
     4c2:	a7 97       	sbiw	r28, 0x27	; 39
     4c4:	fb 8f       	std	Y+27, r31	; 0x1b
     4c6:	ea 8f       	std	Y+26, r30	; 0x1a

000004c8 <.L15>:
     4c8:	8a 8d       	ldd	r24, Y+26	; 0x1a
     4ca:	9b 8d       	ldd	r25, Y+27	; 0x1b
     4cc:	9f 8f       	std	Y+31, r25	; 0x1f
     4ce:	8e 8f       	std	Y+30, r24	; 0x1e

000004d0 <.LBB50>:
     4d0:	8e 8d       	ldd	r24, Y+30	; 0x1e
     4d2:	9f 8d       	ldd	r25, Y+31	; 0x1f

000004d4 <.L1^B2>:
     4d4:	01 97       	sbiw	r24, 0x01	; 1
     4d6:	f1 f7       	brne	.-4      	; 0x4d4 <.L1^B2>
     4d8:	9f 8f       	std	Y+31, r25	; 0x1f
     4da:	8e 8f       	std	Y+30, r24	; 0x1e

000004dc <.Loc.75>:
		"brne 1b"
		: "=w" (__count)
		: "0" (__count)
	);
#endif /* __AVR_TINY__ */
}
     4dc:	3b c0       	rjmp	.+118    	; 0x554 <.L10>

000004de <.L57>:
	}
	else if (__tmp > 255)
     4de:	20 e0       	ldi	r18, 0x00	; 0
     4e0:	30 e0       	ldi	r19, 0x00	; 0
     4e2:	4f e7       	ldi	r20, 0x7F	; 127
     4e4:	53 e4       	ldi	r21, 0x43	; 67
     4e6:	69 85       	ldd	r22, Y+9	; 0x09
     4e8:	7a 85       	ldd	r23, Y+10	; 0x0a
     4ea:	8b 85       	ldd	r24, Y+11	; 0x0b
     4ec:	9c 85       	ldd	r25, Y+12	; 0x0c
     4ee:	0e 94 2e 09 	call	0x125c	; 0x125c <__gesf2>
     4f2:	88 23       	and	r24, r24
     4f4:	f9 f0       	breq	.+62     	; 0x534 <.L60>
     4f6:	f4 f0       	brlt	.+60     	; 0x534 <.L60>

000004f8 <.LBB52>:
	{
		uint16_t __ticks=(uint16_t)__tmp2;
     4f8:	6d 85       	ldd	r22, Y+13	; 0x0d
     4fa:	7e 85       	ldd	r23, Y+14	; 0x0e
     4fc:	8f 85       	ldd	r24, Y+15	; 0x0f
     4fe:	98 89       	ldd	r25, Y+16	; 0x10
     500:	0e 94 4d 08 	call	0x109a	; 0x109a <__fixunssfsi>
     504:	ad 96       	adiw	r28, 0x2d	; 45
     506:	6c af       	std	Y+60, r22	; 0x3c
     508:	7d af       	std	Y+61, r23	; 0x3d
     50a:	8e af       	std	Y+62, r24	; 0x3e
     50c:	9f af       	std	Y+63, r25	; 0x3f
     50e:	ad 97       	sbiw	r28, 0x2d	; 45
     510:	ab 96       	adiw	r28, 0x2b	; 43
     512:	8e ad       	ldd	r24, Y+62	; 0x3e
     514:	9f ad       	ldd	r25, Y+63	; 0x3f
     516:	ab 97       	sbiw	r28, 0x2b	; 43
     518:	99 a3       	std	Y+33, r25	; 0x21
     51a:	88 a3       	std	Y+32, r24	; 0x20
     51c:	88 a1       	ldd	r24, Y+32	; 0x20
     51e:	99 a1       	ldd	r25, Y+33	; 0x21
     520:	9b a3       	std	Y+35, r25	; 0x23
     522:	8a a3       	std	Y+34, r24	; 0x22

00000524 <.LBB53>:
	__asm__ volatile (
     524:	8a a1       	ldd	r24, Y+34	; 0x22
     526:	9b a1       	ldd	r25, Y+35	; 0x23

00000528 <.L1^B3>:
     528:	01 97       	sbiw	r24, 0x01	; 1
     52a:	f1 f7       	brne	.-4      	; 0x528 <.L1^B3>
     52c:	9b a3       	std	Y+35, r25	; 0x23
     52e:	8a a3       	std	Y+34, r24	; 0x22

00000530 <.Loc.79>:
	...

00000532 <.LBE53>:
		_delay_loop_2(__ticks);
		return;
     532:	17 c0       	rjmp	.+46     	; 0x562 <.L23>

00000534 <.L60>:
	}
	else
		__ticks = (uint8_t)__tmp;
     534:	69 85       	ldd	r22, Y+9	; 0x09
     536:	7a 85       	ldd	r23, Y+10	; 0x0a
     538:	8b 85       	ldd	r24, Y+11	; 0x0b
     53a:	9c 85       	ldd	r25, Y+12	; 0x0c
     53c:	0e 94 4d 08 	call	0x109a	; 0x109a <__fixunssfsi>
     540:	e1 96       	adiw	r28, 0x31	; 49
     542:	6c af       	std	Y+60, r22	; 0x3c
     544:	7d af       	std	Y+61, r23	; 0x3d
     546:	8e af       	std	Y+62, r24	; 0x3e
     548:	9f af       	std	Y+63, r25	; 0x3f
     54a:	e1 97       	sbiw	r28, 0x31	; 49
     54c:	ae 96       	adiw	r28, 0x2e	; 46
     54e:	9f ad       	ldd	r25, Y+63	; 0x3f
     550:	ae 97       	sbiw	r28, 0x2e	; 46
     552:	99 8b       	std	Y+17, r25	; 0x11

00000554 <.L10>:
     554:	89 89       	ldd	r24, Y+17	; 0x11
     556:	8c a3       	std	Y+36, r24	; 0x24

00000558 <.LBB55>:
	__asm__ volatile (
     558:	8c a1       	ldd	r24, Y+36	; 0x24

0000055a <.L1^B4>:
     55a:	8a 95       	dec	r24
     55c:	f1 f7       	brne	.-4      	; 0x55a <.L1^B4>
     55e:	8c a3       	std	Y+36, r24	; 0x24

00000560 <.Loc.83>:
	...

00000562 <.L23>:
    _delay_us(10);
    PORTB &= ~(1 << trig);
     562:	85 e2       	ldi	r24, 0x25	; 37
     564:	90 e0       	ldi	r25, 0x00	; 0
     566:	dc 01       	movw	r26, r24
     568:	2c 91       	ld	r18, X

0000056a <.Loc.85>:
     56a:	85 e2       	ldi	r24, 0x25	; 37
     56c:	90 e0       	ldi	r25, 0x00	; 0

0000056e <.Loc.86>:
     56e:	2b 7f       	andi	r18, 0xFB	; 251
     570:	fc 01       	movw	r30, r24
     572:	20 83       	st	Z, r18

00000574 <.Loc.87>:

    int tijdecho = 0;
     574:	1a 82       	std	Y+2, r1	; 0x02
     576:	19 82       	std	Y+1, r1	; 0x01

00000578 <.Loc.88>:
    int knop_ingedrukt = 0;
     578:	1c 82       	std	Y+4, r1	; 0x04
     57a:	1b 82       	std	Y+3, r1	; 0x03

0000057c <.Loc.89>:


    for(tijdecho = 0; tijdecho < timeout;)
     57c:	1a 82       	std	Y+2, r1	; 0x02
     57e:	19 82       	std	Y+1, r1	; 0x01

00000580 <.Loc.90>:
     580:	b9 c1       	rjmp	.+882    	; 0x8f4 <.L24>

00000582 <.L45>:
     582:	80 e0       	ldi	r24, 0x00	; 0
     584:	90 e0       	ldi	r25, 0x00	; 0
     586:	a0 e8       	ldi	r26, 0x80	; 128
     588:	bf e3       	ldi	r27, 0x3F	; 63
     58a:	8d a3       	std	Y+37, r24	; 0x25
     58c:	9e a3       	std	Y+38, r25	; 0x26
     58e:	af a3       	std	Y+39, r26	; 0x27
     590:	b8 a7       	std	Y+40, r27	; 0x28

00000592 <.LBB57>:
	__tmp = ((F_CPU) / 3e6) * __us;
     592:	2b ea       	ldi	r18, 0xAB	; 171
     594:	3a ea       	ldi	r19, 0xAA	; 170
     596:	4a ea       	ldi	r20, 0xAA	; 170
     598:	50 e4       	ldi	r21, 0x40	; 64
     59a:	6d a1       	ldd	r22, Y+37	; 0x25
     59c:	7e a1       	ldd	r23, Y+38	; 0x26
     59e:	8f a1       	ldd	r24, Y+39	; 0x27
     5a0:	98 a5       	ldd	r25, Y+40	; 0x28
     5a2:	0e 94 33 09 	call	0x1266	; 0x1266 <__mulsf3>
     5a6:	e5 96       	adiw	r28, 0x35	; 53
     5a8:	6c af       	std	Y+60, r22	; 0x3c
     5aa:	7d af       	std	Y+61, r23	; 0x3d
     5ac:	8e af       	std	Y+62, r24	; 0x3e
     5ae:	9f af       	std	Y+63, r25	; 0x3f
     5b0:	e5 97       	sbiw	r28, 0x35	; 53
     5b2:	e5 96       	adiw	r28, 0x35	; 53
     5b4:	8c ad       	ldd	r24, Y+60	; 0x3c
     5b6:	9d ad       	ldd	r25, Y+61	; 0x3d
     5b8:	ae ad       	ldd	r26, Y+62	; 0x3e
     5ba:	bf ad       	ldd	r27, Y+63	; 0x3f
     5bc:	e5 97       	sbiw	r28, 0x35	; 53
     5be:	89 a7       	std	Y+41, r24	; 0x29
     5c0:	9a a7       	std	Y+42, r25	; 0x2a
     5c2:	ab a7       	std	Y+43, r26	; 0x2b
     5c4:	bc a7       	std	Y+44, r27	; 0x2c

000005c6 <.Loc.92>:
	__tmp2 = ((F_CPU) / 4e6) * __us;
     5c6:	20 e0       	ldi	r18, 0x00	; 0
     5c8:	30 e0       	ldi	r19, 0x00	; 0
     5ca:	40 e8       	ldi	r20, 0x80	; 128
     5cc:	50 e4       	ldi	r21, 0x40	; 64
     5ce:	6d a1       	ldd	r22, Y+37	; 0x25
     5d0:	7e a1       	ldd	r23, Y+38	; 0x26
     5d2:	8f a1       	ldd	r24, Y+39	; 0x27
     5d4:	98 a5       	ldd	r25, Y+40	; 0x28
     5d6:	0e 94 33 09 	call	0x1266	; 0x1266 <__mulsf3>
     5da:	e9 96       	adiw	r28, 0x39	; 57
     5dc:	6c af       	std	Y+60, r22	; 0x3c
     5de:	7d af       	std	Y+61, r23	; 0x3d
     5e0:	8e af       	std	Y+62, r24	; 0x3e
     5e2:	9f af       	std	Y+63, r25	; 0x3f
     5e4:	e9 97       	sbiw	r28, 0x39	; 57
     5e6:	e9 96       	adiw	r28, 0x39	; 57
     5e8:	8c ad       	ldd	r24, Y+60	; 0x3c
     5ea:	9d ad       	ldd	r25, Y+61	; 0x3d
     5ec:	ae ad       	ldd	r26, Y+62	; 0x3e
     5ee:	bf ad       	ldd	r27, Y+63	; 0x3f
     5f0:	e9 97       	sbiw	r28, 0x39	; 57
     5f2:	8d a7       	std	Y+45, r24	; 0x2d
     5f4:	9e a7       	std	Y+46, r25	; 0x2e
     5f6:	af a7       	std	Y+47, r26	; 0x2f
     5f8:	b8 ab       	std	Y+48, r27	; 0x30

000005fa <.Loc.93>:
	if (__tmp < 1.0)
     5fa:	20 e0       	ldi	r18, 0x00	; 0
     5fc:	30 e0       	ldi	r19, 0x00	; 0
     5fe:	40 e8       	ldi	r20, 0x80	; 128
     600:	5f e3       	ldi	r21, 0x3F	; 63
     602:	69 a5       	ldd	r22, Y+41	; 0x29
     604:	7a a5       	ldd	r23, Y+42	; 0x2a
     606:	8b a5       	ldd	r24, Y+43	; 0x2b
     608:	9c a5       	ldd	r25, Y+44	; 0x2c
     60a:	0e 94 d6 07 	call	0xfac	; 0xfac <__cmpsf2>
     60e:	88 23       	and	r24, r24
     610:	1c f4       	brge	.+6      	; 0x618 <.L61>

00000612 <.Loc.94>:
		__ticks = 1;
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	89 ab       	std	Y+49, r24	; 0x31
     616:	2c c1       	rjmp	.+600    	; 0x870 <.L27>

00000618 <.L61>:
	else if (__tmp2 > 65535)
     618:	20 e0       	ldi	r18, 0x00	; 0
     61a:	3f ef       	ldi	r19, 0xFF	; 255
     61c:	4f e7       	ldi	r20, 0x7F	; 127
     61e:	57 e4       	ldi	r21, 0x47	; 71
     620:	6d a5       	ldd	r22, Y+45	; 0x2d
     622:	7e a5       	ldd	r23, Y+46	; 0x2e
     624:	8f a5       	ldd	r24, Y+47	; 0x2f
     626:	98 a9       	ldd	r25, Y+48	; 0x30
     628:	0e 94 2e 09 	call	0x125c	; 0x125c <__gesf2>
     62c:	88 23       	and	r24, r24
     62e:	09 f0       	breq	.+2      	; 0x632 <L0^A>

00000630 <L0^A>:
     630:	0c f4       	brge	.+2      	; 0x634 <.Loc.96>

00000632 <L0^A>:
     632:	c6 c0       	rjmp	.+396    	; 0x7c0 <.L62>

00000634 <.Loc.96>:
		_delay_ms(__us / 1000.0);
     634:	20 e0       	ldi	r18, 0x00	; 0
     636:	30 e0       	ldi	r19, 0x00	; 0
     638:	4a e7       	ldi	r20, 0x7A	; 122
     63a:	54 e4       	ldi	r21, 0x44	; 68
     63c:	6d a1       	ldd	r22, Y+37	; 0x25
     63e:	7e a1       	ldd	r23, Y+38	; 0x26
     640:	8f a1       	ldd	r24, Y+39	; 0x27
     642:	98 a5       	ldd	r25, Y+40	; 0x28
     644:	0e 94 db 07 	call	0xfb6	; 0xfb6 <__divsf3>
     648:	ed 96       	adiw	r28, 0x3d	; 61
     64a:	6c af       	std	Y+60, r22	; 0x3c
     64c:	7d af       	std	Y+61, r23	; 0x3d
     64e:	8e af       	std	Y+62, r24	; 0x3e
     650:	9f af       	std	Y+63, r25	; 0x3f
     652:	ed 97       	sbiw	r28, 0x3d	; 61
     654:	ed 96       	adiw	r28, 0x3d	; 61
     656:	8c ad       	ldd	r24, Y+60	; 0x3c
     658:	9d ad       	ldd	r25, Y+61	; 0x3d
     65a:	ae ad       	ldd	r26, Y+62	; 0x3e
     65c:	bf ad       	ldd	r27, Y+63	; 0x3f
     65e:	ed 97       	sbiw	r28, 0x3d	; 61
     660:	8a ab       	std	Y+50, r24	; 0x32
     662:	9b ab       	std	Y+51, r25	; 0x33
     664:	ac ab       	std	Y+52, r26	; 0x34
     666:	bd ab       	std	Y+53, r27	; 0x35

00000668 <.LBB59>:
	__tmp = ((F_CPU) / 4e3) * __ms;
     668:	20 e0       	ldi	r18, 0x00	; 0
     66a:	30 e0       	ldi	r19, 0x00	; 0
     66c:	4a e7       	ldi	r20, 0x7A	; 122
     66e:	55 e4       	ldi	r21, 0x45	; 69
     670:	6a a9       	ldd	r22, Y+50	; 0x32
     672:	7b a9       	ldd	r23, Y+51	; 0x33
     674:	8c a9       	ldd	r24, Y+52	; 0x34
     676:	9d a9       	ldd	r25, Y+53	; 0x35
     678:	0e 94 33 09 	call	0x1266	; 0x1266 <__mulsf3>
     67c:	c3 58       	subi	r28, 0x83	; 131
     67e:	df 4f       	sbci	r29, 0xFF	; 255
     680:	68 83       	st	Y, r22
     682:	79 83       	std	Y+1, r23	; 0x01
     684:	8a 83       	std	Y+2, r24	; 0x02
     686:	9b 83       	std	Y+3, r25	; 0x03
     688:	cd 57       	subi	r28, 0x7D	; 125
     68a:	d0 40       	sbci	r29, 0x00	; 0
     68c:	c3 58       	subi	r28, 0x83	; 131
     68e:	df 4f       	sbci	r29, 0xFF	; 255
     690:	88 81       	ld	r24, Y
     692:	99 81       	ldd	r25, Y+1	; 0x01
     694:	aa 81       	ldd	r26, Y+2	; 0x02
     696:	bb 81       	ldd	r27, Y+3	; 0x03
     698:	cd 57       	subi	r28, 0x7D	; 125
     69a:	d0 40       	sbci	r29, 0x00	; 0
     69c:	8e ab       	std	Y+54, r24	; 0x36
     69e:	9f ab       	std	Y+55, r25	; 0x37
     6a0:	a8 af       	std	Y+56, r26	; 0x38
     6a2:	b9 af       	std	Y+57, r27	; 0x39

000006a4 <.Loc.98>:
	if (__tmp < 1.0)
     6a4:	20 e0       	ldi	r18, 0x00	; 0
     6a6:	30 e0       	ldi	r19, 0x00	; 0
     6a8:	40 e8       	ldi	r20, 0x80	; 128
     6aa:	5f e3       	ldi	r21, 0x3F	; 63
     6ac:	6e a9       	ldd	r22, Y+54	; 0x36
     6ae:	7f a9       	ldd	r23, Y+55	; 0x37
     6b0:	88 ad       	ldd	r24, Y+56	; 0x38
     6b2:	99 ad       	ldd	r25, Y+57	; 0x39
     6b4:	0e 94 d6 07 	call	0xfac	; 0xfac <__cmpsf2>
     6b8:	88 23       	and	r24, r24
     6ba:	2c f4       	brge	.+10     	; 0x6c6 <.L63>

000006bc <.Loc.99>:
		__ticks = 1;
     6bc:	81 e0       	ldi	r24, 0x01	; 1
     6be:	90 e0       	ldi	r25, 0x00	; 0
     6c0:	9b af       	std	Y+59, r25	; 0x3b
     6c2:	8a af       	std	Y+58, r24	; 0x3a
     6c4:	72 c0       	rjmp	.+228    	; 0x7aa <.L32>

000006c6 <.L63>:
	else if (__tmp > 65535)
     6c6:	20 e0       	ldi	r18, 0x00	; 0
     6c8:	3f ef       	ldi	r19, 0xFF	; 255
     6ca:	4f e7       	ldi	r20, 0x7F	; 127
     6cc:	57 e4       	ldi	r21, 0x47	; 71
     6ce:	6e a9       	ldd	r22, Y+54	; 0x36
     6d0:	7f a9       	ldd	r23, Y+55	; 0x37
     6d2:	88 ad       	ldd	r24, Y+56	; 0x38
     6d4:	99 ad       	ldd	r25, Y+57	; 0x39
     6d6:	0e 94 2e 09 	call	0x125c	; 0x125c <__gesf2>
     6da:	88 23       	and	r24, r24
     6dc:	09 f0       	breq	.+2      	; 0x6e0 <L0^A>

000006de <L0^A>:
     6de:	0c f4       	brge	.+2      	; 0x6e2 <.Loc.101>

000006e0 <L0^A>:
     6e0:	4e c0       	rjmp	.+156    	; 0x77e <.L64>

000006e2 <.Loc.101>:
		__ticks = (uint16_t) (__ms * 10.0);
     6e2:	20 e0       	ldi	r18, 0x00	; 0
     6e4:	30 e0       	ldi	r19, 0x00	; 0
     6e6:	40 e2       	ldi	r20, 0x20	; 32
     6e8:	51 e4       	ldi	r21, 0x41	; 65
     6ea:	6a a9       	ldd	r22, Y+50	; 0x32
     6ec:	7b a9       	ldd	r23, Y+51	; 0x33
     6ee:	8c a9       	ldd	r24, Y+52	; 0x34
     6f0:	9d a9       	ldd	r25, Y+53	; 0x35
     6f2:	0e 94 33 09 	call	0x1266	; 0x1266 <__mulsf3>
     6f6:	cf 57       	subi	r28, 0x7F	; 127
     6f8:	df 4f       	sbci	r29, 0xFF	; 255
     6fa:	68 83       	st	Y, r22
     6fc:	79 83       	std	Y+1, r23	; 0x01
     6fe:	8a 83       	std	Y+2, r24	; 0x02
     700:	9b 83       	std	Y+3, r25	; 0x03
     702:	c1 58       	subi	r28, 0x81	; 129
     704:	d0 40       	sbci	r29, 0x00	; 0
     706:	cf 57       	subi	r28, 0x7F	; 127
     708:	df 4f       	sbci	r29, 0xFF	; 255
     70a:	88 81       	ld	r24, Y
     70c:	99 81       	ldd	r25, Y+1	; 0x01
     70e:	aa 81       	ldd	r26, Y+2	; 0x02
     710:	bb 81       	ldd	r27, Y+3	; 0x03
     712:	c1 58       	subi	r28, 0x81	; 129
     714:	d0 40       	sbci	r29, 0x00	; 0
     716:	2d 96       	adiw	r28, 0x0d	; 13
     718:	8c af       	std	Y+60, r24	; 0x3c
     71a:	9d af       	std	Y+61, r25	; 0x3d
     71c:	ae af       	std	Y+62, r26	; 0x3e
     71e:	bf af       	std	Y+63, r27	; 0x3f
     720:	2d 97       	sbiw	r28, 0x0d	; 13

00000722 <.Loc.102>:
     722:	2d 96       	adiw	r28, 0x0d	; 13
     724:	6c ad       	ldd	r22, Y+60	; 0x3c
     726:	7d ad       	ldd	r23, Y+61	; 0x3d
     728:	8e ad       	ldd	r24, Y+62	; 0x3e
     72a:	9f ad       	ldd	r25, Y+63	; 0x3f
     72c:	2d 97       	sbiw	r28, 0x0d	; 13
     72e:	0e 94 4d 08 	call	0x109a	; 0x109a <__fixunssfsi>
     732:	cb 57       	subi	r28, 0x7B	; 123
     734:	df 4f       	sbci	r29, 0xFF	; 255
     736:	68 83       	st	Y, r22
     738:	79 83       	std	Y+1, r23	; 0x01
     73a:	8a 83       	std	Y+2, r24	; 0x02
     73c:	9b 83       	std	Y+3, r25	; 0x03
     73e:	c5 58       	subi	r28, 0x85	; 133
     740:	d0 40       	sbci	r29, 0x00	; 0
     742:	cb 57       	subi	r28, 0x7B	; 123
     744:	df 4f       	sbci	r29, 0xFF	; 255
     746:	a8 81       	ld	r26, Y
     748:	b9 81       	ldd	r27, Y+1	; 0x01
     74a:	c5 58       	subi	r28, 0x85	; 133
     74c:	d0 40       	sbci	r29, 0x00	; 0
     74e:	bb af       	std	Y+59, r27	; 0x3b
     750:	aa af       	std	Y+58, r26	; 0x3a

00000752 <.Loc.103>:
		while(__ticks)
     752:	10 c0       	rjmp	.+32     	; 0x774 <.L35>

00000754 <.L36>:
     754:	80 e9       	ldi	r24, 0x90	; 144
     756:	91 e0       	ldi	r25, 0x01	; 1
     758:	9d af       	std	Y+61, r25	; 0x3d
     75a:	8c af       	std	Y+60, r24	; 0x3c

0000075c <.LBB61>:
	__asm__ volatile (
     75c:	8c ad       	ldd	r24, Y+60	; 0x3c
     75e:	9d ad       	ldd	r25, Y+61	; 0x3d

00000760 <.L1^B5>:
     760:	01 97       	sbiw	r24, 0x01	; 1
     762:	f1 f7       	brne	.-4      	; 0x760 <.L1^B5>
     764:	9d af       	std	Y+61, r25	; 0x3d
     766:	8c af       	std	Y+60, r24	; 0x3c

00000768 <.Loc.105>:
	...

0000076a <.LBE61>:
			__ticks --;
     76a:	8a ad       	ldd	r24, Y+58	; 0x3a
     76c:	9b ad       	ldd	r25, Y+59	; 0x3b
     76e:	01 97       	sbiw	r24, 0x01	; 1
     770:	9b af       	std	Y+59, r25	; 0x3b
     772:	8a af       	std	Y+58, r24	; 0x3a

00000774 <.L35>:
		while(__ticks)
     774:	8a ad       	ldd	r24, Y+58	; 0x3a
     776:	9b ad       	ldd	r25, Y+59	; 0x3b
     778:	00 97       	sbiw	r24, 0x00	; 0
     77a:	61 f7       	brne	.-40     	; 0x754 <.L36>

0000077c <.Loc.108>:
		return;
     77c:	79 c0       	rjmp	.+242    	; 0x870 <.L27>

0000077e <.L64>:
		__ticks = (uint16_t)__tmp;
     77e:	6e a9       	ldd	r22, Y+54	; 0x36
     780:	7f a9       	ldd	r23, Y+55	; 0x37
     782:	88 ad       	ldd	r24, Y+56	; 0x38
     784:	99 ad       	ldd	r25, Y+57	; 0x39
     786:	0e 94 4d 08 	call	0x109a	; 0x109a <__fixunssfsi>
     78a:	c7 57       	subi	r28, 0x77	; 119
     78c:	df 4f       	sbci	r29, 0xFF	; 255
     78e:	68 83       	st	Y, r22
     790:	79 83       	std	Y+1, r23	; 0x01
     792:	8a 83       	std	Y+2, r24	; 0x02
     794:	9b 83       	std	Y+3, r25	; 0x03
     796:	c9 58       	subi	r28, 0x89	; 137
     798:	d0 40       	sbci	r29, 0x00	; 0
     79a:	c7 57       	subi	r28, 0x77	; 119
     79c:	df 4f       	sbci	r29, 0xFF	; 255
     79e:	e8 81       	ld	r30, Y
     7a0:	f9 81       	ldd	r31, Y+1	; 0x01
     7a2:	c9 58       	subi	r28, 0x89	; 137
     7a4:	d0 40       	sbci	r29, 0x00	; 0
     7a6:	fb af       	std	Y+59, r31	; 0x3b
     7a8:	ea af       	std	Y+58, r30	; 0x3a

000007aa <.L32>:
     7aa:	8a ad       	ldd	r24, Y+58	; 0x3a
     7ac:	9b ad       	ldd	r25, Y+59	; 0x3b
     7ae:	9f af       	std	Y+63, r25	; 0x3f
     7b0:	8e af       	std	Y+62, r24	; 0x3e

000007b2 <.LBB63>:
     7b2:	8e ad       	ldd	r24, Y+62	; 0x3e
     7b4:	9f ad       	ldd	r25, Y+63	; 0x3f

000007b6 <.L1^B6>:
     7b6:	01 97       	sbiw	r24, 0x01	; 1
     7b8:	f1 f7       	brne	.-4      	; 0x7b6 <.L1^B6>
     7ba:	9f af       	std	Y+63, r25	; 0x3f
     7bc:	8e af       	std	Y+62, r24	; 0x3e

000007be <.Loc.111>:
}
     7be:	58 c0       	rjmp	.+176    	; 0x870 <.L27>

000007c0 <.L62>:
	else if (__tmp > 255)
     7c0:	20 e0       	ldi	r18, 0x00	; 0
     7c2:	30 e0       	ldi	r19, 0x00	; 0
     7c4:	4f e7       	ldi	r20, 0x7F	; 127
     7c6:	53 e4       	ldi	r21, 0x43	; 67
     7c8:	69 a5       	ldd	r22, Y+41	; 0x29
     7ca:	7a a5       	ldd	r23, Y+42	; 0x2a
     7cc:	8b a5       	ldd	r24, Y+43	; 0x2b
     7ce:	9c a5       	ldd	r25, Y+44	; 0x2c
     7d0:	0e 94 2e 09 	call	0x125c	; 0x125c <__gesf2>
     7d4:	88 23       	and	r24, r24
     7d6:	c1 f1       	breq	.+112    	; 0x848 <.L65>
     7d8:	bc f1       	brlt	.+110    	; 0x848 <.L65>

000007da <.LBB65>:
		uint16_t __ticks=(uint16_t)__tmp2;
     7da:	8e 01       	movw	r16, r28
     7dc:	00 5c       	subi	r16, 0xC0	; 192
     7de:	1f 4f       	sbci	r17, 0xFF	; 255
     7e0:	6d a5       	ldd	r22, Y+45	; 0x2d
     7e2:	7e a5       	ldd	r23, Y+46	; 0x2e
     7e4:	8f a5       	ldd	r24, Y+47	; 0x2f
     7e6:	98 a9       	ldd	r25, Y+48	; 0x30
     7e8:	0e 94 4d 08 	call	0x109a	; 0x109a <__fixunssfsi>
     7ec:	c3 57       	subi	r28, 0x73	; 115
     7ee:	df 4f       	sbci	r29, 0xFF	; 255
     7f0:	68 83       	st	Y, r22
     7f2:	79 83       	std	Y+1, r23	; 0x01
     7f4:	8a 83       	std	Y+2, r24	; 0x02
     7f6:	9b 83       	std	Y+3, r25	; 0x03
     7f8:	cd 58       	subi	r28, 0x8D	; 141
     7fa:	d0 40       	sbci	r29, 0x00	; 0
     7fc:	c3 57       	subi	r28, 0x73	; 115
     7fe:	df 4f       	sbci	r29, 0xFF	; 255
     800:	e8 81       	ld	r30, Y
     802:	f9 81       	ldd	r31, Y+1	; 0x01
     804:	cd 58       	subi	r28, 0x8D	; 141
     806:	d0 40       	sbci	r29, 0x00	; 0
     808:	d8 01       	movw	r26, r16
     80a:	ed 93       	st	X+, r30
     80c:	fc 93       	st	X, r31
     80e:	ce 01       	movw	r24, r28
     810:	8e 5b       	subi	r24, 0xBE	; 190
     812:	9f 4f       	sbci	r25, 0xFF	; 255
     814:	9e 01       	movw	r18, r28
     816:	20 5c       	subi	r18, 0xC0	; 192
     818:	3f 4f       	sbci	r19, 0xFF	; 255
     81a:	d9 01       	movw	r26, r18
     81c:	2d 91       	ld	r18, X+
     81e:	3c 91       	ld	r19, X
     820:	fc 01       	movw	r30, r24
     822:	31 83       	std	Z+1, r19	; 0x01
     824:	20 83       	st	Z, r18

00000826 <.LBB66>:
	__asm__ volatile (
     826:	ce 01       	movw	r24, r28
     828:	8e 5b       	subi	r24, 0xBE	; 190
     82a:	9f 4f       	sbci	r25, 0xFF	; 255
     82c:	dc 01       	movw	r26, r24
     82e:	8d 91       	ld	r24, X+
     830:	9c 91       	ld	r25, X
     832:	11 97       	sbiw	r26, 0x01	; 1

00000834 <.L1^B7>:
     834:	01 97       	sbiw	r24, 0x01	; 1
     836:	f1 f7       	brne	.-4      	; 0x834 <.L1^B7>
     838:	9e 01       	movw	r18, r28
     83a:	2e 5b       	subi	r18, 0xBE	; 190
     83c:	3f 4f       	sbci	r19, 0xFF	; 255
     83e:	f9 01       	movw	r30, r18
     840:	91 83       	std	Z+1, r25	; 0x01
     842:	80 83       	st	Z, r24

00000844 <.Loc.115>:
	...

00000846 <.LBE66>:
		return;
     846:	28 c0       	rjmp	.+80     	; 0x898 <.L40>

00000848 <.L65>:
		__ticks = (uint8_t)__tmp;
     848:	69 a5       	ldd	r22, Y+41	; 0x29
     84a:	7a a5       	ldd	r23, Y+42	; 0x2a
     84c:	8b a5       	ldd	r24, Y+43	; 0x2b
     84e:	9c a5       	ldd	r25, Y+44	; 0x2c
     850:	0e 94 4d 08 	call	0x109a	; 0x109a <__fixunssfsi>
     854:	cf 56       	subi	r28, 0x6F	; 111
     856:	df 4f       	sbci	r29, 0xFF	; 255
     858:	68 83       	st	Y, r22
     85a:	79 83       	std	Y+1, r23	; 0x01
     85c:	8a 83       	std	Y+2, r24	; 0x02
     85e:	9b 83       	std	Y+3, r25	; 0x03
     860:	c1 59       	subi	r28, 0x91	; 145
     862:	d0 40       	sbci	r29, 0x00	; 0
     864:	cf 56       	subi	r28, 0x6F	; 111
     866:	df 4f       	sbci	r29, 0xFF	; 255
     868:	f8 81       	ld	r31, Y
     86a:	c1 59       	subi	r28, 0x91	; 145
     86c:	d0 40       	sbci	r29, 0x00	; 0
     86e:	f9 ab       	std	Y+49, r31	; 0x31

00000870 <.L27>:
     870:	ce 01       	movw	r24, r28
     872:	8c 5b       	subi	r24, 0xBC	; 188
     874:	9f 4f       	sbci	r25, 0xFF	; 255
     876:	29 a9       	ldd	r18, Y+49	; 0x31
     878:	dc 01       	movw	r26, r24
     87a:	2c 93       	st	X, r18

0000087c <.LBB68>:
	__asm__ volatile (
     87c:	ce 01       	movw	r24, r28
     87e:	8c 5b       	subi	r24, 0xBC	; 188
     880:	9f 4f       	sbci	r25, 0xFF	; 255
     882:	fc 01       	movw	r30, r24
     884:	80 81       	ld	r24, Z
     886:	28 2f       	mov	r18, r24

00000888 <.L1^B8>:
     888:	2a 95       	dec	r18
     88a:	f1 f7       	brne	.-4      	; 0x888 <.L1^B8>
     88c:	ce 01       	movw	r24, r28
     88e:	8c 5b       	subi	r24, 0xBC	; 188
     890:	9f 4f       	sbci	r25, 0xFF	; 255
     892:	dc 01       	movw	r26, r24
     894:	2c 93       	st	X, r18

00000896 <.Loc.119>:
	...

00000898 <.L40>:
    {
        _delay_us(1);

        if (PINB & (1 << echo))
     898:	83 e2       	ldi	r24, 0x23	; 35
     89a:	90 e0       	ldi	r25, 0x00	; 0
     89c:	fc 01       	movw	r30, r24
     89e:	80 81       	ld	r24, Z

000008a0 <.Loc.121>:
     8a0:	88 2f       	mov	r24, r24
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	81 70       	andi	r24, 0x01	; 1
     8a6:	99 27       	eor	r25, r25

000008a8 <.Loc.122>:
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	41 f0       	breq	.+16     	; 0x8bc <.L41>

000008ac <.Loc.123>:
        {
            if (knop_ingedrukt == 0) // knop is niet al eerder ingedrukt
     8ac:	8b 81       	ldd	r24, Y+3	; 0x03
     8ae:	9c 81       	ldd	r25, Y+4	; 0x04
     8b0:	00 97       	sbiw	r24, 0x00	; 0
     8b2:	21 f4       	brne	.+8      	; 0x8bc <.L41>

000008b4 <.Loc.124>:
            {
                knop_ingedrukt = 1;
     8b4:	81 e0       	ldi	r24, 0x01	; 1
     8b6:	90 e0       	ldi	r25, 0x00	; 0
     8b8:	9c 83       	std	Y+4, r25	; 0x04
     8ba:	8b 83       	std	Y+3, r24	; 0x03

000008bc <.L41>:
            }
        }
        if (knop_ingedrukt != 0) // knop is zojuist losgelaten
     8bc:	8b 81       	ldd	r24, Y+3	; 0x03
     8be:	9c 81       	ldd	r25, Y+4	; 0x04
     8c0:	00 97       	sbiw	r24, 0x00	; 0
     8c2:	29 f0       	breq	.+10     	; 0x8ce <.L42>

000008c4 <.Loc.126>:
        {
            tijdecho++;
     8c4:	89 81       	ldd	r24, Y+1	; 0x01
     8c6:	9a 81       	ldd	r25, Y+2	; 0x02
     8c8:	01 96       	adiw	r24, 0x01	; 1
     8ca:	9a 83       	std	Y+2, r25	; 0x02
     8cc:	89 83       	std	Y+1, r24	; 0x01

000008ce <.L42>:
        }
        if ((PINB & (1<<echo)) == 0)
     8ce:	83 e2       	ldi	r24, 0x23	; 35
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	dc 01       	movw	r26, r24
     8d4:	8c 91       	ld	r24, X

000008d6 <.Loc.128>:
     8d6:	88 2f       	mov	r24, r24
     8d8:	90 e0       	ldi	r25, 0x00	; 0
     8da:	81 70       	andi	r24, 0x01	; 1
     8dc:	99 27       	eor	r25, r25

000008de <.Loc.129>:
     8de:	00 97       	sbiw	r24, 0x00	; 0
     8e0:	49 f4       	brne	.+18     	; 0x8f4 <.L24>

000008e2 <.Loc.130>:
        {
            if (knop_ingedrukt != 0) // knop is zojuist losgelaten
     8e2:	8b 81       	ldd	r24, Y+3	; 0x03
     8e4:	9c 81       	ldd	r25, Y+4	; 0x04
     8e6:	00 97       	sbiw	r24, 0x00	; 0
     8e8:	29 f0       	breq	.+10     	; 0x8f4 <.L24>

000008ea <.Loc.131>:
            {
                knop_ingedrukt = 0;
     8ea:	1c 82       	std	Y+4, r1	; 0x04
     8ec:	1b 82       	std	Y+3, r1	; 0x03

000008ee <.Loc.132>:
                return tijdecho;
     8ee:	89 81       	ldd	r24, Y+1	; 0x01
     8f0:	9a 81       	ldd	r25, Y+2	; 0x02
     8f2:	0e c0       	rjmp	.+28     	; 0x910 <.L44>

000008f4 <.L24>:
    for(tijdecho = 0; tijdecho < timeout;)
     8f4:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <timeout>
     8f8:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <timeout+0x1>
     8fc:	29 81       	ldd	r18, Y+1	; 0x01
     8fe:	3a 81       	ldd	r19, Y+2	; 0x02
     900:	28 17       	cp	r18, r24
     902:	39 07       	cpc	r19, r25
     904:	0c f4       	brge	.+2      	; 0x908 <.Loc.134>

00000906 <L0^A>:
     906:	3d ce       	rjmp	.-902    	; 0x582 <.L45>

00000908 <.Loc.134>:
            }
        }
    }

    return timeout;
     908:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <timeout>
     90c:	90 91 01 02 	lds	r25, 0x0201	; 0x800201 <timeout+0x1>

00000910 <.L44>:

}
     910:	cc 56       	subi	r28, 0x6C	; 108
     912:	df 4f       	sbci	r29, 0xFF	; 255
     914:	0f b6       	in	r0, 0x3f	; 63
     916:	f8 94       	cli
     918:	de bf       	out	0x3e, r29	; 62
     91a:	0f be       	out	0x3f, r0	; 63
     91c:	cd bf       	out	0x3d, r28	; 61
     91e:	df 91       	pop	r29
     920:	cf 91       	pop	r28
     922:	1f 91       	pop	r17
     924:	0f 91       	pop	r16
     926:	08 95       	ret

00000928 <ultrasoon>:
int ultrasoon(void)
{
     928:	cf 93       	push	r28
     92a:	df 93       	push	r29
     92c:	00 d0       	rcall	.+0      	; 0x92e <L0^A>

0000092e <L0^A>:
     92e:	0f 92       	push	r0
     930:	cd b7       	in	r28, 0x3d	; 61
     932:	de b7       	in	r29, 0x3e	; 62

00000934 <.Loc.137>:
    int tijd = 0;
     934:	1a 82       	std	Y+2, r1	; 0x02
     936:	19 82       	std	Y+1, r1	; 0x01

00000938 <.Loc.138>:
    tijd = getPulse();
     938:	0e 94 4a 01 	call	0x294	; 0x294 <getPulse>
     93c:	9a 83       	std	Y+2, r25	; 0x02
     93e:	89 83       	std	Y+1, r24	; 0x01

00000940 <.Loc.139>:
    int Cm = tijd / 58;
     940:	89 81       	ldd	r24, Y+1	; 0x01
     942:	9a 81       	ldd	r25, Y+2	; 0x02
     944:	2a e3       	ldi	r18, 0x3A	; 58
     946:	30 e0       	ldi	r19, 0x00	; 0
     948:	b9 01       	movw	r22, r18
     94a:	0e 94 41 07 	call	0xe82	; 0xe82 <__divmodhi4>
     94e:	cb 01       	movw	r24, r22
     950:	9c 83       	std	Y+4, r25	; 0x04
     952:	8b 83       	std	Y+3, r24	; 0x03

00000954 <.Loc.140>:
    if(Cm <30)
     954:	8b 81       	ldd	r24, Y+3	; 0x03
     956:	9c 81       	ldd	r25, Y+4	; 0x04
     958:	8d 31       	cpi	r24, 0x1D	; 29
     95a:	91 05       	cpc	r25, r1
     95c:	09 f0       	breq	.+2      	; 0x960 <.Loc.141>

0000095e <L0^A>:
     95e:	54 f4       	brge	.+20     	; 0x974 <.L67>

00000960 <.Loc.141>:
    {
        PORTE |= (1 << stop);
     960:	8e e2       	ldi	r24, 0x2E	; 46
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	fc 01       	movw	r30, r24
     966:	20 81       	ld	r18, Z
     968:	8e e2       	ldi	r24, 0x2E	; 46
     96a:	90 e0       	ldi	r25, 0x00	; 0

0000096c <.Loc.142>:
     96c:	21 60       	ori	r18, 0x01	; 1
     96e:	fc 01       	movw	r30, r24
     970:	20 83       	st	Z, r18
     972:	09 c0       	rjmp	.+18     	; 0x986 <.L68>

00000974 <.L67>:
    }
    else
    {
        PORTE &= ~(1 << stop);
     974:	8e e2       	ldi	r24, 0x2E	; 46
     976:	90 e0       	ldi	r25, 0x00	; 0
     978:	fc 01       	movw	r30, r24
     97a:	20 81       	ld	r18, Z

0000097c <.Loc.144>:
     97c:	8e e2       	ldi	r24, 0x2E	; 46
     97e:	90 e0       	ldi	r25, 0x00	; 0

00000980 <.Loc.145>:
     980:	2e 7f       	andi	r18, 0xFE	; 254
     982:	fc 01       	movw	r30, r24
     984:	20 83       	st	Z, r18

00000986 <.L68>:
    }
}
     986:	00 00       	nop
     988:	0f 90       	pop	r0
     98a:	0f 90       	pop	r0
     98c:	0f 90       	pop	r0
     98e:	0f 90       	pop	r0
     990:	df 91       	pop	r29
     992:	cf 91       	pop	r28
     994:	08 95       	ret

00000996 <line>:

int line(void)
{
     996:	cf 93       	push	r28
     998:	df 93       	push	r29
     99a:	0f 92       	push	r0
     99c:	0f 92       	push	r0
     99e:	cd b7       	in	r28, 0x3d	; 61
     9a0:	de b7       	in	r29, 0x3e	; 62

000009a2 <.Loc.148>:
    int speed = basissnelheid;
     9a2:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <basissnelheid>
     9a6:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <basissnelheid+0x1>
     9aa:	9a 83       	std	Y+2, r25	; 0x02
     9ac:	89 83       	std	Y+1, r24	; 0x01

000009ae <.Loc.149>:

    if(PINC & (1 << 0))
     9ae:	86 e2       	ldi	r24, 0x26	; 38
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	fc 01       	movw	r30, r24
     9b4:	80 81       	ld	r24, Z

000009b6 <.Loc.150>:
     9b6:	88 2f       	mov	r24, r24
     9b8:	90 e0       	ldi	r25, 0x00	; 0
     9ba:	81 70       	andi	r24, 0x01	; 1
     9bc:	99 27       	eor	r25, r25

000009be <.Loc.151>:
     9be:	00 97       	sbiw	r24, 0x00	; 0
     9c0:	31 f0       	breq	.+12     	; 0x9ce <.L70>

000009c2 <.Loc.152>:
    {
        speed = speed + 1000;
     9c2:	89 81       	ldd	r24, Y+1	; 0x01
     9c4:	9a 81       	ldd	r25, Y+2	; 0x02
     9c6:	88 51       	subi	r24, 0x18	; 24
     9c8:	9c 4f       	sbci	r25, 0xFC	; 252
     9ca:	9a 83       	std	Y+2, r25	; 0x02
     9cc:	89 83       	std	Y+1, r24	; 0x01

000009ce <.L70>:
    }
    if(PINC & (1 << 2))
     9ce:	86 e2       	ldi	r24, 0x26	; 38
     9d0:	90 e0       	ldi	r25, 0x00	; 0
     9d2:	fc 01       	movw	r30, r24
     9d4:	80 81       	ld	r24, Z

000009d6 <.Loc.154>:
     9d6:	88 2f       	mov	r24, r24
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	84 70       	andi	r24, 0x04	; 4
     9dc:	99 27       	eor	r25, r25

000009de <.Loc.155>:
     9de:	00 97       	sbiw	r24, 0x00	; 0
     9e0:	31 f0       	breq	.+12     	; 0x9ee <.L71>

000009e2 <.Loc.156>:
    {
        speed = speed + 500;
     9e2:	89 81       	ldd	r24, Y+1	; 0x01
     9e4:	9a 81       	ldd	r25, Y+2	; 0x02
     9e6:	8c 50       	subi	r24, 0x0C	; 12
     9e8:	9e 4f       	sbci	r25, 0xFE	; 254
     9ea:	9a 83       	std	Y+2, r25	; 0x02
     9ec:	89 83       	std	Y+1, r24	; 0x01

000009ee <.L71>:
    }
    if(PINC & (1 << 4))
     9ee:	86 e2       	ldi	r24, 0x26	; 38
     9f0:	90 e0       	ldi	r25, 0x00	; 0
     9f2:	fc 01       	movw	r30, r24
     9f4:	80 81       	ld	r24, Z

000009f6 <.Loc.158>:
     9f6:	88 2f       	mov	r24, r24
     9f8:	90 e0       	ldi	r25, 0x00	; 0
     9fa:	80 71       	andi	r24, 0x10	; 16
     9fc:	99 27       	eor	r25, r25

000009fe <.Loc.159>:
     9fe:	00 97       	sbiw	r24, 0x00	; 0
     a00:	31 f0       	breq	.+12     	; 0xa0e <.L72>

00000a02 <.Loc.160>:
    {
        speed = speed + 100;
     a02:	89 81       	ldd	r24, Y+1	; 0x01
     a04:	9a 81       	ldd	r25, Y+2	; 0x02
     a06:	8c 59       	subi	r24, 0x9C	; 156
     a08:	9f 4f       	sbci	r25, 0xFF	; 255
     a0a:	9a 83       	std	Y+2, r25	; 0x02
     a0c:	89 83       	std	Y+1, r24	; 0x01

00000a0e <.L72>:
    }
    if(PINC & (1 << 6))
     a0e:	86 e2       	ldi	r24, 0x26	; 38
     a10:	90 e0       	ldi	r25, 0x00	; 0
     a12:	fc 01       	movw	r30, r24
     a14:	80 81       	ld	r24, Z

00000a16 <.Loc.162>:
     a16:	88 2f       	mov	r24, r24
     a18:	90 e0       	ldi	r25, 0x00	; 0
     a1a:	80 74       	andi	r24, 0x40	; 64
     a1c:	99 27       	eor	r25, r25

00000a1e <.Loc.163>:
     a1e:	00 97       	sbiw	r24, 0x00	; 0
     a20:	29 f0       	breq	.+10     	; 0xa2c <.L73>

00000a22 <.Loc.164>:
    {
        speed = speed + 20;
     a22:	89 81       	ldd	r24, Y+1	; 0x01
     a24:	9a 81       	ldd	r25, Y+2	; 0x02
     a26:	44 96       	adiw	r24, 0x14	; 20
     a28:	9a 83       	std	Y+2, r25	; 0x02
     a2a:	89 83       	std	Y+1, r24	; 0x01

00000a2c <.L73>:
    }
    if(PINA & (1 << 0))
     a2c:	80 e2       	ldi	r24, 0x20	; 32
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	fc 01       	movw	r30, r24
     a32:	80 81       	ld	r24, Z

00000a34 <.Loc.166>:
     a34:	88 2f       	mov	r24, r24
     a36:	90 e0       	ldi	r25, 0x00	; 0
     a38:	81 70       	andi	r24, 0x01	; 1
     a3a:	99 27       	eor	r25, r25

00000a3c <.Loc.167>:
     a3c:	00 97       	sbiw	r24, 0x00	; 0
     a3e:	31 f0       	breq	.+12     	; 0xa4c <.L74>

00000a40 <.Loc.168>:
    {
        speed = speed - 1000;
     a40:	89 81       	ldd	r24, Y+1	; 0x01
     a42:	9a 81       	ldd	r25, Y+2	; 0x02
     a44:	88 5e       	subi	r24, 0xE8	; 232
     a46:	93 40       	sbci	r25, 0x03	; 3
     a48:	9a 83       	std	Y+2, r25	; 0x02
     a4a:	89 83       	std	Y+1, r24	; 0x01

00000a4c <.L74>:
    }
    if(PINA & (1 << 2))
     a4c:	80 e2       	ldi	r24, 0x20	; 32
     a4e:	90 e0       	ldi	r25, 0x00	; 0
     a50:	fc 01       	movw	r30, r24
     a52:	80 81       	ld	r24, Z

00000a54 <.Loc.170>:
     a54:	88 2f       	mov	r24, r24
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	84 70       	andi	r24, 0x04	; 4
     a5a:	99 27       	eor	r25, r25

00000a5c <.Loc.171>:
     a5c:	00 97       	sbiw	r24, 0x00	; 0
     a5e:	31 f0       	breq	.+12     	; 0xa6c <.L75>

00000a60 <.Loc.172>:
    {
        speed = speed - 500;
     a60:	89 81       	ldd	r24, Y+1	; 0x01
     a62:	9a 81       	ldd	r25, Y+2	; 0x02
     a64:	84 5f       	subi	r24, 0xF4	; 244
     a66:	91 40       	sbci	r25, 0x01	; 1
     a68:	9a 83       	std	Y+2, r25	; 0x02
     a6a:	89 83       	std	Y+1, r24	; 0x01

00000a6c <.L75>:
    }
    if(PINA & (1 << 4))
     a6c:	80 e2       	ldi	r24, 0x20	; 32
     a6e:	90 e0       	ldi	r25, 0x00	; 0
     a70:	fc 01       	movw	r30, r24
     a72:	80 81       	ld	r24, Z

00000a74 <.Loc.174>:
     a74:	88 2f       	mov	r24, r24
     a76:	90 e0       	ldi	r25, 0x00	; 0
     a78:	80 71       	andi	r24, 0x10	; 16
     a7a:	99 27       	eor	r25, r25

00000a7c <.Loc.175>:
     a7c:	00 97       	sbiw	r24, 0x00	; 0
     a7e:	31 f0       	breq	.+12     	; 0xa8c <.L76>

00000a80 <.Loc.176>:
    {
        speed = speed - 100;
     a80:	89 81       	ldd	r24, Y+1	; 0x01
     a82:	9a 81       	ldd	r25, Y+2	; 0x02
     a84:	84 56       	subi	r24, 0x64	; 100
     a86:	91 09       	sbc	r25, r1
     a88:	9a 83       	std	Y+2, r25	; 0x02
     a8a:	89 83       	std	Y+1, r24	; 0x01

00000a8c <.L76>:
    }
    if(PINA & (1 << 6))
     a8c:	80 e2       	ldi	r24, 0x20	; 32
     a8e:	90 e0       	ldi	r25, 0x00	; 0
     a90:	fc 01       	movw	r30, r24
     a92:	80 81       	ld	r24, Z

00000a94 <.Loc.178>:
     a94:	88 2f       	mov	r24, r24
     a96:	90 e0       	ldi	r25, 0x00	; 0
     a98:	80 74       	andi	r24, 0x40	; 64
     a9a:	99 27       	eor	r25, r25

00000a9c <.Loc.179>:
     a9c:	00 97       	sbiw	r24, 0x00	; 0
     a9e:	29 f0       	breq	.+10     	; 0xaaa <.L77>

00000aa0 <.Loc.180>:
    {
        speed = speed - 20;
     aa0:	89 81       	ldd	r24, Y+1	; 0x01
     aa2:	9a 81       	ldd	r25, Y+2	; 0x02
     aa4:	44 97       	sbiw	r24, 0x14	; 20
     aa6:	9a 83       	std	Y+2, r25	; 0x02
     aa8:	89 83       	std	Y+1, r24	; 0x01

00000aaa <.L77>:
    }
    if((PINC & (1 << 6)) & (PINA & (1 << 0)))
     aaa:	86 e2       	ldi	r24, 0x26	; 38
     aac:	90 e0       	ldi	r25, 0x00	; 0
     aae:	fc 01       	movw	r30, r24
     ab0:	80 81       	ld	r24, Z

00000ab2 <.Loc.182>:
     ab2:	88 2f       	mov	r24, r24
     ab4:	90 e0       	ldi	r25, 0x00	; 0
     ab6:	9c 01       	movw	r18, r24
     ab8:	20 74       	andi	r18, 0x40	; 64
     aba:	33 27       	eor	r19, r19

00000abc <.Loc.183>:
     abc:	80 e2       	ldi	r24, 0x20	; 32
     abe:	90 e0       	ldi	r25, 0x00	; 0
     ac0:	fc 01       	movw	r30, r24
     ac2:	80 81       	ld	r24, Z

00000ac4 <.Loc.184>:
     ac4:	88 2f       	mov	r24, r24
     ac6:	90 e0       	ldi	r25, 0x00	; 0
     ac8:	81 70       	andi	r24, 0x01	; 1
     aca:	99 27       	eor	r25, r25

00000acc <.Loc.185>:
     acc:	82 23       	and	r24, r18
     ace:	93 23       	and	r25, r19

00000ad0 <.Loc.186>:
     ad0:	00 97       	sbiw	r24, 0x00	; 0
     ad2:	31 f0       	breq	.+12     	; 0xae0 <.L78>

00000ad4 <.Loc.187>:
    {
        speed = basissnelheid;
     ad4:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <basissnelheid>
     ad8:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <basissnelheid+0x1>
     adc:	9a 83       	std	Y+2, r25	; 0x02
     ade:	89 83       	std	Y+1, r24	; 0x01

00000ae0 <.L78>:
    }
}
     ae0:	00 00       	nop
     ae2:	0f 90       	pop	r0
     ae4:	0f 90       	pop	r0
     ae6:	df 91       	pop	r29
     ae8:	cf 91       	pop	r28
     aea:	08 95       	ret

00000aec <rijden>:

int rijden(void)
{
     aec:	cf 93       	push	r28
     aee:	df 93       	push	r29
     af0:	cd b7       	in	r28, 0x3d	; 61
     af2:	de b7       	in	r29, 0x3e	; 62

00000af4 <.Loc.190>:
    ICR1 = speed;                               // stel snelheid motor in
     af4:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <speed>
     af8:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <speed+0x1>

00000afc <.Loc.191>:
     afc:	86 e8       	ldi	r24, 0x86	; 134
     afe:	90 e0       	ldi	r25, 0x00	; 0

00000b00 <.Loc.192>:
     b00:	fc 01       	movw	r30, r24
     b02:	31 83       	std	Z+1, r19	; 0x01
     b04:	20 83       	st	Z, r18

00000b06 <.Loc.193>:
    ICR5 = (basissnelheid*2) - speed;           // doet tegenovergestelde van ICR1
     b06:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <basissnelheid>
     b0a:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <basissnelheid+0x1>
     b0e:	9c 01       	movw	r18, r24
     b10:	22 0f       	add	r18, r18
     b12:	33 1f       	adc	r19, r19

00000b14 <.Loc.194>:
     b14:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <speed>
     b18:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <speed+0x1>
     b1c:	28 1b       	sub	r18, r24
     b1e:	39 0b       	sbc	r19, r25

00000b20 <.Loc.195>:
     b20:	86 e2       	ldi	r24, 0x26	; 38
     b22:	91 e0       	ldi	r25, 0x01	; 1

00000b24 <.Loc.196>:
     b24:	fc 01       	movw	r30, r24
     b26:	31 83       	std	Z+1, r19	; 0x01
     b28:	20 83       	st	Z, r18

00000b2a <.Loc.197>:
}
     b2a:	00 00       	nop
     b2c:	df 91       	pop	r29
     b2e:	cf 91       	pop	r28
     b30:	08 95       	ret

00000b32 <__vector_20>:
#define RESET_VALUE	(65636ul-TIME_VALUE)
#define STOP_VALUE	(TIME_VALUE*0.075)
#define RANGE		(TIME_VALUE*0.025)

ISR(TIMER1_OVF_vect)
{
     b32:	1f 92       	push	r1
     b34:	0f 92       	push	r0
     b36:	0f b6       	in	r0, 0x3f	; 63
     b38:	0f 92       	push	r0
     b3a:	11 24       	eor	r1, r1
     b3c:	0b b6       	in	r0, 0x3b	; 59
     b3e:	0f 92       	push	r0
     b40:	2f 93       	push	r18
     b42:	3f 93       	push	r19
     b44:	8f 93       	push	r24
     b46:	9f 93       	push	r25
     b48:	ef 93       	push	r30
     b4a:	ff 93       	push	r31
     b4c:	cf 93       	push	r28
     b4e:	df 93       	push	r29
     b50:	cd b7       	in	r28, 0x3d	; 61
     b52:	de b7       	in	r29, 0x3e	; 62

00000b54 <.Loc.1>:
	TCNT1 = RESET_VALUE;
     b54:	84 e8       	ldi	r24, 0x84	; 132
     b56:	90 e0       	ldi	r25, 0x00	; 0

00000b58 <.Loc.2>:
     b58:	24 e2       	ldi	r18, 0x24	; 36
     b5a:	34 e6       	ldi	r19, 0x64	; 100
     b5c:	fc 01       	movw	r30, r24
     b5e:	31 83       	std	Z+1, r19	; 0x01
     b60:	20 83       	st	Z, r18

00000b62 <.Loc.3>:

	PORT_1 |= (1<<PIN_1);
     b62:	8e e2       	ldi	r24, 0x2E	; 46
     b64:	90 e0       	ldi	r25, 0x00	; 0
     b66:	fc 01       	movw	r30, r24
     b68:	20 81       	ld	r18, Z
     b6a:	8e e2       	ldi	r24, 0x2E	; 46
     b6c:	90 e0       	ldi	r25, 0x00	; 0

00000b6e <.Loc.4>:
     b6e:	28 60       	ori	r18, 0x08	; 8
     b70:	fc 01       	movw	r30, r24
     b72:	20 83       	st	Z, r18

00000b74 <.Loc.5>:
	PORT_2 |= (1<<PIN_2);
     b74:	82 e0       	ldi	r24, 0x02	; 2
     b76:	91 e0       	ldi	r25, 0x01	; 1
     b78:	fc 01       	movw	r30, r24
     b7a:	20 81       	ld	r18, Z
     b7c:	82 e0       	ldi	r24, 0x02	; 2
     b7e:	91 e0       	ldi	r25, 0x01	; 1

00000b80 <.Loc.6>:
     b80:	28 60       	ori	r18, 0x08	; 8
     b82:	fc 01       	movw	r30, r24
     b84:	20 83       	st	Z, r18

00000b86 <.Loc.7>:
}
     b86:	00 00       	nop
     b88:	df 91       	pop	r29
     b8a:	cf 91       	pop	r28
     b8c:	ff 91       	pop	r31
     b8e:	ef 91       	pop	r30
     b90:	9f 91       	pop	r25
     b92:	8f 91       	pop	r24
     b94:	3f 91       	pop	r19
     b96:	2f 91       	pop	r18
     b98:	0f 90       	pop	r0
     b9a:	0b be       	out	0x3b, r0	; 59
     b9c:	0f 90       	pop	r0
     b9e:	0f be       	out	0x3f, r0	; 63
     ba0:	0f 90       	pop	r0
     ba2:	1f 90       	pop	r1
     ba4:	18 95       	reti

00000ba6 <__vector_17>:

ISR(TIMER1_COMPA_vect)
{
     ba6:	1f 92       	push	r1
     ba8:	0f 92       	push	r0
     baa:	0f b6       	in	r0, 0x3f	; 63
     bac:	0f 92       	push	r0
     bae:	11 24       	eor	r1, r1
     bb0:	0b b6       	in	r0, 0x3b	; 59
     bb2:	0f 92       	push	r0
     bb4:	2f 93       	push	r18
     bb6:	8f 93       	push	r24
     bb8:	9f 93       	push	r25
     bba:	ef 93       	push	r30
     bbc:	ff 93       	push	r31
     bbe:	cf 93       	push	r28
     bc0:	df 93       	push	r29
     bc2:	cd b7       	in	r28, 0x3d	; 61
     bc4:	de b7       	in	r29, 0x3e	; 62

00000bc6 <.Loc.9>:
	PORT_1 &= ~(1<<PIN_1);
     bc6:	8e e2       	ldi	r24, 0x2E	; 46
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	fc 01       	movw	r30, r24
     bcc:	20 81       	ld	r18, Z

00000bce <.Loc.10>:
     bce:	8e e2       	ldi	r24, 0x2E	; 46
     bd0:	90 e0       	ldi	r25, 0x00	; 0

00000bd2 <.Loc.11>:
     bd2:	27 7f       	andi	r18, 0xF7	; 247
     bd4:	fc 01       	movw	r30, r24
     bd6:	20 83       	st	Z, r18

00000bd8 <.Loc.12>:
}
     bd8:	00 00       	nop
     bda:	df 91       	pop	r29
     bdc:	cf 91       	pop	r28
     bde:	ff 91       	pop	r31
     be0:	ef 91       	pop	r30
     be2:	9f 91       	pop	r25
     be4:	8f 91       	pop	r24
     be6:	2f 91       	pop	r18
     be8:	0f 90       	pop	r0
     bea:	0b be       	out	0x3b, r0	; 59
     bec:	0f 90       	pop	r0
     bee:	0f be       	out	0x3f, r0	; 63
     bf0:	0f 90       	pop	r0
     bf2:	1f 90       	pop	r1
     bf4:	18 95       	reti

00000bf6 <__vector_18>:

ISR(TIMER1_COMPB_vect)
{
     bf6:	1f 92       	push	r1
     bf8:	0f 92       	push	r0
     bfa:	0f b6       	in	r0, 0x3f	; 63
     bfc:	0f 92       	push	r0
     bfe:	11 24       	eor	r1, r1
     c00:	0b b6       	in	r0, 0x3b	; 59
     c02:	0f 92       	push	r0
     c04:	2f 93       	push	r18
     c06:	8f 93       	push	r24
     c08:	9f 93       	push	r25
     c0a:	ef 93       	push	r30
     c0c:	ff 93       	push	r31
     c0e:	cf 93       	push	r28
     c10:	df 93       	push	r29
     c12:	cd b7       	in	r28, 0x3d	; 61
     c14:	de b7       	in	r29, 0x3e	; 62

00000c16 <.Loc.14>:
	PORT_2 &= ~(1<<PIN_2);
     c16:	82 e0       	ldi	r24, 0x02	; 2
     c18:	91 e0       	ldi	r25, 0x01	; 1
     c1a:	fc 01       	movw	r30, r24
     c1c:	20 81       	ld	r18, Z

00000c1e <.Loc.15>:
     c1e:	82 e0       	ldi	r24, 0x02	; 2
     c20:	91 e0       	ldi	r25, 0x01	; 1

00000c22 <.Loc.16>:
     c22:	27 7f       	andi	r18, 0xF7	; 247
     c24:	fc 01       	movw	r30, r24
     c26:	20 83       	st	Z, r18

00000c28 <.Loc.17>:
}
     c28:	00 00       	nop
     c2a:	df 91       	pop	r29
     c2c:	cf 91       	pop	r28
     c2e:	ff 91       	pop	r31
     c30:	ef 91       	pop	r30
     c32:	9f 91       	pop	r25
     c34:	8f 91       	pop	r24
     c36:	2f 91       	pop	r18
     c38:	0f 90       	pop	r0
     c3a:	0b be       	out	0x3b, r0	; 59
     c3c:	0f 90       	pop	r0
     c3e:	0f be       	out	0x3f, r0	; 63
     c40:	0f 90       	pop	r0
     c42:	1f 90       	pop	r1
     c44:	18 95       	reti

00000c46 <init_servo>:

void init_servo(void)
{
     c46:	cf 93       	push	r28
     c48:	df 93       	push	r29
     c4a:	cd b7       	in	r28, 0x3d	; 61
     c4c:	de b7       	in	r29, 0x3e	; 62

00000c4e <.Loc.19>:
	// Config pins as output
	DDR_1 |= (1<<PIN_1);
     c4e:	8d e2       	ldi	r24, 0x2D	; 45
     c50:	90 e0       	ldi	r25, 0x00	; 0
     c52:	fc 01       	movw	r30, r24
     c54:	20 81       	ld	r18, Z
     c56:	8d e2       	ldi	r24, 0x2D	; 45
     c58:	90 e0       	ldi	r25, 0x00	; 0

00000c5a <.Loc.20>:
     c5a:	28 60       	ori	r18, 0x08	; 8
     c5c:	fc 01       	movw	r30, r24
     c5e:	20 83       	st	Z, r18

00000c60 <.Loc.21>:
	DDR_2 |= (1<<PIN_2);
     c60:	81 e0       	ldi	r24, 0x01	; 1
     c62:	91 e0       	ldi	r25, 0x01	; 1
     c64:	fc 01       	movw	r30, r24
     c66:	20 81       	ld	r18, Z
     c68:	81 e0       	ldi	r24, 0x01	; 1
     c6a:	91 e0       	ldi	r25, 0x01	; 1

00000c6c <.Loc.22>:
     c6c:	28 60       	ori	r18, 0x08	; 8
     c6e:	fc 01       	movw	r30, r24
     c70:	20 83       	st	Z, r18

00000c72 <.Loc.23>:

	// Use mode 0, clkdiv = 8
	TCCR1A = 0;
     c72:	80 e8       	ldi	r24, 0x80	; 128
     c74:	90 e0       	ldi	r25, 0x00	; 0

00000c76 <.Loc.24>:
     c76:	fc 01       	movw	r30, r24
     c78:	10 82       	st	Z, r1

00000c7a <.Loc.25>:
	TCCR1B = (0<<CS12) | (1<<CS11) | (0<<CS10);
     c7a:	81 e8       	ldi	r24, 0x81	; 129
     c7c:	90 e0       	ldi	r25, 0x00	; 0

00000c7e <.Loc.26>:
     c7e:	22 e0       	ldi	r18, 0x02	; 2
     c80:	fc 01       	movw	r30, r24
     c82:	20 83       	st	Z, r18

00000c84 <.Loc.27>:
	// Interrupts on OCA, OCB and OVF
	TIMSK1 = (1<<OCIE1B) | (1<<OCIE1A) | (1<<TOIE1);
     c84:	8f e6       	ldi	r24, 0x6F	; 111
     c86:	90 e0       	ldi	r25, 0x00	; 0

00000c88 <.Loc.28>:
     c88:	27 e0       	ldi	r18, 0x07	; 7
     c8a:	fc 01       	movw	r30, r24
     c8c:	20 83       	st	Z, r18

00000c8e <.Loc.29>:

	TCNT1 = RESET_VALUE;
     c8e:	84 e8       	ldi	r24, 0x84	; 132
     c90:	90 e0       	ldi	r25, 0x00	; 0

00000c92 <.Loc.30>:
     c92:	24 e2       	ldi	r18, 0x24	; 36
     c94:	34 e6       	ldi	r19, 0x64	; 100
     c96:	fc 01       	movw	r30, r24
     c98:	31 83       	std	Z+1, r19	; 0x01
     c9a:	20 83       	st	Z, r18

00000c9c <.Loc.31>:

	servo1_set_percentage(0);
     c9c:	80 e0       	ldi	r24, 0x00	; 0
     c9e:	0e 94 59 06 	call	0xcb2	; 0xcb2 <servo1_set_percentage>

00000ca2 <.Loc.32>:
	servo2_set_percentage(0);
     ca2:	80 e0       	ldi	r24, 0x00	; 0
     ca4:	0e 94 cd 06 	call	0xd9a	; 0xd9a <servo2_set_percentage>

00000ca8 <.Loc.33>:

	sei();
     ca8:	78 94       	sei

00000caa <.Loc.34>:
}
     caa:	00 00       	nop
     cac:	df 91       	pop	r29
     cae:	cf 91       	pop	r28
     cb0:	08 95       	ret

00000cb2 <servo1_set_percentage>:

void servo1_set_percentage(signed char percentage)
{
     cb2:	0f 93       	push	r16
     cb4:	1f 93       	push	r17
     cb6:	cf 93       	push	r28
     cb8:	df 93       	push	r29
     cba:	cd b7       	in	r28, 0x3d	; 61
     cbc:	de b7       	in	r29, 0x3e	; 62
     cbe:	6d 97       	sbiw	r28, 0x1d	; 29
     cc0:	0f b6       	in	r0, 0x3f	; 63
     cc2:	f8 94       	cli
     cc4:	de bf       	out	0x3e, r29	; 62
     cc6:	0f be       	out	0x3f, r0	; 63
     cc8:	cd bf       	out	0x3d, r28	; 61
     cca:	89 83       	std	Y+1, r24	; 0x01

00000ccc <.Loc.36>:
	if (percentage >= -100 && percentage <= 100)
     ccc:	89 81       	ldd	r24, Y+1	; 0x01
     cce:	8c 39       	cpi	r24, 0x9C	; 156
     cd0:	0c f4       	brge	.+2      	; 0xcd4 <.Loc.37>

00000cd2 <L0^A>:
     cd2:	57 c0       	rjmp	.+174    	; 0xd82 <.L7>

00000cd4 <.Loc.37>:
     cd4:	89 81       	ldd	r24, Y+1	; 0x01
     cd6:	84 36       	cpi	r24, 0x64	; 100
     cd8:	11 f0       	breq	.+4      	; 0xcde <.Loc.38>

00000cda <L0^A>:
     cda:	0c f0       	brlt	.+2      	; 0xcde <.Loc.38>

00000cdc <L0^A>:
     cdc:	52 c0       	rjmp	.+164    	; 0xd82 <.L7>

00000cde <.Loc.38>:
	{
		OCR1A = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
     cde:	89 81       	ldd	r24, Y+1	; 0x01
     ce0:	28 2f       	mov	r18, r24
     ce2:	88 0f       	add	r24, r24
     ce4:	33 0b       	sbc	r19, r19
     ce6:	44 0b       	sbc	r20, r20
     ce8:	55 0b       	sbc	r21, r21
     cea:	2e 87       	std	Y+14, r18	; 0x0e
     cec:	3f 87       	std	Y+15, r19	; 0x0f
     cee:	48 8b       	std	Y+16, r20	; 0x10
     cf0:	59 8b       	std	Y+17, r21	; 0x11
     cf2:	6e 85       	ldd	r22, Y+14	; 0x0e
     cf4:	7f 85       	ldd	r23, Y+15	; 0x0f
     cf6:	88 89       	ldd	r24, Y+16	; 0x10
     cf8:	99 89       	ldd	r25, Y+17	; 0x11
     cfa:	0e 94 7e 08 	call	0x10fc	; 0x10fc <__floatsisf>
     cfe:	6a 83       	std	Y+2, r22	; 0x02
     d00:	7b 83       	std	Y+3, r23	; 0x03
     d02:	8c 83       	std	Y+4, r24	; 0x04
     d04:	9d 83       	std	Y+5, r25	; 0x05
     d06:	20 e0       	ldi	r18, 0x00	; 0
     d08:	30 e0       	ldi	r19, 0x00	; 0
     d0a:	40 e2       	ldi	r20, 0x20	; 32
     d0c:	51 e4       	ldi	r21, 0x41	; 65
     d0e:	6a 81       	ldd	r22, Y+2	; 0x02
     d10:	7b 81       	ldd	r23, Y+3	; 0x03
     d12:	8c 81       	ldd	r24, Y+4	; 0x04
     d14:	9d 81       	ldd	r25, Y+5	; 0x05
     d16:	0e 94 33 09 	call	0x1266	; 0x1266 <__mulsf3>
     d1a:	6a 8b       	std	Y+18, r22	; 0x12
     d1c:	7b 8b       	std	Y+19, r23	; 0x13
     d1e:	8c 8b       	std	Y+20, r24	; 0x14
     d20:	9d 8b       	std	Y+21, r25	; 0x15
     d22:	8a 89       	ldd	r24, Y+18	; 0x12
     d24:	9b 89       	ldd	r25, Y+19	; 0x13
     d26:	ac 89       	ldd	r26, Y+20	; 0x14
     d28:	bd 89       	ldd	r27, Y+21	; 0x15
     d2a:	8e 83       	std	Y+6, r24	; 0x06
     d2c:	9f 83       	std	Y+7, r25	; 0x07
     d2e:	a8 87       	std	Y+8, r26	; 0x08
     d30:	b9 87       	std	Y+9, r27	; 0x09

00000d32 <.Loc.39>:
     d32:	20 e0       	ldi	r18, 0x00	; 0
     d34:	38 eb       	ldi	r19, 0xB8	; 184
     d36:	4f ed       	ldi	r20, 0xDF	; 223
     d38:	56 e4       	ldi	r21, 0x46	; 70
     d3a:	6e 81       	ldd	r22, Y+6	; 0x06
     d3c:	7f 81       	ldd	r23, Y+7	; 0x07
     d3e:	88 85       	ldd	r24, Y+8	; 0x08
     d40:	99 85       	ldd	r25, Y+9	; 0x09
     d42:	0e 94 6a 07 	call	0xed4	; 0xed4 <__addsf3>
     d46:	6e 8b       	std	Y+22, r22	; 0x16
     d48:	7f 8b       	std	Y+23, r23	; 0x17
     d4a:	88 8f       	std	Y+24, r24	; 0x18
     d4c:	99 8f       	std	Y+25, r25	; 0x19
     d4e:	2e 89       	ldd	r18, Y+22	; 0x16
     d50:	3f 89       	ldd	r19, Y+23	; 0x17
     d52:	48 8d       	ldd	r20, Y+24	; 0x18
     d54:	59 8d       	ldd	r21, Y+25	; 0x19
     d56:	2a 87       	std	Y+10, r18	; 0x0a
     d58:	3b 87       	std	Y+11, r19	; 0x0b
     d5a:	4c 87       	std	Y+12, r20	; 0x0c
     d5c:	5d 87       	std	Y+13, r21	; 0x0d

00000d5e <.Loc.40>:
     d5e:	08 e8       	ldi	r16, 0x88	; 136
     d60:	10 e0       	ldi	r17, 0x00	; 0

00000d62 <.Loc.41>:
     d62:	6a 85       	ldd	r22, Y+10	; 0x0a
     d64:	7b 85       	ldd	r23, Y+11	; 0x0b
     d66:	8c 85       	ldd	r24, Y+12	; 0x0c
     d68:	9d 85       	ldd	r25, Y+13	; 0x0d
     d6a:	0e 94 4d 08 	call	0x109a	; 0x109a <__fixunssfsi>
     d6e:	6a 8f       	std	Y+26, r22	; 0x1a
     d70:	7b 8f       	std	Y+27, r23	; 0x1b
     d72:	8c 8f       	std	Y+28, r24	; 0x1c
     d74:	9d 8f       	std	Y+29, r25	; 0x1d
     d76:	8a 8d       	ldd	r24, Y+26	; 0x1a
     d78:	9b 8d       	ldd	r25, Y+27	; 0x1b
     d7a:	d8 01       	movw	r26, r16
     d7c:	11 96       	adiw	r26, 0x01	; 1
     d7e:	9c 93       	st	X, r25
     d80:	8e 93       	st	-X, r24

00000d82 <.L7>:
	}
}
     d82:	00 00       	nop
     d84:	6d 96       	adiw	r28, 0x1d	; 29
     d86:	0f b6       	in	r0, 0x3f	; 63
     d88:	f8 94       	cli
     d8a:	de bf       	out	0x3e, r29	; 62
     d8c:	0f be       	out	0x3f, r0	; 63
     d8e:	cd bf       	out	0x3d, r28	; 61
     d90:	df 91       	pop	r29
     d92:	cf 91       	pop	r28
     d94:	1f 91       	pop	r17
     d96:	0f 91       	pop	r16
     d98:	08 95       	ret

00000d9a <servo2_set_percentage>:

void servo2_set_percentage(signed char percentage)
{
     d9a:	0f 93       	push	r16
     d9c:	1f 93       	push	r17
     d9e:	cf 93       	push	r28
     da0:	df 93       	push	r29
     da2:	cd b7       	in	r28, 0x3d	; 61
     da4:	de b7       	in	r29, 0x3e	; 62
     da6:	6d 97       	sbiw	r28, 0x1d	; 29
     da8:	0f b6       	in	r0, 0x3f	; 63
     daa:	f8 94       	cli
     dac:	de bf       	out	0x3e, r29	; 62
     dae:	0f be       	out	0x3f, r0	; 63
     db0:	cd bf       	out	0x3d, r28	; 61
     db2:	89 83       	std	Y+1, r24	; 0x01

00000db4 <.Loc.44>:
	if (percentage >= -100 && percentage <= 100)
     db4:	89 81       	ldd	r24, Y+1	; 0x01
     db6:	8c 39       	cpi	r24, 0x9C	; 156
     db8:	0c f4       	brge	.+2      	; 0xdbc <.Loc.45>

00000dba <L0^A>:
     dba:	57 c0       	rjmp	.+174    	; 0xe6a <.L10>

00000dbc <.Loc.45>:
     dbc:	89 81       	ldd	r24, Y+1	; 0x01
     dbe:	84 36       	cpi	r24, 0x64	; 100
     dc0:	11 f0       	breq	.+4      	; 0xdc6 <.Loc.46>

00000dc2 <L0^A>:
     dc2:	0c f0       	brlt	.+2      	; 0xdc6 <.Loc.46>

00000dc4 <L0^A>:
     dc4:	52 c0       	rjmp	.+164    	; 0xe6a <.L10>

00000dc6 <.Loc.46>:
	{
		OCR1B = RESET_VALUE+STOP_VALUE+(RANGE/100*percentage);
     dc6:	89 81       	ldd	r24, Y+1	; 0x01
     dc8:	28 2f       	mov	r18, r24
     dca:	88 0f       	add	r24, r24
     dcc:	33 0b       	sbc	r19, r19
     dce:	44 0b       	sbc	r20, r20
     dd0:	55 0b       	sbc	r21, r21
     dd2:	2e 87       	std	Y+14, r18	; 0x0e
     dd4:	3f 87       	std	Y+15, r19	; 0x0f
     dd6:	48 8b       	std	Y+16, r20	; 0x10
     dd8:	59 8b       	std	Y+17, r21	; 0x11
     dda:	6e 85       	ldd	r22, Y+14	; 0x0e
     ddc:	7f 85       	ldd	r23, Y+15	; 0x0f
     dde:	88 89       	ldd	r24, Y+16	; 0x10
     de0:	99 89       	ldd	r25, Y+17	; 0x11
     de2:	0e 94 7e 08 	call	0x10fc	; 0x10fc <__floatsisf>
     de6:	6a 83       	std	Y+2, r22	; 0x02
     de8:	7b 83       	std	Y+3, r23	; 0x03
     dea:	8c 83       	std	Y+4, r24	; 0x04
     dec:	9d 83       	std	Y+5, r25	; 0x05
     dee:	20 e0       	ldi	r18, 0x00	; 0
     df0:	30 e0       	ldi	r19, 0x00	; 0
     df2:	40 e2       	ldi	r20, 0x20	; 32
     df4:	51 e4       	ldi	r21, 0x41	; 65
     df6:	6a 81       	ldd	r22, Y+2	; 0x02
     df8:	7b 81       	ldd	r23, Y+3	; 0x03
     dfa:	8c 81       	ldd	r24, Y+4	; 0x04
     dfc:	9d 81       	ldd	r25, Y+5	; 0x05
     dfe:	0e 94 33 09 	call	0x1266	; 0x1266 <__mulsf3>
     e02:	6a 8b       	std	Y+18, r22	; 0x12
     e04:	7b 8b       	std	Y+19, r23	; 0x13
     e06:	8c 8b       	std	Y+20, r24	; 0x14
     e08:	9d 8b       	std	Y+21, r25	; 0x15
     e0a:	8a 89       	ldd	r24, Y+18	; 0x12
     e0c:	9b 89       	ldd	r25, Y+19	; 0x13
     e0e:	ac 89       	ldd	r26, Y+20	; 0x14
     e10:	bd 89       	ldd	r27, Y+21	; 0x15
     e12:	8e 83       	std	Y+6, r24	; 0x06
     e14:	9f 83       	std	Y+7, r25	; 0x07
     e16:	a8 87       	std	Y+8, r26	; 0x08
     e18:	b9 87       	std	Y+9, r27	; 0x09

00000e1a <.Loc.47>:
     e1a:	20 e0       	ldi	r18, 0x00	; 0
     e1c:	38 eb       	ldi	r19, 0xB8	; 184
     e1e:	4f ed       	ldi	r20, 0xDF	; 223
     e20:	56 e4       	ldi	r21, 0x46	; 70
     e22:	6e 81       	ldd	r22, Y+6	; 0x06
     e24:	7f 81       	ldd	r23, Y+7	; 0x07
     e26:	88 85       	ldd	r24, Y+8	; 0x08
     e28:	99 85       	ldd	r25, Y+9	; 0x09
     e2a:	0e 94 6a 07 	call	0xed4	; 0xed4 <__addsf3>
     e2e:	6e 8b       	std	Y+22, r22	; 0x16
     e30:	7f 8b       	std	Y+23, r23	; 0x17
     e32:	88 8f       	std	Y+24, r24	; 0x18
     e34:	99 8f       	std	Y+25, r25	; 0x19
     e36:	2e 89       	ldd	r18, Y+22	; 0x16
     e38:	3f 89       	ldd	r19, Y+23	; 0x17
     e3a:	48 8d       	ldd	r20, Y+24	; 0x18
     e3c:	59 8d       	ldd	r21, Y+25	; 0x19
     e3e:	2a 87       	std	Y+10, r18	; 0x0a
     e40:	3b 87       	std	Y+11, r19	; 0x0b
     e42:	4c 87       	std	Y+12, r20	; 0x0c
     e44:	5d 87       	std	Y+13, r21	; 0x0d

00000e46 <.Loc.48>:
     e46:	0a e8       	ldi	r16, 0x8A	; 138
     e48:	10 e0       	ldi	r17, 0x00	; 0

00000e4a <.Loc.49>:
     e4a:	6a 85       	ldd	r22, Y+10	; 0x0a
     e4c:	7b 85       	ldd	r23, Y+11	; 0x0b
     e4e:	8c 85       	ldd	r24, Y+12	; 0x0c
     e50:	9d 85       	ldd	r25, Y+13	; 0x0d
     e52:	0e 94 4d 08 	call	0x109a	; 0x109a <__fixunssfsi>
     e56:	6a 8f       	std	Y+26, r22	; 0x1a
     e58:	7b 8f       	std	Y+27, r23	; 0x1b
     e5a:	8c 8f       	std	Y+28, r24	; 0x1c
     e5c:	9d 8f       	std	Y+29, r25	; 0x1d
     e5e:	8a 8d       	ldd	r24, Y+26	; 0x1a
     e60:	9b 8d       	ldd	r25, Y+27	; 0x1b
     e62:	d8 01       	movw	r26, r16
     e64:	11 96       	adiw	r26, 0x01	; 1
     e66:	9c 93       	st	X, r25
     e68:	8e 93       	st	-X, r24

00000e6a <.L10>:
	}
}
     e6a:	00 00       	nop
     e6c:	6d 96       	adiw	r28, 0x1d	; 29
     e6e:	0f b6       	in	r0, 0x3f	; 63
     e70:	f8 94       	cli
     e72:	de bf       	out	0x3e, r29	; 62
     e74:	0f be       	out	0x3f, r0	; 63
     e76:	cd bf       	out	0x3d, r28	; 61
     e78:	df 91       	pop	r29
     e7a:	cf 91       	pop	r28
     e7c:	1f 91       	pop	r17
     e7e:	0f 91       	pop	r16
     e80:	08 95       	ret

00000e82 <__divmodhi4>:
     e82:	97 fb       	bst	r25, 7

00000e84 <.Loc.1>:
     e84:	07 2e       	mov	r0, r23

00000e86 <.Loc.2>:
     e86:	16 f4       	brtc	.+4      	; 0xe8c <.L^B1>

00000e88 <.Loc.3>:
     e88:	00 94       	com	r0

00000e8a <.Loc.4>:
     e8a:	07 d0       	rcall	.+14     	; 0xe9a <__divmodhi4_neg1>

00000e8c <.L^B1>:
     e8c:	77 fd       	sbrc	r23, 7

00000e8e <.Loc.6>:
     e8e:	09 d0       	rcall	.+18     	; 0xea2 <__divmodhi4_neg2>

00000e90 <.Loc.7>:
     e90:	0e 94 55 07 	call	0xeaa	; 0xeaa <__udivmodhi4>

00000e94 <.Loc.8>:
     e94:	07 fc       	sbrc	r0, 7

00000e96 <.Loc.9>:
     e96:	05 d0       	rcall	.+10     	; 0xea2 <__divmodhi4_neg2>

00000e98 <.Loc.10>:
     e98:	3e f4       	brtc	.+14     	; 0xea8 <__divmodhi4_exit>

00000e9a <__divmodhi4_neg1>:
     e9a:	90 95       	com	r25

00000e9c <.Loc.12>:
     e9c:	81 95       	neg	r24

00000e9e <.Loc.13>:
     e9e:	9f 4f       	sbci	r25, 0xFF	; 255

00000ea0 <.Loc.14>:
     ea0:	08 95       	ret

00000ea2 <__divmodhi4_neg2>:
     ea2:	70 95       	com	r23

00000ea4 <.Loc.16>:
     ea4:	61 95       	neg	r22

00000ea6 <.Loc.17>:
     ea6:	7f 4f       	sbci	r23, 0xFF	; 255

00000ea8 <__divmodhi4_exit>:
     ea8:	08 95       	ret

00000eaa <__udivmodhi4>:
     eaa:	aa 1b       	sub	r26, r26

00000eac <.Loc.1>:
     eac:	bb 1b       	sub	r27, r27

00000eae <.Loc.2>:
     eae:	51 e1       	ldi	r21, 0x11	; 17

00000eb0 <.Loc.3>:
     eb0:	07 c0       	rjmp	.+14     	; 0xec0 <__udivmodhi4_ep>

00000eb2 <__udivmodhi4_loop>:
     eb2:	aa 1f       	adc	r26, r26

00000eb4 <.Loc.5>:
     eb4:	bb 1f       	adc	r27, r27

00000eb6 <.Loc.6>:
     eb6:	a6 17       	cp	r26, r22

00000eb8 <.Loc.7>:
     eb8:	b7 07       	cpc	r27, r23

00000eba <.Loc.8>:
     eba:	10 f0       	brcs	.+4      	; 0xec0 <__udivmodhi4_ep>

00000ebc <.Loc.9>:
     ebc:	a6 1b       	sub	r26, r22

00000ebe <.Loc.10>:
     ebe:	b7 0b       	sbc	r27, r23

00000ec0 <__udivmodhi4_ep>:
     ec0:	88 1f       	adc	r24, r24

00000ec2 <.Loc.12>:
     ec2:	99 1f       	adc	r25, r25

00000ec4 <.Loc.13>:
     ec4:	5a 95       	dec	r21

00000ec6 <.Loc.14>:
     ec6:	a9 f7       	brne	.-22     	; 0xeb2 <__udivmodhi4_loop>

00000ec8 <.Loc.15>:
     ec8:	80 95       	com	r24

00000eca <.Loc.16>:
     eca:	90 95       	com	r25

00000ecc <.Loc.17>:
     ecc:	bc 01       	movw	r22, r24

00000ece <.Loc.18>:
     ece:	cd 01       	movw	r24, r26

00000ed0 <.Loc.19>:
     ed0:	08 95       	ret

00000ed2 <__subsf3>:
     ed2:	50 58       	subi	r21, 0x80	; 128

00000ed4 <__addsf3>:
     ed4:	bb 27       	eor	r27, r27
     ed6:	aa 27       	eor	r26, r26
     ed8:	0e 94 81 07 	call	0xf02	; 0xf02 <__addsf3x>
     edc:	0c 94 f4 08 	jmp	0x11e8	; 0x11e8 <__fp_round>

00000ee0 <.L^B1>:
     ee0:	0e 94 e6 08 	call	0x11cc	; 0x11cc <__fp_pscA>
     ee4:	38 f0       	brcs	.+14     	; 0xef4 <.L_nan>
     ee6:	0e 94 ed 08 	call	0x11da	; 0x11da <__fp_pscB>
     eea:	20 f0       	brcs	.+8      	; 0xef4 <.L_nan>
     eec:	39 f4       	brne	.+14     	; 0xefc <.L_inf>
     eee:	9f 3f       	cpi	r25, 0xFF	; 255
     ef0:	19 f4       	brne	.+6      	; 0xef8 <.L_infB>
     ef2:	26 f4       	brtc	.+8      	; 0xefc <.L_inf>

00000ef4 <.L_nan>:
     ef4:	0c 94 e3 08 	jmp	0x11c6	; 0x11c6 <__fp_nan>

00000ef8 <.L_infB>:
     ef8:	0e f4       	brtc	.+2      	; 0xefc <.L_inf>
     efa:	e0 95       	com	r30

00000efc <.L_inf>:
     efc:	e7 fb       	bst	r30, 7
     efe:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_inf>

00000f02 <__addsf3x>:
     f02:	e9 2f       	mov	r30, r25
     f04:	0e 94 05 09 	call	0x120a	; 0x120a <__fp_split3>
     f08:	58 f3       	brcs	.-42     	; 0xee0 <.L^B1>
     f0a:	ba 17       	cp	r27, r26
     f0c:	62 07       	cpc	r22, r18
     f0e:	73 07       	cpc	r23, r19
     f10:	84 07       	cpc	r24, r20
     f12:	95 07       	cpc	r25, r21
     f14:	20 f0       	brcs	.+8      	; 0xf1e <.L2^B1>
     f16:	79 f4       	brne	.+30     	; 0xf36 <.L4^B1>
     f18:	a6 f5       	brtc	.+104    	; 0xf82 <.L_add>
     f1a:	0c 94 27 09 	jmp	0x124e	; 0x124e <__fp_zero>

00000f1e <.L2^B1>:
     f1e:	0e f4       	brtc	.+2      	; 0xf22 <.L3^B1>
     f20:	e0 95       	com	r30

00000f22 <.L3^B1>:
     f22:	0b 2e       	mov	r0, r27
     f24:	ba 2f       	mov	r27, r26
     f26:	a0 2d       	mov	r26, r0
     f28:	0b 01       	movw	r0, r22
     f2a:	b9 01       	movw	r22, r18
     f2c:	90 01       	movw	r18, r0
     f2e:	0c 01       	movw	r0, r24
     f30:	ca 01       	movw	r24, r20
     f32:	a0 01       	movw	r20, r0
     f34:	11 24       	eor	r1, r1

00000f36 <.L4^B1>:
     f36:	ff 27       	eor	r31, r31
     f38:	59 1b       	sub	r21, r25

00000f3a <.L5^B1>:
     f3a:	99 f0       	breq	.+38     	; 0xf62 <.L7^B1>
     f3c:	59 3f       	cpi	r21, 0xF9	; 249
     f3e:	50 f4       	brcc	.+20     	; 0xf54 <.L6^B1>
     f40:	50 3e       	cpi	r21, 0xE0	; 224
     f42:	68 f1       	brcs	.+90     	; 0xf9e <.L_ret>
     f44:	1a 16       	cp	r1, r26
     f46:	f0 40       	sbci	r31, 0x00	; 0
     f48:	a2 2f       	mov	r26, r18
     f4a:	23 2f       	mov	r18, r19
     f4c:	34 2f       	mov	r19, r20
     f4e:	44 27       	eor	r20, r20
     f50:	58 5f       	subi	r21, 0xF8	; 248
     f52:	f3 cf       	rjmp	.-26     	; 0xf3a <.L5^B1>

00000f54 <.L6^B1>:
     f54:	46 95       	lsr	r20
     f56:	37 95       	ror	r19
     f58:	27 95       	ror	r18
     f5a:	a7 95       	ror	r26
     f5c:	f0 40       	sbci	r31, 0x00	; 0
     f5e:	53 95       	inc	r21
     f60:	c9 f7       	brne	.-14     	; 0xf54 <.L6^B1>

00000f62 <.L7^B1>:
     f62:	7e f4       	brtc	.+30     	; 0xf82 <.L_add>
     f64:	1f 16       	cp	r1, r31
     f66:	ba 0b       	sbc	r27, r26
     f68:	62 0b       	sbc	r22, r18
     f6a:	73 0b       	sbc	r23, r19
     f6c:	84 0b       	sbc	r24, r20
     f6e:	ba f0       	brmi	.+46     	; 0xf9e <.L_ret>

00000f70 <.L8^B1>:
     f70:	91 50       	subi	r25, 0x01	; 1
     f72:	a1 f0       	breq	.+40     	; 0xf9c <.L9^B1>
     f74:	ff 0f       	add	r31, r31
     f76:	bb 1f       	adc	r27, r27
     f78:	66 1f       	adc	r22, r22
     f7a:	77 1f       	adc	r23, r23
     f7c:	88 1f       	adc	r24, r24
     f7e:	c2 f7       	brpl	.-16     	; 0xf70 <.L8^B1>
     f80:	0e c0       	rjmp	.+28     	; 0xf9e <.L_ret>

00000f82 <.L_add>:
     f82:	ba 0f       	add	r27, r26
     f84:	62 1f       	adc	r22, r18
     f86:	73 1f       	adc	r23, r19
     f88:	84 1f       	adc	r24, r20
     f8a:	48 f4       	brcc	.+18     	; 0xf9e <.L_ret>
     f8c:	87 95       	ror	r24
     f8e:	77 95       	ror	r23
     f90:	67 95       	ror	r22
     f92:	b7 95       	ror	r27
     f94:	f7 95       	ror	r31
     f96:	9e 3f       	cpi	r25, 0xFE	; 254
     f98:	08 f0       	brcs	.+2      	; 0xf9c <.L9^B1>
     f9a:	b0 cf       	rjmp	.-160    	; 0xefc <.L_inf>

00000f9c <.L9^B1>:
     f9c:	93 95       	inc	r25

00000f9e <.L_ret>:
     f9e:	88 0f       	add	r24, r24
     fa0:	08 f0       	brcs	.+2      	; 0xfa4 <.L1^B1>
     fa2:	99 27       	eor	r25, r25

00000fa4 <.L1^B1>:
     fa4:	ee 0f       	add	r30, r30
     fa6:	97 95       	ror	r25
     fa8:	87 95       	ror	r24
     faa:	08 95       	ret

00000fac <__cmpsf2>:
     fac:	0e 94 b9 08 	call	0x1172	; 0x1172 <__fp_cmp>
     fb0:	08 f4       	brcc	.+2      	; 0xfb4 <.L1^B1>
     fb2:	81 e0       	ldi	r24, 0x01	; 1

00000fb4 <.L1^B1>:
     fb4:	08 95       	ret

00000fb6 <__divsf3>:
     fb6:	0e 94 ef 07 	call	0xfde	; 0xfde <__divsf3x>
     fba:	0c 94 f4 08 	jmp	0x11e8	; 0x11e8 <__fp_round>

00000fbe <.L^B1>:
     fbe:	0e 94 ed 08 	call	0x11da	; 0x11da <__fp_pscB>
     fc2:	58 f0       	brcs	.+22     	; 0xfda <.L_nan>
     fc4:	0e 94 e6 08 	call	0x11cc	; 0x11cc <__fp_pscA>
     fc8:	40 f0       	brcs	.+16     	; 0xfda <.L_nan>
     fca:	29 f4       	brne	.+10     	; 0xfd6 <.L_zr>
     fcc:	5f 3f       	cpi	r21, 0xFF	; 255
     fce:	29 f0       	breq	.+10     	; 0xfda <.L_nan>

00000fd0 <.L_inf>:
     fd0:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_inf>

00000fd4 <.L1^B1>:
     fd4:	51 11       	cpse	r21, r1

00000fd6 <.L_zr>:
     fd6:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__fp_szero>

00000fda <.L_nan>:
     fda:	0c 94 e3 08 	jmp	0x11c6	; 0x11c6 <__fp_nan>

00000fde <__divsf3x>:
     fde:	0e 94 05 09 	call	0x120a	; 0x120a <__fp_split3>
     fe2:	68 f3       	brcs	.-38     	; 0xfbe <.L^B1>

00000fe4 <__divsf3_pse>:
     fe4:	99 23       	and	r25, r25
     fe6:	b1 f3       	breq	.-20     	; 0xfd4 <.L1^B1>
     fe8:	55 23       	and	r21, r21
     fea:	91 f3       	breq	.-28     	; 0xfd0 <.L_inf>
     fec:	95 1b       	sub	r25, r21
     fee:	55 0b       	sbc	r21, r21
     ff0:	bb 27       	eor	r27, r27
     ff2:	aa 27       	eor	r26, r26

00000ff4 <.L2^B1>:
     ff4:	62 17       	cp	r22, r18
     ff6:	73 07       	cpc	r23, r19
     ff8:	84 07       	cpc	r24, r20
     ffa:	38 f0       	brcs	.+14     	; 0x100a <.L3^B1>
     ffc:	9f 5f       	subi	r25, 0xFF	; 255
     ffe:	5f 4f       	sbci	r21, 0xFF	; 255
    1000:	22 0f       	add	r18, r18
    1002:	33 1f       	adc	r19, r19
    1004:	44 1f       	adc	r20, r20
    1006:	aa 1f       	adc	r26, r26
    1008:	a9 f3       	breq	.-22     	; 0xff4 <.L2^B1>

0000100a <.L3^B1>:
    100a:	35 d0       	rcall	.+106    	; 0x1076 <.L_div>
    100c:	0e 2e       	mov	r0, r30
    100e:	3a f0       	brmi	.+14     	; 0x101e <.L5^B1>

00001010 <.L4^B1>:
    1010:	e0 e8       	ldi	r30, 0x80	; 128
    1012:	32 d0       	rcall	.+100    	; 0x1078 <.L_div1>
    1014:	91 50       	subi	r25, 0x01	; 1
    1016:	50 40       	sbci	r21, 0x00	; 0
    1018:	e6 95       	lsr	r30
    101a:	00 1c       	adc	r0, r0
    101c:	ca f7       	brpl	.-14     	; 0x1010 <.L4^B1>

0000101e <.L5^B1>:
    101e:	2b d0       	rcall	.+86     	; 0x1076 <.L_div>
    1020:	fe 2f       	mov	r31, r30
    1022:	29 d0       	rcall	.+82     	; 0x1076 <.L_div>
    1024:	66 0f       	add	r22, r22
    1026:	77 1f       	adc	r23, r23
    1028:	88 1f       	adc	r24, r24
    102a:	bb 1f       	adc	r27, r27
    102c:	26 17       	cp	r18, r22
    102e:	37 07       	cpc	r19, r23
    1030:	48 07       	cpc	r20, r24
    1032:	ab 07       	cpc	r26, r27
    1034:	b0 e8       	ldi	r27, 0x80	; 128
    1036:	09 f0       	breq	.+2      	; 0x103a <.L4^B2>
    1038:	bb 0b       	sbc	r27, r27

0000103a <.L4^B2>:
    103a:	80 2d       	mov	r24, r0
    103c:	bf 01       	movw	r22, r30
    103e:	ff 27       	eor	r31, r31
    1040:	93 58       	subi	r25, 0x83	; 131
    1042:	5f 4f       	sbci	r21, 0xFF	; 255
    1044:	3a f0       	brmi	.+14     	; 0x1054 <.L13^B1>
    1046:	9e 3f       	cpi	r25, 0xFE	; 254
    1048:	51 05       	cpc	r21, r1
    104a:	78 f0       	brcs	.+30     	; 0x106a <.L15^B1>
    104c:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_inf>

00001050 <.L12^B1>:
    1050:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__fp_szero>

00001054 <.L13^B1>:
    1054:	5f 3f       	cpi	r21, 0xFF	; 255
    1056:	e4 f3       	brlt	.-8      	; 0x1050 <.L12^B1>
    1058:	98 3e       	cpi	r25, 0xE8	; 232
    105a:	d4 f3       	brlt	.-12     	; 0x1050 <.L12^B1>

0000105c <.L14^B1>:
    105c:	86 95       	lsr	r24
    105e:	77 95       	ror	r23
    1060:	67 95       	ror	r22
    1062:	b7 95       	ror	r27
    1064:	f7 95       	ror	r31
    1066:	9f 5f       	subi	r25, 0xFF	; 255
    1068:	c9 f7       	brne	.-14     	; 0x105c <.L14^B1>

0000106a <.L15^B1>:
    106a:	88 0f       	add	r24, r24
    106c:	91 1d       	adc	r25, r1
    106e:	96 95       	lsr	r25
    1070:	87 95       	ror	r24
    1072:	97 f9       	bld	r25, 7
    1074:	08 95       	ret

00001076 <.L_div>:
    1076:	e1 e0       	ldi	r30, 0x01	; 1

00001078 <.L_div1>:
    1078:	66 0f       	add	r22, r22
    107a:	77 1f       	adc	r23, r23
    107c:	88 1f       	adc	r24, r24
    107e:	bb 1f       	adc	r27, r27
    1080:	62 17       	cp	r22, r18
    1082:	73 07       	cpc	r23, r19
    1084:	84 07       	cpc	r24, r20
    1086:	ba 07       	cpc	r27, r26
    1088:	20 f0       	brcs	.+8      	; 0x1092 <.L2^B2>
    108a:	62 1b       	sub	r22, r18
    108c:	73 0b       	sbc	r23, r19
    108e:	84 0b       	sbc	r24, r20
    1090:	ba 0b       	sbc	r27, r26

00001092 <.L2^B2>:
    1092:	ee 1f       	adc	r30, r30
    1094:	88 f7       	brcc	.-30     	; 0x1078 <.L_div1>
    1096:	e0 95       	com	r30
    1098:	08 95       	ret

0000109a <__fixunssfsi>:
    109a:	0e 94 0d 09 	call	0x121a	; 0x121a <__fp_splitA>
    109e:	88 f0       	brcs	.+34     	; 0x10c2 <.L_err>
    10a0:	9f 57       	subi	r25, 0x7F	; 127
    10a2:	98 f0       	brcs	.+38     	; 0x10ca <.L_zr>
    10a4:	b9 2f       	mov	r27, r25
    10a6:	99 27       	eor	r25, r25
    10a8:	b7 51       	subi	r27, 0x17	; 23
    10aa:	b0 f0       	brcs	.+44     	; 0x10d8 <.L4^B1>
    10ac:	e1 f0       	breq	.+56     	; 0x10e6 <.L_sign>

000010ae <.L1^B1>:
    10ae:	66 0f       	add	r22, r22
    10b0:	77 1f       	adc	r23, r23
    10b2:	88 1f       	adc	r24, r24
    10b4:	99 1f       	adc	r25, r25
    10b6:	1a f0       	brmi	.+6      	; 0x10be <.L2^B1>
    10b8:	ba 95       	dec	r27
    10ba:	c9 f7       	brne	.-14     	; 0x10ae <.L1^B1>
    10bc:	14 c0       	rjmp	.+40     	; 0x10e6 <.L_sign>

000010be <.L2^B1>:
    10be:	b1 30       	cpi	r27, 0x01	; 1
    10c0:	91 f0       	breq	.+36     	; 0x10e6 <.L_sign>

000010c2 <.L_err>:
    10c2:	0e 94 27 09 	call	0x124e	; 0x124e <__fp_zero>
    10c6:	b1 e0       	ldi	r27, 0x01	; 1
    10c8:	08 95       	ret

000010ca <.L_zr>:
    10ca:	0c 94 27 09 	jmp	0x124e	; 0x124e <__fp_zero>

000010ce <.L3^B1>:
    10ce:	67 2f       	mov	r22, r23
    10d0:	78 2f       	mov	r23, r24
    10d2:	88 27       	eor	r24, r24
    10d4:	b8 5f       	subi	r27, 0xF8	; 248
    10d6:	39 f0       	breq	.+14     	; 0x10e6 <.L_sign>

000010d8 <.L4^B1>:
    10d8:	b9 3f       	cpi	r27, 0xF9	; 249
    10da:	cc f3       	brlt	.-14     	; 0x10ce <.L3^B1>

000010dc <.L5^B1>:
    10dc:	86 95       	lsr	r24
    10de:	77 95       	ror	r23
    10e0:	67 95       	ror	r22
    10e2:	b3 95       	inc	r27
    10e4:	d9 f7       	brne	.-10     	; 0x10dc <.L5^B1>

000010e6 <.L_sign>:
    10e6:	3e f4       	brtc	.+14     	; 0x10f6 <.L6^B1>
    10e8:	90 95       	com	r25
    10ea:	80 95       	com	r24
    10ec:	70 95       	com	r23
    10ee:	61 95       	neg	r22
    10f0:	7f 4f       	sbci	r23, 0xFF	; 255
    10f2:	8f 4f       	sbci	r24, 0xFF	; 255
    10f4:	9f 4f       	sbci	r25, 0xFF	; 255

000010f6 <.L6^B1>:
    10f6:	08 95       	ret

000010f8 <__floatunsisf>:
    10f8:	e8 94       	clt
    10fa:	09 c0       	rjmp	.+18     	; 0x110e <.L1^B1>

000010fc <__floatsisf>:
    10fc:	97 fb       	bst	r25, 7
    10fe:	3e f4       	brtc	.+14     	; 0x110e <.L1^B1>
    1100:	90 95       	com	r25
    1102:	80 95       	com	r24
    1104:	70 95       	com	r23
    1106:	61 95       	neg	r22
    1108:	7f 4f       	sbci	r23, 0xFF	; 255
    110a:	8f 4f       	sbci	r24, 0xFF	; 255
    110c:	9f 4f       	sbci	r25, 0xFF	; 255

0000110e <.L1^B1>:
    110e:	99 23       	and	r25, r25
    1110:	a9 f0       	breq	.+42     	; 0x113c <.L4^B1>
    1112:	f9 2f       	mov	r31, r25
    1114:	96 e9       	ldi	r25, 0x96	; 150
    1116:	bb 27       	eor	r27, r27

00001118 <.L2^B1>:
    1118:	93 95       	inc	r25
    111a:	f6 95       	lsr	r31
    111c:	87 95       	ror	r24
    111e:	77 95       	ror	r23
    1120:	67 95       	ror	r22
    1122:	b7 95       	ror	r27
    1124:	f1 11       	cpse	r31, r1
    1126:	f8 cf       	rjmp	.-16     	; 0x1118 <.L2^B1>
    1128:	fa f4       	brpl	.+62     	; 0x1168 <.L_pack>
    112a:	bb 0f       	add	r27, r27
    112c:	11 f4       	brne	.+4      	; 0x1132 <.L3^B1>
    112e:	60 ff       	sbrs	r22, 0
    1130:	1b c0       	rjmp	.+54     	; 0x1168 <.L_pack>

00001132 <.L3^B1>:
    1132:	6f 5f       	subi	r22, 0xFF	; 255
    1134:	7f 4f       	sbci	r23, 0xFF	; 255
    1136:	8f 4f       	sbci	r24, 0xFF	; 255
    1138:	9f 4f       	sbci	r25, 0xFF	; 255
    113a:	16 c0       	rjmp	.+44     	; 0x1168 <.L_pack>

0000113c <.L4^B1>:
    113c:	88 23       	and	r24, r24
    113e:	11 f0       	breq	.+4      	; 0x1144 <.L5^B1>
    1140:	96 e9       	ldi	r25, 0x96	; 150
    1142:	11 c0       	rjmp	.+34     	; 0x1166 <.L8^B1>

00001144 <.L5^B1>:
    1144:	77 23       	and	r23, r23
    1146:	21 f0       	breq	.+8      	; 0x1150 <.L6^B1>
    1148:	9e e8       	ldi	r25, 0x8E	; 142
    114a:	87 2f       	mov	r24, r23
    114c:	76 2f       	mov	r23, r22
    114e:	05 c0       	rjmp	.+10     	; 0x115a <.L7^B1>

00001150 <.L6^B1>:
    1150:	66 23       	and	r22, r22
    1152:	71 f0       	breq	.+28     	; 0x1170 <.L9^B1>
    1154:	96 e8       	ldi	r25, 0x86	; 134
    1156:	86 2f       	mov	r24, r22
    1158:	70 e0       	ldi	r23, 0x00	; 0

0000115a <.L7^B1>:
    115a:	60 e0       	ldi	r22, 0x00	; 0
    115c:	2a f0       	brmi	.+10     	; 0x1168 <.L_pack>

0000115e <.L10^B1>:
    115e:	9a 95       	dec	r25
    1160:	66 0f       	add	r22, r22
    1162:	77 1f       	adc	r23, r23
    1164:	88 1f       	adc	r24, r24

00001166 <.L8^B1>:
    1166:	da f7       	brpl	.-10     	; 0x115e <.L10^B1>

00001168 <.L_pack>:
    1168:	88 0f       	add	r24, r24
    116a:	96 95       	lsr	r25
    116c:	87 95       	ror	r24
    116e:	97 f9       	bld	r25, 7

00001170 <.L9^B1>:
    1170:	08 95       	ret

00001172 <__fp_cmp>:
    1172:	99 0f       	add	r25, r25
    1174:	00 08       	sbc	r0, r0
    1176:	55 0f       	add	r21, r21
    1178:	aa 0b       	sbc	r26, r26
    117a:	e0 e8       	ldi	r30, 0x80	; 128
    117c:	fe ef       	ldi	r31, 0xFE	; 254
    117e:	16 16       	cp	r1, r22
    1180:	17 06       	cpc	r1, r23
    1182:	e8 07       	cpc	r30, r24
    1184:	f9 07       	cpc	r31, r25
    1186:	c0 f0       	brcs	.+48     	; 0x11b8 <.L9^B1>
    1188:	12 16       	cp	r1, r18
    118a:	13 06       	cpc	r1, r19
    118c:	e4 07       	cpc	r30, r20
    118e:	f5 07       	cpc	r31, r21
    1190:	98 f0       	brcs	.+38     	; 0x11b8 <.L9^B1>
    1192:	62 1b       	sub	r22, r18
    1194:	73 0b       	sbc	r23, r19
    1196:	84 0b       	sbc	r24, r20
    1198:	95 0b       	sbc	r25, r21
    119a:	39 f4       	brne	.+14     	; 0x11aa <.L1^B1>
    119c:	0a 26       	eor	r0, r26
    119e:	61 f0       	breq	.+24     	; 0x11b8 <.L9^B1>
    11a0:	23 2b       	or	r18, r19
    11a2:	24 2b       	or	r18, r20
    11a4:	25 2b       	or	r18, r21
    11a6:	21 f4       	brne	.+8      	; 0x11b0 <.L2^B1>
    11a8:	08 95       	ret

000011aa <.L1^B1>:
    11aa:	0a 26       	eor	r0, r26
    11ac:	09 f4       	brne	.+2      	; 0x11b0 <.L2^B1>
    11ae:	a1 40       	sbci	r26, 0x01	; 1

000011b0 <.L2^B1>:
    11b0:	a6 95       	lsr	r26
    11b2:	8f ef       	ldi	r24, 0xFF	; 255
    11b4:	81 1d       	adc	r24, r1
    11b6:	81 1d       	adc	r24, r1

000011b8 <.L9^B1>:
    11b8:	08 95       	ret

000011ba <__fp_inf>:
    11ba:	97 f9       	bld	r25, 7
    11bc:	9f 67       	ori	r25, 0x7F	; 127
    11be:	80 e8       	ldi	r24, 0x80	; 128
    11c0:	70 e0       	ldi	r23, 0x00	; 0
    11c2:	60 e0       	ldi	r22, 0x00	; 0
    11c4:	08 95       	ret

000011c6 <__fp_nan>:
    11c6:	9f ef       	ldi	r25, 0xFF	; 255
    11c8:	80 ec       	ldi	r24, 0xC0	; 192
    11ca:	08 95       	ret

000011cc <__fp_pscA>:
    11cc:	00 24       	eor	r0, r0
    11ce:	0a 94       	dec	r0
    11d0:	16 16       	cp	r1, r22
    11d2:	17 06       	cpc	r1, r23
    11d4:	18 06       	cpc	r1, r24
    11d6:	09 06       	cpc	r0, r25
    11d8:	08 95       	ret

000011da <__fp_pscB>:
    11da:	00 24       	eor	r0, r0
    11dc:	0a 94       	dec	r0
    11de:	12 16       	cp	r1, r18
    11e0:	13 06       	cpc	r1, r19
    11e2:	14 06       	cpc	r1, r20
    11e4:	05 06       	cpc	r0, r21
    11e6:	08 95       	ret

000011e8 <__fp_round>:
    11e8:	09 2e       	mov	r0, r25
    11ea:	03 94       	inc	r0
    11ec:	00 0c       	add	r0, r0
    11ee:	11 f4       	brne	.+4      	; 0x11f4 <.L1^B1>
    11f0:	88 23       	and	r24, r24
    11f2:	52 f0       	brmi	.+20     	; 0x1208 <.L3^B1>

000011f4 <.L1^B1>:
    11f4:	bb 0f       	add	r27, r27
    11f6:	40 f4       	brcc	.+16     	; 0x1208 <.L3^B1>
    11f8:	bf 2b       	or	r27, r31
    11fa:	11 f4       	brne	.+4      	; 0x1200 <.L2^B1>
    11fc:	60 ff       	sbrs	r22, 0
    11fe:	04 c0       	rjmp	.+8      	; 0x1208 <.L3^B1>

00001200 <.L2^B1>:
    1200:	6f 5f       	subi	r22, 0xFF	; 255
    1202:	7f 4f       	sbci	r23, 0xFF	; 255
    1204:	8f 4f       	sbci	r24, 0xFF	; 255
    1206:	9f 4f       	sbci	r25, 0xFF	; 255

00001208 <.L3^B1>:
    1208:	08 95       	ret

0000120a <__fp_split3>:
    120a:	57 fd       	sbrc	r21, 7
    120c:	90 58       	subi	r25, 0x80	; 128
    120e:	44 0f       	add	r20, r20
    1210:	55 1f       	adc	r21, r21
    1212:	59 f0       	breq	.+22     	; 0x122a <.L4^B1>
    1214:	5f 3f       	cpi	r21, 0xFF	; 255
    1216:	71 f0       	breq	.+28     	; 0x1234 <.L5^B1>

00001218 <.L1^B1>:
    1218:	47 95       	ror	r20

0000121a <__fp_splitA>:
    121a:	88 0f       	add	r24, r24
    121c:	97 fb       	bst	r25, 7
    121e:	99 1f       	adc	r25, r25
    1220:	61 f0       	breq	.+24     	; 0x123a <.L6^B1>
    1222:	9f 3f       	cpi	r25, 0xFF	; 255
    1224:	79 f0       	breq	.+30     	; 0x1244 <.L7^B1>

00001226 <.L3^B1>:
    1226:	87 95       	ror	r24
    1228:	08 95       	ret

0000122a <.L4^B1>:
    122a:	12 16       	cp	r1, r18
    122c:	13 06       	cpc	r1, r19
    122e:	14 06       	cpc	r1, r20
    1230:	55 1f       	adc	r21, r21
    1232:	f2 cf       	rjmp	.-28     	; 0x1218 <.L1^B1>

00001234 <.L5^B1>:
    1234:	46 95       	lsr	r20
    1236:	f1 df       	rcall	.-30     	; 0x121a <__fp_splitA>
    1238:	08 c0       	rjmp	.+16     	; 0x124a <.L8^B1>

0000123a <.L6^B1>:
    123a:	16 16       	cp	r1, r22
    123c:	17 06       	cpc	r1, r23
    123e:	18 06       	cpc	r1, r24
    1240:	99 1f       	adc	r25, r25
    1242:	f1 cf       	rjmp	.-30     	; 0x1226 <.L3^B1>

00001244 <.L7^B1>:
    1244:	86 95       	lsr	r24
    1246:	71 05       	cpc	r23, r1
    1248:	61 05       	cpc	r22, r1

0000124a <.L8^B1>:
    124a:	08 94       	sec
    124c:	08 95       	ret

0000124e <__fp_zero>:
    124e:	e8 94       	clt

00001250 <__fp_szero>:
    1250:	bb 27       	eor	r27, r27
    1252:	66 27       	eor	r22, r22
    1254:	77 27       	eor	r23, r23
    1256:	cb 01       	movw	r24, r22
    1258:	97 f9       	bld	r25, 7
    125a:	08 95       	ret

0000125c <__gesf2>:
    125c:	0e 94 b9 08 	call	0x1172	; 0x1172 <__fp_cmp>
    1260:	08 f4       	brcc	.+2      	; 0x1264 <.L1^B1>
    1262:	8f ef       	ldi	r24, 0xFF	; 255

00001264 <.L1^B1>:
    1264:	08 95       	ret

00001266 <__mulsf3>:
    1266:	0e 94 46 09 	call	0x128c	; 0x128c <__mulsf3x>
    126a:	0c 94 f4 08 	jmp	0x11e8	; 0x11e8 <__fp_round>

0000126e <.L^B1>:
    126e:	0e 94 e6 08 	call	0x11cc	; 0x11cc <__fp_pscA>
    1272:	38 f0       	brcs	.+14     	; 0x1282 <.L1^B1>
    1274:	0e 94 ed 08 	call	0x11da	; 0x11da <__fp_pscB>
    1278:	20 f0       	brcs	.+8      	; 0x1282 <.L1^B1>
    127a:	95 23       	and	r25, r21
    127c:	11 f0       	breq	.+4      	; 0x1282 <.L1^B1>
    127e:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_inf>

00001282 <.L1^B1>:
    1282:	0c 94 e3 08 	jmp	0x11c6	; 0x11c6 <__fp_nan>

00001286 <.L2^B1>:
    1286:	11 24       	eor	r1, r1
    1288:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__fp_szero>

0000128c <__mulsf3x>:
    128c:	0e 94 05 09 	call	0x120a	; 0x120a <__fp_split3>
    1290:	70 f3       	brcs	.-36     	; 0x126e <.L^B1>

00001292 <__mulsf3_pse>:
    1292:	95 9f       	mul	r25, r21
    1294:	c1 f3       	breq	.-16     	; 0x1286 <.L2^B1>
    1296:	95 0f       	add	r25, r21
    1298:	50 e0       	ldi	r21, 0x00	; 0
    129a:	55 1f       	adc	r21, r21
    129c:	62 9f       	mul	r22, r18
    129e:	f0 01       	movw	r30, r0
    12a0:	72 9f       	mul	r23, r18
    12a2:	bb 27       	eor	r27, r27
    12a4:	f0 0d       	add	r31, r0
    12a6:	b1 1d       	adc	r27, r1
    12a8:	63 9f       	mul	r22, r19
    12aa:	aa 27       	eor	r26, r26
    12ac:	f0 0d       	add	r31, r0
    12ae:	b1 1d       	adc	r27, r1
    12b0:	aa 1f       	adc	r26, r26
    12b2:	64 9f       	mul	r22, r20
    12b4:	66 27       	eor	r22, r22
    12b6:	b0 0d       	add	r27, r0
    12b8:	a1 1d       	adc	r26, r1
    12ba:	66 1f       	adc	r22, r22
    12bc:	82 9f       	mul	r24, r18
    12be:	22 27       	eor	r18, r18
    12c0:	b0 0d       	add	r27, r0
    12c2:	a1 1d       	adc	r26, r1
    12c4:	62 1f       	adc	r22, r18
    12c6:	73 9f       	mul	r23, r19
    12c8:	b0 0d       	add	r27, r0
    12ca:	a1 1d       	adc	r26, r1
    12cc:	62 1f       	adc	r22, r18
    12ce:	83 9f       	mul	r24, r19
    12d0:	a0 0d       	add	r26, r0
    12d2:	61 1d       	adc	r22, r1
    12d4:	22 1f       	adc	r18, r18
    12d6:	74 9f       	mul	r23, r20
    12d8:	33 27       	eor	r19, r19
    12da:	a0 0d       	add	r26, r0
    12dc:	61 1d       	adc	r22, r1
    12de:	23 1f       	adc	r18, r19
    12e0:	84 9f       	mul	r24, r20
    12e2:	60 0d       	add	r22, r0
    12e4:	21 1d       	adc	r18, r1
    12e6:	82 2f       	mov	r24, r18
    12e8:	76 2f       	mov	r23, r22
    12ea:	6a 2f       	mov	r22, r26
    12ec:	11 24       	eor	r1, r1
    12ee:	9f 57       	subi	r25, 0x7F	; 127
    12f0:	50 40       	sbci	r21, 0x00	; 0
    12f2:	9a f0       	brmi	.+38     	; 0x131a <.L13^B1>
    12f4:	f1 f0       	breq	.+60     	; 0x1332 <.L15^B1>

000012f6 <.L10^B1>:
    12f6:	88 23       	and	r24, r24
    12f8:	4a f0       	brmi	.+18     	; 0x130c <.L11^B1>
    12fa:	ee 0f       	add	r30, r30
    12fc:	ff 1f       	adc	r31, r31
    12fe:	bb 1f       	adc	r27, r27
    1300:	66 1f       	adc	r22, r22
    1302:	77 1f       	adc	r23, r23
    1304:	88 1f       	adc	r24, r24
    1306:	91 50       	subi	r25, 0x01	; 1
    1308:	50 40       	sbci	r21, 0x00	; 0
    130a:	a9 f7       	brne	.-22     	; 0x12f6 <.L10^B1>

0000130c <.L11^B1>:
    130c:	9e 3f       	cpi	r25, 0xFE	; 254
    130e:	51 05       	cpc	r21, r1
    1310:	80 f0       	brcs	.+32     	; 0x1332 <.L15^B1>
    1312:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <__fp_inf>

00001316 <.L12^B1>:
    1316:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__fp_szero>

0000131a <.L13^B1>:
    131a:	5f 3f       	cpi	r21, 0xFF	; 255
    131c:	e4 f3       	brlt	.-8      	; 0x1316 <.L12^B1>
    131e:	98 3e       	cpi	r25, 0xE8	; 232
    1320:	d4 f3       	brlt	.-12     	; 0x1316 <.L12^B1>

00001322 <.L14^B1>:
    1322:	86 95       	lsr	r24
    1324:	77 95       	ror	r23
    1326:	67 95       	ror	r22
    1328:	b7 95       	ror	r27
    132a:	f7 95       	ror	r31
    132c:	e7 95       	ror	r30
    132e:	9f 5f       	subi	r25, 0xFF	; 255
    1330:	c1 f7       	brne	.-16     	; 0x1322 <.L14^B1>

00001332 <.L15^B1>:
    1332:	fe 2b       	or	r31, r30
    1334:	88 0f       	add	r24, r24
    1336:	91 1d       	adc	r25, r1
    1338:	96 95       	lsr	r25
    133a:	87 95       	ror	r24
    133c:	97 f9       	bld	r25, 7
    133e:	08 95       	ret

00001340 <_exit>:
    1340:	f8 94       	cli

00001342 <__stop_program>:
    1342:	ff cf       	rjmp	.-2      	; 0x1342 <__stop_program>
